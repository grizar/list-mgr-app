{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/immediate/lib/queueMicrotask.js","../../node_modules/immediate/lib/mutation.js","../../node_modules/immediate/lib/messageChannel.js","../../node_modules/immediate/lib/stateChange.js","../../node_modules/immediate/lib/timeout.js","../../node_modules/immediate/lib/index.js","../../node_modules/uuid/dist/rng-browser.js","../../node_modules/uuid/dist/bytesToUuid.js","../../node_modules/uuid/dist/v1.js","../../node_modules/uuid/dist/v35.js","../../node_modules/uuid/dist/md5-browser.js","../../node_modules/uuid/dist/v3.js","../../node_modules/uuid/dist/v4.js","../../node_modules/uuid/dist/sha1-browser.js","../../node_modules/uuid/dist/v5.js","../../node_modules/uuid/dist/index.js","../../node_modules/uuid/wrapper.mjs","../../node_modules/spark-md5/spark-md5.js","../../node_modules/vuvuzela/index.js","../../node_modules/argsarray/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../node_modules/pouchdb-browser/lib/index.es.js","../../src/components/state.js","../../node_modules/smelte/src/components/Icon/Icon.svelte","../../node_modules/smelte/src/utils/classes.js","../../node_modules/smelte/src/components/Ripple/ripple.js","../../node_modules/smelte/src/components/Button/Button.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/smelte/src/components/Util/Scrim.svelte","../../node_modules/smelte/src/components/Util/index.js","../../node_modules/svelte-waypoint/src/Waypoint.svelte","../../node_modules/smelte/src/components/Image/Image.svelte","../../node_modules/smelte/src/components/List/ListItem.svelte","../../node_modules/smelte/src/components/List/List.svelte","../../node_modules/smelte/src/components/TextField/Label.svelte","../../node_modules/smelte/src/components/TextField/Hint.svelte","../../node_modules/smelte/src/components/TextField/Underline.svelte","../../node_modules/smelte/src/components/TextField/TextField.svelte","../../node_modules/smelte/src/breakpoints.js","../../node_modules/smelte/src/components/NavigationDrawer/NavigationDrawer.svelte","../../node_modules/smelte/src/components/Checkbox/Label.svelte","../../node_modules/smelte/src/components/Ripple/Ripple.svelte","../../node_modules/smelte/src/components/Checkbox/Checkbox.svelte","../../node_modules/smelte/src/components/RadioButton/RadioButton.svelte","../../node_modules/smelte/src/components/RadioButton/RadioButtonGroup.svelte","../../node_modules/smelte/src/components/AppBar/AppBar.svelte","../../node_modules/smelte/src/utils/hide-list-action.js","../../node_modules/smelte/src/components/Select/Select.svelte","../../node_modules/smelte/src/components/ProgressCircular/ProgressCircular.svelte","../../node_modules/smelte/src/components/Snackbar/Snackbar.svelte","../../node_modules/svelte-spa-router/wrap.js","../../node_modules/regexparam/dist/regexparam.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../src/components/Item.svelte","../../src/views/ItemListView.svelte","../../node_modules/@zxing/library/umd/index.js","../../src/components/Barcode.svelte","../../src/views/ItemDetailView.svelte","../../src/views/CategoryListView.svelte","../../src/views/CategoryDetailView.svelte","../../src/views/ParameterView.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","'use strict';\nexports.test = function () {\n  return typeof global.queueMicrotask === 'function';\n};\n\nexports.install = function (func) {\n  return function () {\n    global.queueMicrotask(func);\n  };\n};\n","'use strict';\n//based off rsvp https://github.com/tildeio/rsvp.js\n//license https://github.com/tildeio/rsvp.js/blob/master/LICENSE\n//https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/asap.js\n\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nexports.test = function () {\n  return Mutation;\n};\n\nexports.install = function (handle) {\n  var called = 0;\n  var observer = new Mutation(handle);\n  var element = global.document.createTextNode('');\n  observer.observe(element, {\n    characterData: true\n  });\n  return function () {\n    element.data = (called = ++called % 2);\n  };\n};","'use strict';\n\nexports.test = function () {\n  if (global.setImmediate) {\n    // we can only get here in IE10\n    // which doesn't handel postMessage well\n    return false;\n  }\n  return typeof global.MessageChannel !== 'undefined';\n};\n\nexports.install = function (func) {\n  var channel = new global.MessageChannel();\n  channel.port1.onmessage = func;\n  return function () {\n    channel.port2.postMessage(0);\n  };\n};","'use strict';\n\nexports.test = function () {\n  return 'document' in global && 'onreadystatechange' in global.document.createElement('script');\n};\n\nexports.install = function (handle) {\n  return function () {\n\n    // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n    // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n    var scriptEl = global.document.createElement('script');\n    scriptEl.onreadystatechange = function () {\n      handle();\n\n      scriptEl.onreadystatechange = null;\n      scriptEl.parentNode.removeChild(scriptEl);\n      scriptEl = null;\n    };\n    global.document.documentElement.appendChild(scriptEl);\n\n    return handle;\n  };\n};","'use strict';\nexports.test = function () {\n  return true;\n};\n\nexports.install = function (t) {\n  return function () {\n    setTimeout(t, 0);\n  };\n};","'use strict';\nvar types = [\n  require('./nextTick'),\n  require('./queueMicrotask'),\n  require('./mutation.js'),\n  require('./messageChannel'),\n  require('./stateChange'),\n  require('./timeout')\n];\nvar draining;\nvar currentQueue;\nvar queueIndex = -1;\nvar queue = [];\nvar scheduled = false;\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n  draining = false;\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n  if (queue.length) {\n    nextTick();\n  }\n}\n\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  if (draining) {\n    return;\n  }\n  scheduled = false;\n  draining = true;\n  var len = queue.length;\n  var timeout = setTimeout(cleanUpNextTick);\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n    while (currentQueue && ++queueIndex < len) {\n      currentQueue[queueIndex].run();\n    }\n    queueIndex = -1;\n    len = queue.length;\n  }\n  currentQueue = null;\n  queueIndex = -1;\n  draining = false;\n  clearTimeout(timeout);\n}\nvar scheduleDrain;\nvar i = -1;\nvar len = types.length;\nwhile (++i < len) {\n  if (types[i] && types[i].test && types[i].test()) {\n    scheduleDrain = types[i].install(nextTick);\n    break;\n  }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\nItem.prototype.run = function () {\n  var fun = this.fun;\n  var array = this.array;\n  switch (array.length) {\n  case 0:\n    return fun();\n  case 1:\n    return fun(array[0]);\n  case 2:\n    return fun(array[0], array[1]);\n  case 3:\n    return fun(array[0], array[1], array[2]);\n  default:\n    return fun.apply(null, array);\n  }\n\n};\nmodule.exports = immediate;\nfunction immediate(task) {\n  var args = new Array(arguments.length - 1);\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n  queue.push(new Item(task, args));\n  if (!scheduled && !draining) {\n    scheduled = true;\n    scheduleDrain();\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nconst getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction bytesToUuid(buf, offset) {\n  const i = offset || 0;\n  const bth = byteToHex; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  return (bth[buf[i + 0]] + bth[buf[i + 1]] + bth[buf[i + 2]] + bth[buf[i + 3]] + '-' + bth[buf[i + 4]] + bth[buf[i + 5]] + '-' + bth[buf[i + 6]] + bth[buf[i + 7]] + '-' + bth[buf[i + 8]] + bth[buf[i + 9]] + '-' + bth[buf[i + 10]] + bth[buf[i + 11]] + bth[buf[i + 12]] + bth[buf[i + 13]] + bth[buf[i + 14]] + bth[buf[i + 15]]).toLowerCase();\n}\n\nvar _default = bytesToUuid;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _bytesToUuid = _interopRequireDefault(require(\"./bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || [];\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _bytesToUuid.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _bytesToUuid = _interopRequireDefault(require(\"./bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  const bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    const off = buf && offset || 0;\n    if (typeof value === 'string') value = stringToBytes(value);\n    if (typeof namespace === 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) {\n      throw TypeError('value must be an array of bytes');\n    }\n\n    if (!Array.isArray(namespace) || namespace.length !== 16) {\n      throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n    } // Per 4.3\n\n\n    const bytes = hashfunc(namespace.concat(value));\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      for (let idx = 0; idx < 16; ++idx) {\n        buf[off + idx] = bytes[idx];\n      }\n    }\n\n    return buf || (0, _bytesToUuid.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _bytesToUuid = _interopRequireDefault(require(\"./bytesToUuid.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (typeof options === 'string') {\n    buf = options === 'binary' ? new Uint8Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    const start = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[start + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _bytesToUuid.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","import uuid from './dist/index.js';\nexport const v1 = uuid.v1;\nexport const v3 = uuid.v3;\nexport const v4 = uuid.v4;\nexport const v5 = uuid.v5;\n","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import immediate from 'immediate';\nimport { v4 } from 'uuid';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\nimport getArguments from 'argsarray';\nimport inherits from 'inherits';\nimport EE from 'events';\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EE);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EE.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EE.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    var names = Object.getOwnPropertyNames(error);\n    for (var i = 0, len = names.length; i < len; i++) {\n      if (typeof error[names[i]] !== 'function') {\n        this[names[i]] = error[names[i]];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EE.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = self.setImmediate || self.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = v4; // mimic old import, only v4 is ever used elsewhere\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EE);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EE.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      immediate(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EE);\n\nfunction AbstractPouchDB() {\n  EE.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      /* istanbul ignore if */\n      if (!path) {\n        err = new Error('invalid rev tree');\n        err.docId = id;\n        return cb(err);\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EE();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EE.prototype).forEach(function (key) {\n    if (typeof EE.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.2.2\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n//#7458: execute function mergeAndedSelectors on nested $and\nfunction mergeAndedSelectorsNested(obj) {\n    for (var prop in obj) {\n        if (Array.isArray(obj)) {\n            for (var i in obj) {\n                if (obj[i]['$and']) {\n                    obj[i] = mergeAndedSelectors(obj[i]['$and']);\n                }\n            }\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            mergeAndedSelectorsNested(value); // <- recursive call\n        }\n    }\n    return obj;\n}\n\n//#7458: determine id $and is present in selector (at any level)\nfunction isAndInSelector(obj, isAnd) {\n    for (var prop in obj) {\n        if (prop === '$and') {\n            isAnd = true;\n        }\n        var value = obj[prop];\n        if (typeof value === 'object') {\n            isAnd = isAndInSelector(value, isAnd); // <- recursive call\n        }\n    }\n    return isAnd;\n}\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n    //#7458: if $and is present in selector (at any level) merge nested $and\n    if (isAndInSelector(result, false)) {\n        result = mergeAndedSelectorsNested(result);\n        if ('$and' in result) {\n            result = mergeAndedSelectors(result['$and']);\n        }\n        wasAnded = true;\n    }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  // is matcher an object, if so continue recursion\n  if (typeof matcher === 'object') {\n    return Object.keys(matcher).every(function (userOperator) {\n      var userValue = matcher[userOperator];\n      return match(userOperator, doc, userValue, parsedField, docFieldValue);\n    });\n  }\n\n  // no more depth, No need to recurse further\n  return matcher === docFieldValue;\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-/.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      immediate(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return immediate(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function (e) {\n    var msg = e.target.error && e.target.error.message;\n\n    if (!msg) {\n      msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    } else if (msg.indexOf(\"stored database is a higher version\") !== -1) {\n      msg = new Error('This DB was created with the newer \"indexeddb\" adapter, but you are trying to open it with the older \"idb\" adapter');\n    }\n\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc && doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    options.credentials = 'include';\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  immediate(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      return {};\n    }).then(function (result) {\n      // Bad response or missing `uuid` should not prevent ID generation.\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      var url = path.substring(0, 1) === '/' ?\n        genUrl(host, path.substring(1)) :\n        genDBUrl(host, path);\n      return ourFetch(url, options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if ('buffer' in response) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            var typeFieldDescriptor = Object.getOwnPropertyDescriptor(blob.__proto__, 'type');\n            if (!typeFieldDescriptor || typeFieldDescriptor.set) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser && typeof response.buffer === 'function') {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev$$1,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev$$1, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        immediate(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      immediate(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      immediate(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              immediate(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate$$1) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate$$1 ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    immediate(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EE);\nfunction Replication() {\n  EE.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EE);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB;\n","import { writable, get } from \"svelte/store\";\r\nimport PouchDB from \"pouchdb-browser\";\r\n\r\nexport const locLanguages = writable([{ value: 'auto', text: 'Auto' }, { value: 'FR', text: 'Français' }, { value: 'EN', text: 'English' }]);\r\nexport const parameters = createParams();\r\nexport const local = createLocal();\r\nexport const shoppingList = writable([]);\r\nexport const categoryList = writable([]);\r\n\r\nvar db;\r\n\r\n// ****************************************************************************************\r\n// Utilities\r\n// ****************************************************************************************\r\n\r\nfunction sansAccent(str) {\r\n  var accent = [\r\n    /[\\300-\\306]/g, /[\\340-\\346]/g, // A, a\r\n    /[\\310-\\313]/g, /[\\350-\\353]/g, // E, e\r\n    /[\\314-\\317]/g, /[\\354-\\357]/g, // I, i\r\n    /[\\322-\\330]/g, /[\\362-\\370]/g, // O, o\r\n    /[\\331-\\334]/g, /[\\371-\\374]/g, // U, u\r\n    /[\\321]/g, /[\\361]/g, // N, n\r\n    /[\\307]/g, /[\\347]/g, // C, c\r\n  ];\r\n  var noaccent = ['A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U', 'u', 'N', 'n', 'C', 'c'];\r\n\r\n  for (var i = 0; i < accent.length; i++) {\r\n    str = str.replace(accent[i], noaccent[i]);\r\n  }\r\n  return str;\r\n\r\n  return str;\r\n}\r\n\r\n// ****************************************************************************************\r\n\r\nfunction readParams(params) {\r\n\r\n  function getString(key, defaultValue) {\r\n    var value = localStorage.getItem(key);\r\n    if (value == null) {\r\n      localStorage.setItem(key, defaultValue);\r\n      return defaultValue;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  function getBoolean(key, defaultValue) {\r\n    var value = localStorage.getItem(key);\r\n    if (value == null) {\r\n      localStorage.setItem(key, defaultValue ? \"1\" : \"0\");\r\n      return defaultValue;\r\n    } else {\r\n      return (value == \"1\" ? true : false);\r\n    }\r\n  }\r\n\r\n  // Upgrade parameter object to latest parameters set\r\n  params.protocol = getString('protocol', 'http');\r\n  params.server = getString('server', '');\r\n  params.port = getString('port', '');\r\n  params.database = getString('database', '');\r\n  params.showPurchasedAtTheEnd = getBoolean('showPurchasedAtTheEnd', true);\r\n  params.allwaysShowDeleteButton = getBoolean('allwaysShowDeleteButton', false);\r\n  params.longPressToEdit = getBoolean('longPressToEdit', false);\r\n  params.showEmptyCategory = getBoolean('showEmptyCategory', false);\r\n  params.language = getString('language', 'auto');\r\n  params.fontSize = getString('fontSize', 'text-sm');\r\n  params.startLocation = getString('startLocation', '/');\r\n\r\n  return params;\r\n}\r\n\r\nfunction saveParams(params) {\r\n\r\n  function saveString(key, value) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n  function saveBoolean(key, value) {\r\n    saveString(key, (value ? \"1\" : \"0\"));\r\n  }\r\n\r\n  saveString('protocol', params.protocol);\r\n  saveString('server', params.server);\r\n  saveString('port', params.port);\r\n  saveString('database', params.database);\r\n  saveBoolean('showPurchasedAtTheEnd', params.showPurchasedAtTheEnd);\r\n  saveBoolean('allwaysShowDeleteButton', params.allwaysShowDeleteButton);\r\n  saveBoolean('longPressToEdit', params.longPressToEdit);\r\n  saveBoolean('showEmptyCategory', params.showEmptyCategory);\r\n  saveString('language', params.language);\r\n  saveString('fontSize', params.fontSize);\r\n  saveString('startLocation', params.startLocation);\r\n\r\n  // Does not perform any change to the state\r\n  return params;\r\n\r\n}\r\n\r\n// Local mgt\r\n// *********\r\n\r\nexport function setLocal(local, lang) {\r\n\r\n  const defaultLang = window.navigator.language.slice(0, 2).toUpperCase();\r\n  var selectedLanguage = (lang == 'auto') ? defaultLang : lang;\r\n\r\n  var loc = {};\r\n  switch (selectedLanguage) {\r\n    case 'FR':\r\n      loc = {\r\n        // App.svelte\r\n        appname: 'My Shopping List',\r\n        categories: 'Catégories',\r\n        category: 'Categorie',\r\n        parameters: \"Paramètres\",\r\n        all: 'Tout',\r\n        cancel: 'Annuler',\r\n        ok: 'OK',\r\n        newItem: 'Nouvel achat ...',\r\n        product: 'Produit',\r\n        added: 'ajouté',\r\n        detail: 'Détails',\r\n        empty: '** vide **',\r\n\r\n        // Category\r\n        emtpyCategory: 'Sans catégorie',\r\n\r\n        // Parameters.svelte\r\n        settings: 'Paramètres',\r\n        couchdbConf: 'Couchdb',\r\n        serverName: 'Serveur',\r\n        port: 'Port',\r\n        databaseName: 'Base de données',\r\n\r\n        displaySection: 'Affichage & comportement',\r\n        showPurchasedAtTheEnd: 'Afficher les achats réalisés en fin de liste ?',\r\n        allwaysShowDeleteButton: 'Toujours afficher le bouton de suppression ?',\r\n        showEmptyCategory: 'Afficher la catégorie vide ?',\r\n        longPressToEdit: 'Appui long pour éditer ?',\r\n        language: 'Langue',\r\n        fontSize: 'Taille police',\r\n\r\n        creditSection: 'Crédits',\r\n\r\n        // Misc\r\n        scanError: 'Erreur scan : ',\r\n        scanNotFound: 'Produit non trouvé',\r\n        scanPrompt: 'Visez un barcode'\r\n\r\n      }\r\n      break;\r\n    case 'EN':\r\n    default:\r\n      loc = {\r\n        // App.svelte\r\n        appname: 'My Shopping List',\r\n        categories: 'Categories',\r\n        category: 'Category',\r\n        parameters: 'Parameters',\r\n        all: 'All',\r\n        cancel: 'Cancel',\r\n        ok: 'OK',\r\n        newItem: 'New product ...',\r\n        product: 'Product',\r\n        added: 'added',\r\n        detail: 'Details',\r\n        empty: '** empty **',\r\n\r\n        // Category\r\n        emtpyCategory: 'Empty category',\r\n\r\n        // Parameters.svelte\r\n        settings: 'Settings',\r\n        couchdbConf: 'Couchdb',\r\n        serverName: 'Server',\r\n        port: 'Port',\r\n        databaseName: 'Database',\r\n\r\n        displaySection: 'Display & behaviour',\r\n        showPurchasedAtTheEnd: 'Display the purchases made at the end of the list?',\r\n        allwaysShowDeleteButton: 'Always show delete button?',\r\n        showEmptyCategory: 'Display empty category?',\r\n        longPressToEdit: 'Long press to edit ?',\r\n        language: 'Language',\r\n        fontSize: 'Font size',\r\n\r\n        creditSection: 'Credits',\r\n\r\n        // Misc\r\n        scanError: 'Scan error : ',\r\n        scanNotFound: 'Product not found',\r\n        scanPrompt: 'Place a barcode inside the scan area'\r\n\r\n      }\r\n      break;\r\n  }\r\n\r\n  return loc;\r\n}\r\n\r\nexport const database = {\r\n  openDb: openDb,\r\n  updateList: updateList,\r\n  addItem: addItem,\r\n  updateItem: updateItem,\r\n  removeItem: removeItem,\r\n  getShoppingListItem: getShoppingListItem,\r\n  getShoppingListNewItem: getShoppingListNewItem,\r\n  addCategory: addCategory,\r\n  removeCategory: removeCategory,\r\n  updateCategory: updateCategory,\r\n  getCategoryListItem: getCategoryListItem,\r\n  getCategoryListNewItem: getCategoryListNewItem,\r\n  compareCategory: compareCategory\r\n}\r\n\r\nasync function openDb() {\r\n  db = new PouchDB(\"shopping\");\r\n  await updateList();\r\n\r\n  var params = get(parameters);\r\n  var replicationString = \"\";\r\n  if (params.protocol != \"\" && params.server != \"\" && params.port != \"\" && params.database != \"\") {\r\n    // Populate the couchdb server string only when all parameters are set\r\n    replicationString = params.protocol + \"://\" + params.server + \":\" + params.port + \"/\" + params.database;\r\n    // Populate the couchdb server string only when all parameters are set\r\n    const replication = PouchDB.sync(\"shopping\", replicationString, { live: true, retry: true })\r\n    replication.on(\"change\", async function (info) {\r\n      await updateList();\r\n    })\r\n      .on(\"error\", function (err) {\r\n        console.log(\"Replication error:\", err);\r\n      });\r\n  }\r\n}\r\n\r\n\r\n// Helper for reloading all todos from the local PouchDB. It’s on-device and has basically zero latency,\r\n// so we can use it quite liberally instead of keeping our local state up to date like you’d do\r\n// in a Redux reducer. It also saves us from having to rebuild the local state todos from the data we sent\r\n// to the database and the `_id` and `_rev` values that were sent back.\r\nasync function updateList() {\r\n  const allDocs = await db.allDocs({\r\n    include_docs: true\r\n  });\r\n  var params = get(parameters);\r\n  var allItems = allDocs.rows.map(row => row.doc);\r\n  var produits = allItems.filter(item => item.type === 'produit');\r\n  if (params.showPurchasedAtTheEnd) {\r\n    produits = produits.sort(compareItemPurchasedEnd);\r\n  } else {\r\n    produits = produits.sort(compareItem);\r\n  }\r\n  shoppingList.set(produits);\r\n\r\n  var categories = allItems.filter(item => item.type === 'category');\r\n  categories = categories.sort(compareCategory);\r\n  categoryList.set(categories);\r\n}\r\n\r\nfunction compareItemPurchasedEnd(item1, item2) {\r\n  if ((bin(item1.coche) == bin(item2.coche))) {\r\n    return compareItem(item1, item2);\r\n  } else {\r\n    return (bin(item1.coche) ? 1 : -1)\r\n  }\r\n}\r\n\r\nfunction bin(value) {\r\n  return (value == undefined ? false : value);\r\n}\r\n\r\nfunction compareItem(item1, item2) {\r\n  return (sansAccent(item1.produit.toUpperCase()) > sansAccent(item2.produit.toUpperCase())) ? 1 : -1;\r\n}\r\n\r\nfunction compareCategory(item1, item2) {\r\n  return (sansAccent(item1.category.toUpperCase()) > sansAccent(item2.category.toUpperCase())) ? 1 : -1;\r\n}\r\n\r\n// Event handlers for adding, updating and removing todos\r\nasync function addItem(produit) {\r\n  const newItem = getShoppingListNewItem(produit);\r\n  return await updateItem(newItem);\r\n}\r\n\r\nasync function updateItem(item) {\r\n  var result;\r\n  if (item._id == undefined) {\r\n    result = await db.post(item);\r\n  } else {\r\n    result = await db.put(item);\r\n  }\r\n  if (result.ok) {\r\n    await updateList();\r\n  }\r\n}\r\n\r\nasync function removeItem(item) {\r\n  const removal = await db.remove(item);\r\n  if (removal.ok) {\r\n    // For removal, we can just update the local state instead of reloading everything from PouchDB,\r\n    // since we no longer care about the doc’s revision.\r\n    var list = get(shoppingList)\r\n    shoppingList.set(list.filter(oneItem => oneItem._id !== item._id));\r\n  }\r\n}\r\n\r\nfunction getShoppingListItem(id) {\r\n  var produit = get(shoppingList).filter(oneItem => oneItem._id == id);\r\n  return produit[0];\r\n}\r\n\r\nfunction getShoppingListNewItem(produit = '', detail = '', coche = false, categoryId = '') {\r\n  return {\r\n    type: 'produit',\r\n    produit: produit,\r\n    coche: coche,\r\n    detail: detail,\r\n    categoryId: categoryId,\r\n    ean: '',\r\n    image_small_url: '',\r\n    image_url: ''\r\n  };\r\n}\r\n\r\n// Event handlers for adding, updating and removing categories\r\nasync function addCategory(category) {\r\n  const newItem = getCategoryListNewItem(category);\r\n  await updateCategory(newItem);\r\n}\r\n\r\nasync function updateCategory(category) {\r\n  var result;\r\n  if (category._id == undefined) {\r\n    result = await db.post(category);\r\n  } else {\r\n    result = await db.put(category);\r\n  }\r\n  if (result.ok) {\r\n    await updateList();\r\n  }\r\n}\r\n\r\nasync function removeCategory(category) {\r\n  const removal = await db.remove(category);\r\n  if (removal.ok) {\r\n    // For removal, we can just update the local state instead of reloading everything from PouchDB,\r\n    // since we no longer care about the doc’s revision.\r\n    var list = get(categoryList);\r\n    categoryList.set(list.filter(oneItem => oneItem._id !== category._id));\r\n\r\n    // Now, we remove the category Id of all related items\r\n    for (const item of get(shoppingList)) {\r\n      if (item.categoryId == category._id) {\r\n        item.categoryId = '';\r\n        await db.put(item);\r\n      }\r\n    }\r\n    await updateList();\r\n  }\r\n}\r\n\r\nfunction getCategoryListItem(id) {\r\n  var category = get(categoryList).filter(oneItem => oneItem._id == id);\r\n  return category[0];\r\n}\r\n\r\nfunction getCategoryListNewItem(category = '', detail = '') {\r\n  return {\r\n    type: 'category',\r\n    category: category,\r\n    detail: detail\r\n  };\r\n}\r\n\r\nfunction createParams() {\r\n  const { subscribe, set, update } = writable({});\r\n\r\n  return {\r\n    subscribe,\r\n    readParams: () => update(params => readParams(params)),\r\n    saveParams: () => update(params => saveParams(params)),\r\n    set: (value) => set(value)\r\n  };\r\n}\r\n\r\nfunction createLocal() {\r\n  const { subscribe, set, update } = writable({});\r\n  return {\r\n    subscribe,\r\n    setLocal: (lang) => update(local => setLocal(local, lang)),\r\n    set: (value) => set(value)\r\n  };\r\n}","<script>\n\n\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl select-none {$$props.class} duration-200 ease-in\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n","const noDepth = [\"white\", \"black\", \"transparent\"];\n\nfunction getClass(prop, color, depth, defaultDepth) {\n  if (noDepth.includes(color)) {\n    return `${prop}-${color}`;\n  }\n  return `${prop}-${color}-${depth || defaultDepth} `;\n}\n\nexport default function utils(color, defaultDepth = 500) {\n  return {\n    bg: depth => getClass(\"bg\", color, depth, defaultDepth),\n    border: depth => getClass(\"border\", color, depth, defaultDepth),\n    txt: depth => getClass(\"text\", color, depth, defaultDepth),\n    caret: depth => getClass(\"caret\", color, depth, defaultDepth)\n  };\n}\n\nexport class ClassBuilder {\n  constructor(classes, defaultClasses) {\n    this.defaults =\n      (typeof classes === \"function\" ? classes(defaultClasses) : classes) ||\n      defaultClasses;\n\n    this.classes = this.defaults;\n  }\n\n  flush() {\n    this.classes = this.defaults;\n\n    return this;\n  }\n\n  extend(...fns) {\n    return this;\n  }\n\n  get() {\n    return this.classes;\n  }\n\n  replace(classes, cond = true) {\n    if (cond && classes) {\n      this.classes = Object.keys(classes).reduce(\n        (acc, from) => acc.replace(new RegExp(from, \"g\"), classes[from]),\n        this.classes\n      );\n    }\n\n    return this;\n  }\n\n  remove(classes, cond = true) {\n    if (cond && classes) {\n      this.classes = classes\n        .split(\" \")\n        .reduce(\n          (acc, cur) => acc.replace(new RegExp(cur, \"g\"), \"\"),\n          this.classes\n        );\n    }\n\n    return this;\n  }\n\n  add(className, cond = true, defaultValue) {\n    if (!cond || !className) return this;\n\n    switch (typeof className) {\n      case \"string\":\n      default:\n        this.classes += ` ${className} `;\n        return this;\n      case \"function\":\n        this.classes += ` ${className(defaultValue || this.classes)} `;\n        return this;\n    }\n  }\n}\n\nconst defaultReserved = [\"class\", \"add\", \"remove\", \"replace\", \"value\"];\n\nexport function filterProps(reserved, props) {\n  const r = [...reserved, ...defaultReserved];\n\n  return Object.keys(props).reduce(\n    (acc, cur) =>\n      cur.includes(\"$$\") || cur.includes(\"Class\") || r.includes(cur)\n        ? acc\n        : { ...acc, [cur]: props[cur] },\n    {}\n  );\n}\n","// Thanks Lagden! https://svelte.dev/repl/61d9178d2b9944f2aa2bfe31612ab09f?version=3.6.7\nfunction ripple(color, centered) {\n  return function(event) {\n    const target = event.currentTarget;\n    const circle = document.createElement(\"span\");\n    const d = Math.max(target.clientWidth, target.clientHeight);\n\n    const removeCircle = () => {\n      circle.remove();\n      circle.removeEventListener(\"animationend\", removeCircle);\n    };\n\n    circle.addEventListener(\"animationend\", removeCircle);\n    circle.style.width = circle.style.height = `${d}px`;\n    const rect = target.getBoundingClientRect();\n\n    if (centered) {\n      circle.classList.add(\n        \"absolute\",\n        \"top-0\",\n        \"left-0\",\n        \"ripple-centered\",\n        `bg-${color}-transDark`\n      );\n    } else {\n      circle.style.left = `${event.clientX - rect.left - d / 2}px`;\n      circle.style.top = `${event.clientY - rect.top - d / 2}px`;\n\n      circle.classList.add(\"ripple-normal\", `bg-${color}-trans`);\n    }\n\n    circle.classList.add(\"ripple\");\n\n    target.appendChild(circle);\n  };\n}\n\nexport default function r(color = \"primary\", centered = false) {\n  return function(node) {\n    const onMouseDown = ripple(color, centered);\n    node.addEventListener(\"mousedown\", onMouseDown);\n\n    return {\n      onDestroy: () => node.removeEventListener(\"mousedown\", onMouseDown),\n    };\n  };\n}\n","<script>\n  import Icon from \"../Icon\";\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n  import createRipple from \"../Ripple/ripple.js\";\n\n\n\n  export let value = false;\n  export let outlined = false;\n  export let text = false;\n  export let block = false;\n  export let disabled = false;\n  export let icon = null;\n  export let small = false;\n  export let light = false;\n  export let dark = false;\n  export let flat = false;\n  export let iconClass = \"\";\n  export let color = \"primary\";\n  export let href = null;\n  export let fab = false;\n  export let type = \"button\";\n\n  export let remove = \"\";\n  export let add = \"\";\n  export let replace = {};\n\n  const classesDefault = 'z-10 py-2 px-4 uppercase text-sm font-medium relative overflow-hidden';\n  const basicDefault = 'text-white duration-200 ease-in';\n\n  const outlinedDefault = 'bg-transparent border border-solid';\n  const textDefault = 'bg-transparent border-none px-4 hover:bg-transparent';\n  const iconDefault = 'p-4 flex items-center select-none';\n  const fabDefault = 'hover:bg-transparent';\n  const smallDefault = 'pt-1 pb-1 pl-2 pr-2 text-xs';\n  const disabledDefault = 'bg-gray-300 text-gray-500 dark:bg-dark-400 pointer-events-none hover:bg-gray-300 cursor-default';\n  const elevationDefault = 'hover:shadow shadow';\n\n  export let classes = classesDefault;\n  export let basicClasses = basicDefault;\n  export let outlinedClasses = outlinedDefault;\n  export let textClasses = textDefault;\n  export let iconClasses = iconDefault;\n  export let fabClasses = fabDefault;\n  export let smallClasses = smallDefault;\n  export let disabledClasses = disabledDefault;\n  export let elevationClasses = elevationDefault;\n\n  fab = fab || (text && icon);\n  const basic = !outlined && !text && !fab;\n  const elevation = (basic || icon) && !disabled && !flat && !text;\n\n  let Classes = i => i;\n  let iClasses = i => i;\n  let shade = 0;\n\n  $: {\n    shade = light ? 200 : 0;\n    shade = dark ? -400 : shade;\n  }\n  $: normal = 500 - shade;\n  $: lighter = 400 - shade;\n\n  const {\n    bg,\n    border,\n    txt,\n  } = utils(color);\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  let iconCb;\n\n  if (icon) {\n    iconCb = new ClassBuilder(iconClass);\n  }\n\n  $: classes = cb\n      .flush()\n      .add(basicClasses, basic, basicDefault)\n      .add(`${bg(normal)} hover:${bg(lighter)}`, basic)\n      .add(elevationClasses, elevation, elevationDefault)\n      .add(outlinedClasses, outlined, outlinedDefault)\n      .add(\n        `${border(lighter)} ${txt(normal)} hover:${bg(\"trans\")} dark-hover:${bg(\"transDark\")}`,\n        outlined)\n      .add(`${txt(lighter)}`, text)\n      .add(textClasses, text, textDefault)\n      .add(iconClasses, icon, iconDefault)\n      .remove(\"py-2\", icon)\n      .remove(txt(lighter), fab)\n      .add(disabledClasses, disabled, disabledDefault)\n      .add(smallClasses, small, smallDefault)\n      .add(\"flex items-center justify-center h-8 w-8\", small && icon)\n      .add(\"border-solid\", outlined)\n      .add(\"rounded-full\", icon)\n      .add(\"w-full\", block)\n      .add(\"rounded\", basic || outlined || text)\n      .add(\"button\", !icon)\n      .add(fabClasses, fab, fabDefault)\n      .add(`hover:${bg(\"transLight\")}`, fab)\n      .add($$props.class)\n      .remove(remove)\n      .replace(replace)\n      .add(add)\n      .get();\n\n  $: if (iconCb) {\n    iClasses = iconCb.flush().add(txt(), fab && !iconClass).get();\n  }\n\n  const ripple = createRipple((text || fab || outlined) ? color : \"white\");\n\n  const props = filterProps([\n    'outlined',\n    'text',\n    'color',\n    'block',\n    'disabled',\n    'icon',\n    'small',\n    'light',\n    'dark',\n    'flat',\n    'add',\n    'remove',\n    'replace',\n  ], $$props);\n</script>\n\n\n{#if href}\n  <a\n    {href}\n    {...props}\n  >\n    <button\n      use:ripple\n      class={classes}\n      {...props}\n      {type}\n      {disabled}\n      on:click={() => (value = !value)}\n      on:click\n      on:mouseover\n      on:*\n    >\n      {#if icon}\n        <Icon class={iClasses} {small}>{icon}</Icon>\n      {/if}\n      <slot />\n    </button>\n  </a>\n{:else}\n  <button\n    use:ripple\n    class={classes}\n    {...props}\n    {type}\n    {disabled}\n    on:click={() => (value = !value)}\n    on:click\n    on:mouseover\n    on:*\n  >\n    {#if icon}\n      <Icon class={iClasses} {small}>{icon}</Icon>\n    {/if}\n    <slot />\n  </button>\n{/if}\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n  import { fade } from \"svelte/transition\";\n  import { quadOut, quadIn } from \"svelte/easing\";\n\n  export let opacity = 0.5;\n  export let inProps = { duration: 200, easing: quadIn };\n  export let outProps = { duration: 200, easing: quadOut };\n</script>\n\n<div\n  class=\"bg-black fixed top-0 left-0 z-10 w-full h-full\"\n  style=\"opacity: {opacity}\"\n  in:fade={inProps}\n  out:fade={outProps}\n  on:click />\n","import scrim from \"./Scrim.svelte\";\nimport spacer from \"./Spacer.svelte\";\n\nexport const Scrim = scrim;\nexport const Spacer = spacer;\n\nexport default {\n  Scrim,\n  Spacer\n};\n","<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n","<script>\n  import Waypoint from \"svelte-waypoint\";\n  import { fade } from \"svelte/transition\";\n\n  export let alt = \"\";\n  export let width = \"\";\n  export let height = \"\";\n  export let src = \"\";\n  export let thumbnail = \"\";\n\n\n\n  let loaded = false;\n  let loading = false;\n\n  function load() {\n    const img = new Image();\n    img.src = src;\n    loading = true;\n\n    img.onload = () => {\n      loading = false;\n      loaded = true;\n    };\n  }\n</script>\n\n<Waypoint class={$$props.class} once on:enter={load} style=\"height: {height}px\" offset=\"0\">\n  {#if loaded}\n    <img class={$$props.class} {src} {alt} {width} {height} />\n  {:else if thumbnail}\n    <img class={$$props.class} src={thumbnail} {alt} {width} {height} />\n  {:else if loading}\n    <slot name=\"loading\" />\n  {/if}\n</Waypoint>\n","<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import Icon from \"../Icon\";\n  import createRipple from \"../Ripple/ripple.js\";\n\n  const classesDefault = \"focus:bg-gray-50 dark-focus:bg-gray-700 hover:bg-gray-transDark relative overflow-hidden duration-100 p-4 cursor-pointer text-gray-700 dark:text-gray-100 flex items-center z-10\";\n  const selectedClassesDefault = \"bg-gray-200 dark:bg-primary-transLight\";\n  const subheadingClassesDefault = \"text-gray-600 p-0 text-sm\";\n\n  export let icon = \"\";\n  export let id = \"\";\n  export let value = \"\";\n  export let text = \"\";\n  export let subheading = \"\";\n  export let disabled = false;\n  export let dense = false;\n  export let selected = false;\n  export let tabindex = null;\n  export let selectedClasses = selectedClassesDefault;\n  export let subheadingClasses = subheadingClassesDefault;\n\n\n\n\n  export let to = \"\";\n  export const item = null;\n  export const items = [];\n  export const level = null;\n\n  const ripple = createRipple();\n  const dispatch = createEventDispatcher();\n\n  function change() {\n    if (disabled) return;\n    value = id;\n    dispatch('change', id, to);\n  }\n\n  export let classes = classesDefault;\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  $: c = cb\n    .flush()\n    .add(selectedClasses, selected, selectedClassesDefault)\n    .add(\"py-2\", dense)\n    .add(\"text-gray-600\", disabled)\n    .add($$props.class)\n    .get();\n</script>\n\n<li\n  use:ripple\n  class={c}\n  {tabindex}\n  on:keypress={change}\n  on:click={change}\n  on:click>\n  {#if icon}\n    <Icon\n      class=\"pr-6\"\n      small={dense}\n    >\n      {icon}\n    </Icon>\n  {/if}\n\n  <div class=\"flex flex-col p-0\">\n    <div class={$$props.class}>\n      <slot>{text}</slot>\n    </div>\n    {#if subheading}\n      <div class={subheadingClasses}>{subheading}</div>\n    {/if}\n  </div>\n</li>\n","<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  import ListItem from \"./ListItem.svelte\";\n\n  export let items = [];\n  export let value = \"\";\n  export let dense = false;\n  export let select = false;\n\n  export const level = null;\n  export const text = \"\";\n  export const item = {};\n  export const to = null;\n  export const selectedClasses = i => i;\n  export const itemClasses = i => i;\n\n  const classesDefault = \"py-2 rounded\";\n\n  export let classes = classesDefault;\n\n  function id(i) {\n    if (i.id !== undefined) return i.id;\n    if (i.value !== undefined) return i.value;\n    if (i.to !== undefined) return i.to;\n    if (i.text !== undefined) return i.text;\n    return i;\n  }\n\n  function getText(i) {\n    if (i.text !== undefined) return i.text;\n    if (i.value !== undefined) return i.value;\n    return i;\n  }\n\n  const cb = new ClassBuilder($$props.class);\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n</script>\n\n<ul class={c} class:rounded-t-none={select}>\n  {#each items as item, i}\n    {#if item.to !== undefined}\n      <slot name=\"item\" {item} {dense} {value}>\n        <a tabindex={i + 1} href={item.to}>\n          <ListItem bind:value {...item} id={id(item)} {dense} on:change>\n            {item.text}\n          </ListItem>\n        </a>\n      </slot>\n    {:else}\n      <slot name=\"item\" {item} {dense} {value}>\n        <ListItem\n          bind:value\n          {selectedClasses}\n          {itemClasses}\n          {...item}\n          tabindex={i + 1}\n          id={id(item)}\n          selected={value === id(item)}\n          {dense}\n          on:change\n          on:click>\n          {getText(item)}\n        </ListItem>\n      </slot>\n    {/if}\n  {/each}\n</ul>\n","<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n\n\n  export let focused = false;\n  export let error = false;\n  export let outlined = false;\n  export let labelOnTop = false;\n  export let prepend = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n  export let dense = false;\n\n  let labelDefault = `pt-4 absolute top-0 label-transition block pb-2 px-4 pointer-events-none cursor-text`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let labelClasses = labelDefault;\n\n  const {\n    border,\n    txt,\n  } = utils(color);\n\n  const l = new ClassBuilder(labelClasses, labelDefault);\n\n  let lClasses = i => i;\n\n  $: lClasses = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('text-error-500', focused && error)\n      .add('label-top text-xs', labelOnTop)\n      .add('text-xs', focused)\n      .remove('pt-4 pb-2 px-4 px-1 pt-0', labelOnTop && outlined)\n      .add(`ml-3 p-1 pt-0 mt-0 bg-${bgColor} dark:bg-dark-500`, labelOnTop && outlined)\n      .remove('px-4', prepend)\n      .add('pr-4 pl-10', prepend)\n      .remove('pt-4', dense)\n      .add('pt-3', dense)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'color',\n    'dense'\n  ], $$props);\n</script>\n\n<style>\n.label-top {\n  line-height: 0.05;\n}\n.label-transition {\n  transition: font-size 0.05s, line-height 0.1s;\n}\n:global(label.text-xs) {\n  font-size: 0.7rem;\n}\n</style>\n\n<!-- svelte-ignore a11y-label-has-associated-control -->\n<label class=\"{lClasses} {$$props.class}\" {...props}>\n  <slot />\n</label>\n","<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n  import { fly } from \"svelte/transition\";\n  import { quadOut } from \"svelte/easing\";\n\n  let classesDefault = \"text-xs py-1 pl-4 absolute left-0\";\n\n  export let error = false;\n  export let hint = \"\";\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let transitionProps = { y: -10, duration: 100, easing: quadOut };\n\n  const l = new ClassBuilder($$props.class, classesDefault);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add('text-error-500', error)\n      .add('text-gray-600', hint)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'error',\n    'hint',\n  ], $$props);\n</script>\n\n<div\n  class={classes}\n  transition:fly={transitionProps}>\n  {@html hint || ''}\n  {error || ''}\n</div>\n","<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n\n\n  export let noUnderline = false;\n  export let outlined = false;\n  export let focused = false;\n  export let error = false;\n  export let color = \"primary\";\n\n  let defaultClasses = `mx-auto w-0`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let lineClasses = defaultClasses;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(lineClasses, defaultClasses);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('bg-error-500', error)\n      .add('w-full', focused || error)\n      .add(bg(), focused)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'bgcolor',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.line {\n  height: 1px;\n}\n</style>\n\n<div\n  class=\"line absolute bottom-0 left-0 w-full bg-gray-600 {$$props.class}\"\n  class:hidden={noUnderline || outlined}>\n  <div\n    class=\"{classes}\"\n    style=\"height: 2px; transition: width .2s ease\" />\n</div>\n","<script>\n  import { createEventDispatcher } from \"svelte\";\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  import Icon from \"../Icon\";\n  import Label from \"./Label.svelte\";\n  import Hint from \"./Hint.svelte\";\n  import Underline from \"./Underline.svelte\";\n\n\n\n  export let outlined = false;\n  export let value = null;\n  export let label = \"\";\n  export let placeholder = \"\";\n  export let hint = \"\";\n  export let error = false;\n  export let append = \"\";\n  export let prepend = \"\";\n  export let persistentHint = false;\n  export let textarea = false;\n  export let rows = 5;\n  export let select = false;\n  export let dense = false;\n  export let autocomplete = false;\n  export let noUnderline = false;\n  export let appendReverse = false;\n  export let prependReverse = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n  export let iconClass = \"\";\n  export let disabled = false;\n\n  const inputDefault = \"pb-2 pt-6 px-4 rounded-t text-black dark:text-gray-100 w-full\";\n  const classesDefault = \"mt-2 mb-6 relative text-gray-600 dark:text-gray-100\";\n  const appendDefault = \"absolute right-0 top-0 pb-2 pr-4 pt-4 text-gray-700 z-10\";\n  const prependDefault = \"absolute left-0 top-0 pb-2 pl-2 pt-4 text-xs text-gray-700 z-10\";\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let inputClasses = inputDefault;\n  export let classes = classesDefault;\n  export let appendClasses = appendDefault;\n  export let prependClasses = prependDefault;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const cb = new ClassBuilder(inputClasses, inputDefault);\n  const ccb = new ClassBuilder(classes, classesDefault);\n  const acb = new ClassBuilder(appendClasses, appendDefault);\n  const pcb = new ClassBuilder(prependClasses, prependDefault);\n\n  export let extend = () => {};\n\n  export let focused = false;\n  let wClasses = i => i;\n  let aClasses = i => i;\n  let pClasses = i => i;\n\n  function toggleFocused() {\n    focused = !focused;\n  }\n\n  $: showHint = error || (persistentHint ? hint : focused && hint);\n  $: labelOnTop = placeholder || focused || (value || value === 0);\n\n  $: iClasses = cb\n      .flush()\n      .remove('pt-6 pb-2', outlined)\n      .add('border rounded bg-transparent py-4 duration-200 ease-in', outlined)\n      .add('border-error-500 caret-error-500', error)\n      .remove(caret(), error)\n      .add(caret(), !error)\n      .add(border(), outlined && focused && !error)\n      .add('bg-gray-100 dark:bg-dark-600', !outlined)\n      .add('bg-gray-300 dark:bg-dark-200', focused && !outlined)\n      .remove('px-4', prepend)\n      .add('pr-4 pl-10', prepend)\n      .add(add)\n      .remove('pt-6 pb-2', dense && !outlined)\n      .add('pt-4 pb-1', dense && !outlined)\n      .remove('bg-gray-100', disabled)\n      .add('bg-gray-50', disabled)\n      .add('cursor-pointer', select && !autocomplete)\n      .add($$props.class)\n      .remove(remove)\n      .replace(replace)\n      .extend(extend)\n      .get();\n\n  $: wClasses = ccb.flush()\n      .add('select', select || autocomplete)\n      .add('dense', dense && !outlined)\n      .remove('mb-6 mt-2', dense && !outlined)\n      .add('mb-4 mt-1', dense)\n      .replace({ 'text-gray-600': 'text-error-500' }, error)\n      .add('text-gray-200', disabled)\n      .get();\n\n  $: aClasses = acb.flush().get();\n  $: pClasses = pcb.flush().get();\n\n  const props = filterProps([\n    'outlined',\n    'label',\n    'placeholder',\n    'hint',\n    'error',\n    'append',\n    'prepend',\n    'persistentHint',\n    'textarea',\n    'rows',\n    'select',\n    'autocomplete',\n    'noUnderline',\n    'appendReverse',\n    'prependReverse',\n    'color',\n    'bgColor',\n    'disabled',\n    'replace',\n    'remove',\n    'small',\n  ], $$props);\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<div class={wClasses}>\n  {#if label}\n  <slot name=\"label\">\n    <Label\n      {labelOnTop}\n      {focused}\n      {error}\n      {outlined}\n      {prepend}\n      {color}\n      {bgColor}\n      dense={dense && !outlined}\n    >{label}</Label>\n  </slot>\n  {/if}\n\n  {#if (!textarea && !select) || autocomplete}\n    <input\n      aria-label={label}\n      class={iClasses}\n      on:focus={toggleFocused}\n      on:blur={toggleFocused}\n      on:blur\n      bind:value\n      on:change\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      {disabled}\n      on:click\n      on:focus\n      {...props}\n      placeholder={!value ? placeholder : \"\"} />\n  {:else if textarea && !select}\n    <textarea\n      {rows}\n      aria-label={label}\n      class={iClasses}\n      on:change\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      {disabled}\n      on:click\n      on:focus\n      on:blur\n      bind:value\n      {...props}\n      on:focus={toggleFocused}\n      on:blur={toggleFocused}\n      placeholder={!value ? placeholder : \"\"} />\n  {:else if select && !autocomplete}\n    <input\n      readonly\n      class=\"{iClasses}\"\n      on:change\n      on:input\n      on:keydown\n      on:keypress\n      on:keyup\n      {disabled}\n      on:click\n      on:blur\n      on:focus\n      {value} />\n  {/if}\n\n  {#if append}\n    <div\n      class={aClasses}\n      on:click={() => dispatch(\"click-append\")}\n    >\n      <slot name=\"append\">\n        <Icon\n          reverse={appendReverse}\n          class=\"{focused ? txt() : \"\"} {iconClass}\"\n        >\n          {append}\n        </Icon>\n      </slot>\n    </div>\n  {/if}\n\n  {#if prepend}\n    <div\n      class={pClasses}\n      on:click={() => dispatch(\"click-prepend\")}\n    >\n      <slot name=\"prepend\">\n        <Icon\n          reverse={prependReverse}\n          class=\"{focused ? txt() : \"\"} {iconClass}\"\n        >\n          {prepend}\n        </Icon>\n      </slot>\n    </div>\n  {/if}\n\n  <Underline\n    {noUnderline}\n    {outlined}\n    {focused}\n    {error} />\n\n  {#if showHint}\n    <Hint\n      {error}\n      {hint} />\n  {/if}\n</div>\n","import { writable } from \"svelte/store\";\nimport { onDestroy } from \"svelte\";\n\nfunction defaultCalc(width) {\n  if (width > 1279) {\n    return \"xl\";\n  }\n  if (width > 1023) {\n    return \"lg\";\n  }\n  if (width > 767) {\n    return \"md\";\n  }\n  return \"sm\";\n}\n\nexport default function breakpoint(calcBreakpoint = defaultCalc) {\n  if (typeof window === \"undefined\") return writable(\"sm\");\n\n  const store = writable(calcBreakpoint(window.innerWidth));\n\n  const onResize = ({ target }) => store.set(calcBreakpoint(target.innerWidth));\n\n  window.addEventListener(\"resize\", onResize);\n  onDestroy(() => window.removeEventListener(\"resize\", onResize));\n\n  return {\n    subscribe: store.subscribe\n  };\n}\n","<script>\n  import { fly } from \"svelte/transition\";\n  import { quadIn } from \"svelte/easing\";\n  import { Scrim } from \"../Util\";\n  import breakpoints from \"../../breakpoints\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const bp = breakpoints();\n\n  const classesDefault = \"fixed top-0 md:mt-16 w-auto drawer overflow-hidden h-full\";\n  const navClassesDefault = `h-full w-full bg-white dark:bg-gray-900 dark:text-gray-200 absolute flex w-auto z-20 drawer\n    pointer-events-auto overflow-y-auto`;\n\n  export let right = false;\n  export let persistent = false;\n  export let elevation = true;\n  export let show = true;\n  export let classes = classesDefault;\n  export let navClasses = navClassesDefault;\n  export let borderClasses = `border-gray-600 ${right ? \"border-l\" : \"border-r\"}`;\n\n\n\n\n  export let transitionProps = {\n    duration: 200,\n    x: -300,\n    easing: quadIn,\n    opacity: 1,\n  };\n\n  $: transitionProps.x = right ? 300 : -300;\n\n  // Is the drawer deliberately hidden? Don't let the $bp check make it visible if so.\n  let hidden = !show;\n  $: if (!hidden) persistent = show = $bp !== \"sm\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  if ($bp === 'sm') show = false;\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(borderClasses, !elevation && persistent)\n    .add($$props.class)\n    .add(\"right-0\", right)\n    .add(\"left-0\", !right)\n    .add(\"pointer-events-none\", persistent)\n    .add(\"z-50\", !persistent)\n    .add(\"shadow\", elevation)\n    .add(\"z-20\", persistent)\n    .get();\n\n  const ncb = new ClassBuilder(navClasses, navClassesDefault);\n\n  $: n = ncb\n    .flush()\n    .get();\n\n</script>\n\n<style>\n  .drawer {\n    min-width: 250px;\n  }\n\n  aside {\n    height: 100vh;\n  }\n</style>\n\n{#if show}\n  <aside\n    class={c}\n    transition:fly={transitionProps}\n  >\n    {#if !persistent}\n      <Scrim on:click={() => show = false} />\n    {/if}\n    <nav\n      role=\"navigation\"\n      class={n}\n    >\n      <div class=\"w-full\">\n        <slot />\n      </div>\n    </nav>\n  </aside>\n{/if}\n","<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"pl-2 cursor-pointer 'text-gray-700 dark:text-gray-300'\";\n\n  export let classes = classesDefault;\n\n\n  export let label = \"\";\n  export let disabled = false;\n  export let disabledClasses = \"text-gray-500 dark:text-gray-600\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(disabledClasses, disabled)\n    .add($$props.class)\n    .get();\n</script>\n\n<label\n  aria-hidden=\"true\"\n  {...$$props}\n  class={c}\n>\n  <slot>{label}</slot>\n</label>\n","<script>\n  export let color = \"primary\";\n  export let noHover = false;\n  import createRipple from \"../Ripple/ripple.js\";\n\n  $: ripple = createRipple(color, true);\n  $: hoverClass = `hover:bg-${color}-transLight`;\n</script>\n\n<style>\n  .ripple {\n    position: absolute !important;\n  }\n</style>\n\n<span\n  use:ripple\n  class=\"z-40 {$$props.class} p-2 rounded-full flex items-center justify-center top-0 left-0 {noHover ? \"\" : hoverClass}\">\n  <slot />\n</span>\n","<script>\n  import Label from \"./Label.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"inline-flex items-center mb-2 cursor-pointer z-10\";\n\n  import Icon from \"../Icon\";\n  import Ripple from \"../Ripple\";\n\n  export let value = \"\";\n  export let label = \"\";\n  export let color = \"primary\";\n  export let checked = false;\n  export let disabled = false;\n  export let classes = classesDefault;\n  export let labelClasses = i => i;\n  export let group = [];\n\n  // for bind:group\n  //keep track of group array state;\n  let groupstate = group.includes(value);\n\n  $: if (value && !disabled) {\n    const groupHasValue = group.includes(value);\n\n    // check if group array has changed, or something else\n    if (groupHasValue === groupstate) {\n      // add to group array if checked\n      if (checked && !groupHasValue) {\n        group = group.concat([value]);\n        groupstate = true;\n        // remove from group array if unchecked\n      } else if (!checked && groupHasValue) {\n        group = [...group.filter(v => v !== value)];\n        groupstate = false;\n      }\n    } else {\n      // group array has changed. Click box\n      groupstate = groupHasValue;\n      check();\n    }\n  }\n  const dispatch = createEventDispatcher();\n\n  function check() {\n    if (disabled) return;\n\n    checked = !checked;\n    dispatch(\"change\", checked);\n  }\n\n  $: rippleColor = checked && !disabled ? color : \"gray\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n</script>\n\n<div class={$$props.class}>\n  <div class={c} on:click={check}>\n    <input bind:checked class=\"hidden\" type=\"checkbox\" on:change {value} />\n    <div class=\"relative w-auto h-auto z-0\">\n      <Ripple color={rippleColor}>\n        {#if checked}\n          <Icon\n            class={disabled ? 'text-gray-500 dark:text-gray-600' : `text-${color}-500 dark:text-${color}-100`}>\n            check_box\n          </Icon>\n        {:else}\n          <Icon\n            class={disabled ? 'text-gray-500 dark:text-gray-600' : 'text-gray-600 dark:text-gray-300'}>\n            check_box_outline_blank\n          </Icon>\n        {/if}\n      </Ripple>\n    </div>\n    <slot name=\"label\">\n      <Label {disabled} {label} class={labelClasses} />\n    </slot>\n  </div>\n</div>\n","<script>\n  import Icon from \"../Icon\";\n  import Ripple from \"../Ripple\";\n  import Label from \"../Checkbox/Label.svelte\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"inline-flex block items-center mb-2 cursor-pointer z-0\";\n\n\n\n  export let selected = \"\";\n  export let label = \"\";\n  export let color = \"primary\";\n  export let disabled = false;\n  export let name = \"\";\n  export let value = \"\";\n  export let classes = classesDefault;\n  export let labelClasses = i => i;\n\n  function select() {\n    if (disabled) return;\n\n    selected = value;\n  }\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  $: rippleColor = value && !disabled ? color : 'gray';\n</script>\n\n<div\n  class={c}\n  on:click={select}>\n  <input\n    aria-label={label}\n    class=\"hidden\"\n    type=\"radio\"\n    role=\"radio\"\n    {name}\n    selected={selected === value} />\n  <div class=\"relative\">\n    <Ripple color={rippleColor}>\n      {#if selected === value}\n        <Icon class=\"text-{disabled ? 'gray' : color}-500\">\n          radio_button_checked\n        </Icon>\n      {:else}\n        <Icon class={disabled ? 'text-gray-500 dark:text-gray-600' : 'text-gray-600'}>\n          radio_button_unchecked\n        </Icon>\n      {/if}\n    </Ripple>\n  </div>\n  <slot name=\"label\">\n    <Label {disabled} {label} class={labelClasses} />\n  </slot>\n</div>\n","<script>\n  import RadioButton from \"./RadioButton.svelte\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"flex flex-col mb-4 cursor-pointer\";\n\n\n\n  export let classes = classesDefault;\n\n  export let items = [];\n  export let selected = \"\";\n  export let name = \"\";\n  export let disabled = false;\n  export let color = \"primary\";\n  export let buttonClasses = \"inline-flex block items-center mb-2 cursor-pointer z-0\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  $: c = cb.flush().add($$props.class).get();\n</script>\n\n<div class={c}>\n  {#each items as item}\n    <slot {item}>\n      <RadioButton\n        bind:selected\n        class={buttonClasses}\n        {...item}\n        {color}\n        name={name || `radio-${Math.random()}`}\n        {disabled} />\n    </slot>\n  {/each}\n</div>\n","<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n\n\n\n  let classesDefault =\n    \"fixed top-0 w-full items-center flex-wrap flex left-0 z-30 p-0 h-16 shadow bg-primary-300 dark:bg-dark-600\";\n\n  export let classes = classesDefault;\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  $: c = cb.flush().add($$props.class).get();\n</script>\n\n<header class={c}>\n  <slot />\n</header>\n","export function hideListAction(node, cb) {\r\n  const onWindowClick = e => {\r\n    if (!node.contains(e.target)) {\r\n      cb();\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"click\", onWindowClick);\r\n\r\n  return {\r\n    destroy: () => {\r\n      window.removeEventListener(\"click\", onWindowClick);\r\n    }\r\n  };\r\n}\r\n","<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import List from \"../List/List.svelte\";\n  import TextField from \"../TextField\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n  import { hideListAction } from '../../utils/hide-list-action';\n\n  const optionsClassesDefault = \"absolute left-0 bg-white rounded shadow w-full z-20 dark:bg-dark-500\";\n  const classesDefault = \"cursor-pointer relative pb-4\";\n\n  const noop = i => i;\n\n  export let items = [];\n  export let value = \"\";\n  export const text = \"\";\n  export let label = \"\";\n  let selectedLabelProp = undefined;\n  export { selectedLabelProp as selectedLabel };\n  export let color = \"primary\";\n  export let outlined = false;\n  export let placeholder = \"\";\n  export let hint = \"\";\n  export let error = false;\n  export let append = \"arrow_drop_down\";\n  export let dense = false;\n  export let persistentHint = false;\n  export let autocomplete = false;\n  export let noUnderline = false;\n  export let showList = false;\n  export let classes = classesDefault;\n  export let optionsClasses = optionsClassesDefault;\n\n  export let inputWrapperClasses = noop;\n  export let appendClasses = noop;\n  export let labelClasses = noop;\n  export let inputClasses = noop;\n  export let prependClasses = noop;\n  export let listClasses = noop;\n  export let selectedClasses = noop;\n  export let itemClasses = noop;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n\n\n\n  let itemsProcessed = [];\n\n\n  function process(it) {\n    return it.map(i => typeof i !== \"object\"\n     ? ({ value: i, text: i })\n     : i);\n  }\n\n  $: itemsProcessed = process(items);\n\n  const dispatch = createEventDispatcher();\n\n  let selectedLabel = '';\n  $: {\n    if (selectedLabelProp !== undefined) {\n      selectedLabel = selectedLabelProp;\n    } else if (value !== undefined) {\n      let selectedItem = itemsProcessed.find(i => i.value === value);\n      selectedLabel = selectedItem ? selectedItem.text : '';\n    } else {\n      selectedLabel = '';\n    }\n  }\n\n  let filterText = null;\n  $: filteredItems = itemsProcessed.filter(\n    i => !filterText || i.text.toLowerCase().includes(filterText)\n  );\n\n  function filterItems({ target }) {\n    filterText = target.value.toLowerCase();\n  }\n\n  function handleInputClick() {\n    if (autocomplete) {\n      showList = true;\n    } else {\n      showList = !showList;\n    }\n  }\n\n  const onHideListPanel = () => showList = false;\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add($$props.class)\n    .get();\n\n  const ocb = new ClassBuilder(optionsClasses, optionsClassesDefault);\n  $: o = ocb\n    .flush()\n    .add(optionsClasses, true, optionsClassesDefault)\n    .add(\"rounded-t-none\", !outlined)\n    .get();\n\n  $: if (dense) {\n    appendClasses = (i) => i.replace('pt-4', 'pt-3');\n  }\n</script>\n\n<div class={c} use:hideListAction={onHideListPanel}>\n  <slot name=\"select\">\n    <TextField\n      select\n      {dense}\n      focused={showList}\n      {autocomplete}\n      value={selectedLabel}\n      {outlined}\n      {label}\n      {placeholder}\n      {hint}\n      {error}\n      {append}\n      {persistentHint}\n      {color}\n      {add}\n      {remove}\n      {replace}\n      {noUnderline}\n      class={inputWrapperClasses}\n      {appendClasses}\n      {labelClasses}\n      {inputClasses}\n      {prependClasses}\n      on:click={handleInputClick}\n      on:click-append={(e => showList = !showList)}\n      on:click\n      on:input={filterItems}\n      appendReverse={showList}\n    />\n  </slot>\n\n  {#if showList}\n    <slot name=\"options\">\n      <div\n        class={o}\n        on:click={() => (showList = false)}\n      >\n        <List\n          bind:value\n          class={listClasses}\n          {selectedClasses}\n          {itemClasses}\n          select\n          {dense}\n          items={filteredItems}\n          on:change={({ detail }) => {\n            dispatch('change', detail);\n          }} />\n      </div>\n    </slot>\n  {/if}\n</div>\n","<script>\n  export let progress = null;\n  export let color = \"primary\";\n  export let width = 3;\n  export let size = 70;\n\n  $: style = progress > 0 ? `\n      animation: none;\n      stroke-dasharray: ${150000 - progress * 1000};\n      stroke-dashoffset: -${124 - (progress * 124) / 100};\n    ` : \"\";\n</script>\n\n<style>\n  .circular {\n    animation: rotate 2s linear infinite;\n    position: relative;\n  }\n\n  .path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124;\n    }\n  }\n</style>\n\n<svg class=\"circular\" style=\"width: {size}px; height: {size}px;\">\n  <circle\n    class=\"path stroke-{color}\"\n    cx={size / 2}\n    cy={size / 2}\n    fill=\"none\"\n    r={(size / 2) - (size / 5)}\n    stroke-width={width}\n    stroke-miterlimit=\"10\"\n    {style} />\n</svg>\n","<script context=\"module\">\n  import { writable } from \"svelte/store\";\n\n  const queue = writable([]);\n  let running = false;\n</script>\n\n<script>\n  import { fade, scale } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import Button from \"../Button\";\n  import { Spacer } from \"../Util\";\n  import utils, { ClassBuilder } from \"../../utils/classes.js\";\n\n  export let value = false;\n  export let timeout = 2000;\n  export let inProps = { duration: 100, easing: quadIn };\n  export let outProps = { duration: 100, easing: quadOut, delay: 150 };\n  export let color = \"gray\";\n  export let text = \"white\";\n  export let top = false;\n  export let bottom = true;\n  export let right = false;\n  export let left = false;\n  export let noAction = true;\n  export let hash = false;\n\n  const dispatch = createEventDispatcher();\n\n  const classesDefault = `pointer-events-auto flex absolute py-2 px-4 z-30 mb-4 content-between mx-auto\n      rounded items-center shadow-sm h-12`;\n  const wrapperDefault = \"fixed w-full h-full flex items-center justify-center pointer-events-none\";\n\n  export let classes = wrapperDefault;\n\n  const cb = new ClassBuilder($$props.class, classesDefault);\n  const wrapperCb = new ClassBuilder(classes, wrapperDefault);\n\n  let wClasses = i => i;\n  let tm;\n  let node;\n\n  let bg = () => {};\n\n  $: {\n    const u = utils(color || \"gray\");\n    bg = u.bg;\n  }\n\n  $: {\n    hash = hash || (value ? btoa(`${value}${new Date().valueOf()}`) : null);\n    value = value;\n  }\n\n  $: toggler = () => toggle(value, hash);\n\n  $: if (value) {\n    queue.update(u => [...u, toggler]);\n  }\n\n  $: if (!running && value && $queue.length) {\n    $queue.shift()();\n  }\n\n  $: if (!value) clearTimeout(tm);\n\n  function toggle(h, id) {\n    if (value === false && running === false) {\n      return;\n    }\n    hash = running = value = id;\n\n    if (!timeout) return;\n\n    tm = setTimeout(() => {\n      value = running = hash = false;\n      dispatch(\"finish\");\n\n      if ($queue.length) {\n        $queue.shift()();\n      }\n    }, timeout);\n  }\n\n  $: c = cb\n      .flush()\n      .add(bg(800), color)\n      .add(\"right-0 mr-2\", right)\n      .add(\"top-0 mt-2\", top)\n      .add(\"left-0 ml-2\", left)\n      .add(\"bottom-0\", bottom)\n      .add(\"snackbar\", !noAction)\n      .get();\n\n  // for some reason it doesn't get updated otherwise\n  $: if (node) node.classList = c;\n\n  wClasses = wrapperCb\n    .flush()\n    .add(`text-${text}`)\n    .get();\n</script>\n\n<style>\n  .snackbar {\n    min-width: 344px;\n  }\n</style>\n\n{#if value && (running === hash)}\n  <div\n    class=\"fixed w-full h-full top-0 left-0 z-30 pointer-events-none\"\n  >\n    <div class={wClasses}>\n      <div\n        bind:this={node}\n        in:scale={inProps}\n        out:fade={outProps}\n        on:click={() => value = false}>\n        <slot />\n        {#if !noAction}\n          <Spacer />\n          <slot name=\"action\">\n            {#if !timeout}\n              <Button text on:click={() => value = false}>Close</Button>\n            {/if}\n          </slot>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n","/**\n * @typedef {Object} WrappedComponent Object returned by the `wrap` method\n * @property {SvelteComponent} component - Component to load (this is always asynchronous)\n * @property {RoutePrecondition[]} [conditions] - Route pre-conditions to validate\n * @property {Object} [props] - Optional dictionary of static props\n * @property {Object} [userData] - Optional user data dictionary\n * @property {bool} _sveltesparouter - Internal flag; always set to true\n */\n\n/**\n * @callback AsyncSvelteComponent\n * @returns {Promise<SvelteComponent>} Returns a Promise that resolves with a Svelte component\n */\n\n/**\n * @callback RoutePrecondition\n * @param {RouteDetail} detail - Route detail object\n * @returns {boolean|Promise<boolean>} If the callback returns a false-y value, it's interpreted as the precondition failed, so it aborts loading the component (and won't process other pre-condition callbacks)\n */\n\n/**\n * @typedef {Object} WrapOptions Options object for the call to `wrap`\n * @property {SvelteComponent} [component] - Svelte component to load (this is incompatible with `asyncComponent`)\n * @property {AsyncSvelteComponent} [asyncComponent] - Function that returns a Promise that fulfills with a Svelte component (e.g. `{asyncComponent: () => import('Foo.svelte')}`)\n * @property {SvelteComponent} [loadingComponent] - Svelte component to be displayed while the async route is loading (as a placeholder); when unset or false-y, no component is shown while component\n * @property {object} [loadingParams] - Optional dictionary passed to the `loadingComponent` component as params (for an exported prop called `params`)\n * @property {object} [userData] - Optional object that will be passed to events such as `routeLoading`, `routeLoaded`, `conditionsFailed`\n * @property {object} [props] - Optional key-value dictionary of static props that will be passed to the component. The props are expanded with {...props}, so the key in the dictionary becomes the name of the prop.\n * @property {RoutePrecondition[]|RoutePrecondition} [conditions] - Route pre-conditions to add, which will be executed in order\n */\n\n/**\n * Wraps a component to enable multiple capabilities:\n * 1. Using dynamically-imported component, with (e.g. `{asyncComponent: () => import('Foo.svelte')}`), which also allows bundlers to do code-splitting.\n * 2. Adding route pre-conditions (e.g. `{conditions: [...]}`)\n * 3. Adding static props that are passed to the component\n * 4. Adding custom userData, which is passed to route events (e.g. route loaded events) or to route pre-conditions (e.g. `{userData: {foo: 'bar}}`)\n * \n * @param {WrapOptions} args - Arguments object\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(args) {\n    if (!args) {\n        throw Error('Parameter args is required')\n    }\n\n    // We need to have one and only one of component and asyncComponent\n    // This does a \"XNOR\"\n    if (!args.component == !args.asyncComponent) {\n        throw Error('One and only one of component and asyncComponent is required')\n    }\n\n    // If the component is not async, wrap it into a function returning a Promise\n    if (args.component) {\n        args.asyncComponent = () => Promise.resolve(args.component)\n    }\n\n    // Parameter asyncComponent and each item of conditions must be functions\n    if (typeof args.asyncComponent != 'function') {\n        throw Error('Parameter asyncComponent must be a function')\n    }\n    if (args.conditions) {\n        // Ensure it's an array\n        if (!Array.isArray(args.conditions)) {\n            args.conditions = [args.conditions]\n        }\n        for (let i = 0; i < args.conditions.length; i++) {\n            if (!args.conditions[i] || typeof args.conditions[i] != 'function') {\n                throw Error('Invalid parameter conditions[' + i + ']')\n            }\n        }\n    }\n\n    // Check if we have a placeholder component\n    if (args.loadingComponent) {\n        args.asyncComponent.loading = args.loadingComponent\n        args.asyncComponent.loadingParams = args.loadingParams || undefined\n    }\n\n    // Returns an object that contains all the functions to execute too\n    // The _sveltesparouter flag is to confirm the object was created by this router\n    const obj = {\n        component: args.asyncComponent,\n        userData: args.userData,\n        conditions: (args.conditions && args.conditions.length) ? args.conditions : undefined,\n        props: (args.props && Object.keys(args.props).length) ? args.props : {},\n        _sveltesparouter: true\n    }\n\n    return obj\n}\n\nexport default wrap\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","<script>\r\n  import {\r\n    parameters,\r\n    local,\r\n    database\r\n  } from \"./state.js\";\r\n  export let item = {};\r\n  export let type = \"\";\r\n\r\n  // import { fly } from \"svelte/transition\";\r\n  // transition:fly={{ x: -200, duration: 400 }}\r\n\r\n  import { Button } from \"smelte\";\r\n  import { Checkbox } from \"smelte\";\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { push } from \"svelte-spa-router\";\r\n\r\n  const swipeDelay = 250; // ms\r\n  const scrollMargin = 10; // px\r\n  const deleteButtonVisibility = 5000; // ms\r\n  const longPressDelay = 1250; // ms\r\n  const ratioScrollSwipe = 0.75; // Ratio between Scroll and Swipe\r\n  const noMoveMargin = 5; // px\r\n\r\n  var deleteVisible = false;\r\n  var timerHandleTouch = null;\r\n  var timerHandleDelete = null;\r\n  var timerHandleLongPress = null;\r\n\r\n  var startPos = { x: -1, y: -1 };\r\n  var currentPos = { x: -1, y: -1 };\r\n  var inSwipe = false;\r\n  var inScroll = false;\r\n\r\n  var pointerEventToXY = function(e) {\r\n    var out = { x: 0, y: 0 };\r\n    if (\r\n      e.type == \"touchstart\" ||\r\n      e.type == \"touchmove\" ||\r\n      e.type == \"touchend\" ||\r\n      e.type == \"touchcancel\"\r\n    ) {\r\n      var touch = e.touches[0] || e.changedTouches[0];\r\n      out.x = touch.pageX;\r\n      out.y = touch.pageY;\r\n    } else if (\r\n      e.type == \"mousedown\" ||\r\n      e.type == \"mouseup\" ||\r\n      e.type == \"mousemove\" ||\r\n      e.type == \"mouseover\" ||\r\n      e.type == \"mouseout\" ||\r\n      e.type == \"mouseenter\" ||\r\n      e.type == \"mouseleave\"\r\n    ) {\r\n      out.x = e.pageX;\r\n      out.y = e.pageY;\r\n    }\r\n    return out;\r\n  };\r\n\r\n  function startTouch(evt) {\r\n    // no swipe detection if delete button is already visible\r\n    if (deleteVisible || $parameters.allwaysShowDeleteButton) return;\r\n\r\n    inSwipe = false;\r\n    inScroll = false;\r\n\r\n    // store start position\r\n    startPos = pointerEventToXY(evt);\r\n    // currentPos = startPos;\r\n    currentPos = { x: -1, y: -1 };\r\n\r\n    timerHandleTouch = setTimeout(() => {\r\n      timerHandleTouch = null;\r\n      // let's evaluate after a certain time\r\n      if (currentPos.x == -1) {\r\n        // no move, no swipe, nothing to do\r\n      } else {\r\n        var deltaX = Math.abs(currentPos.x - startPos.x);\r\n        var deltaY = Math.abs(currentPos.y - startPos.y);\r\n        if (deltaX > noMoveMargin || deltaY > noMoveMargin) {\r\n          if (deltaX == 0 || deltaY / deltaX > ratioScrollSwipe) {\r\n            inScroll = true;\r\n            clearTimeout(timerHandleLongPress);\r\n            timerHandleLongPress = null;\r\n          } else {\r\n            // swipe in progress, we cancel the long press detection\r\n            inSwipe = true;\r\n            clearTimeout(timerHandleLongPress);\r\n            timerHandleLongPress = null;\r\n            if (evt.cancelable) evt.preventDefault();\r\n            deleteVisible = true;\r\n            timerHandleDelete = setTimeout(() => {\r\n              timerHandleDelete = false;\r\n              deleteVisible = false;\r\n            }, deleteButtonVisibility);\r\n          }\r\n        }\r\n      }\r\n    }, swipeDelay);\r\n\r\n    if ($parameters.longPressToEdit) {\r\n      // Setting the timer function only if long press to edit is on\r\n      timerHandleLongPress = setTimeout(() => {\r\n        timerHandleLongPress = null;\r\n        // Only edit item if we didn't start a scroll\r\n        if (\r\n          currentPos.y == -1 ||\r\n          Math.abs(currentPos.y - startPos.y) <= scrollMargin\r\n        ) {\r\n          if (evt.cancelable) evt.preventDefault();\r\n          editItem();\r\n        }\r\n      }, longPressDelay);\r\n    }\r\n  }\r\n\r\n  function moveTouch(evt) {\r\n    // store current position\r\n    currentPos = pointerEventToXY(evt);\r\n  }\r\n\r\n  function stopTouch(evt) {\r\n    if (deleteVisible || $parameters.allwaysShowDeleteButton) return;\r\n\r\n    if (timerHandleLongPress != null) {\r\n      clearTimeout(timerHandleLongPress);\r\n      timerHandleLongPress = null;\r\n    }\r\n    if (timerHandleTouch != null) {\r\n      // Stop the timer, it was not a swipe\r\n      clearTimeout(timerHandleTouch);\r\n      timerHandleTouch = null;\r\n    } else if (inSwipe) {\r\n      inSwipe = false;\r\n      if (evt.cancelable) evt.preventDefault();\r\n    }\r\n  }\r\n\r\n  onDestroy(() => {\r\n    // Clear any timer\r\n    if (timerHandleTouch != null) clearTimeout(timerHandleTouch);\r\n    if (timerHandleDelete != null) clearTimeout(timerHandleDelete);\r\n    if (timerHandleLongPress != null) clearTimeout(timerHandleLongPress);\r\n  });\r\n\r\n  function deleteItem() {\r\n    if (type == \"item\") {\r\n      database.removeItem(item);\r\n    } else {\r\n      database.removeCategory(item);\r\n    }\r\n  }\r\n\r\n  function toggleItem() {\r\n    if (type == \"item\") {\r\n      item.coche = !item.coche;\r\n      database.updateItem(item);\r\n    }\r\n  }\r\n\r\n  function editItem() {\r\n    var editLink = \"\";\r\n    editLink = type == \"item\" ? \"#/item/edit/\" : \"#/category/edit/\";\r\n    editLink += item._id;\r\n    push(editLink);\r\n  }\r\n\r\n  function clickItem() {\r\n    if ($parameters.longPressToEdit) {\r\n      toggleItem();\r\n    } else {\r\n      editItem();\r\n    }\r\n  }\r\n</script>\r\n\r\n<div\r\n  class=\"flex\"\r\n  on:mousedown={startTouch}\r\n  on:mousemove={moveTouch}\r\n  on:mouseup={stopTouch}\r\n  on:mouseleave={stopTouch}\r\n  on:touchstart={startTouch}\r\n  on:touchmove={moveTouch}\r\n  on:touchend={stopTouch}\r\n  on:touchcancel={stopTouch}>\r\n  <li class=\"flex-grow\">\r\n    <div class=\"flex\">\r\n      {#if deleteVisible || $parameters.allwaysShowDeleteButton}\r\n        <Button\r\n          add=\"flex-none align-middle mr-3 mt-1\"\r\n          color=\"error\"\r\n          small\r\n          flat\r\n          light\r\n          icon=\"delete_outline\"\r\n          on:click={deleteItem} />\r\n      {/if}\r\n      {#if type == 'item'}\r\n        <Checkbox checked={item.coche} on:change={toggleItem} />\r\n        {#if item.coche}\r\n          <span class=\"line-through mb-2 self-center\" on:click={clickItem}>\r\n            {item.produit}\r\n          </span>\r\n        {:else}\r\n          <span class=\"mb-2 self-center\" on:click={clickItem}>\r\n            {item.produit}\r\n          </span>\r\n        {/if}\r\n      {:else}\r\n        <span class=\"mt-2 h-8 self-center\" on:click={clickItem}>\r\n          {item.category}\r\n        </span>\r\n      {/if}\r\n    </div>\r\n    <hr />\r\n  </li>\r\n</div>\r\n","<script>\r\n  import {\r\n    parameters,\r\n    local,\r\n    shoppingList,\r\n    categoryList\r\n  } from \"../components/state.js\";\r\n\r\n  import Item from \"../components/Item.svelte\";\r\n\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  import { fade } from \"svelte/transition\";\r\n  import { Button } from \"smelte\";\r\n  import { AppBar } from \"smelte\";\r\n\r\n  import { push, location } from \"svelte-spa-router\";\r\n\r\n  export let params = {};\r\n  var itemList = [];\r\n  var title;\r\n  var newItemLink;\r\n\r\n  // Save current location\r\n  $parameters.startLocation = $location;\r\n  parameters.saveParams();\r\n\r\n  $: {\r\n    if (params.id == \"null\") {\r\n      itemList = $shoppingList.filter(\r\n        item => item.categoryId == undefined || item.categoryId == \"\"\r\n      );\r\n      title = $local.emtpyCategory;\r\n      newItemLink = \"#/item/new/\" + (params.id == undefined ? \"\" : params.id);\r\n    } else {\r\n      itemList = $shoppingList.filter(item =>\r\n        params.id == undefined ? true : item.categoryId == params.id\r\n      );\r\n\r\n      if (params.id == undefined) {\r\n        title = $local.appname;\r\n      } else {\r\n        try {\r\n          title = $categoryList.filter(item => item._id == params.id)[0]\r\n            .category;\r\n        } catch (error) {\r\n          // database not opened ! Will be recomputed asap\r\n          title = \"\";\r\n        }\r\n      }\r\n    }\r\n    newItemLink = \"#/item/new/\" + (params.id == undefined ? \"\" : params.id);\r\n  }\r\n\r\n  function createNew() {\r\n    push(newItemLink);\r\n  }\r\n\r\n  function openDrawer() {\r\n    dispatch(\"routeEvent\", { action: \"openDrawer\" });\r\n  }\r\n</script>\r\n\r\n<div in:fade>\r\n  <AppBar class=\"bg-blue-400\">\r\n    <div class=\"md:hidden\">\r\n      <Button icon=\"menu\" flat color=\"white\" text on:click={openDrawer} />\r\n    </div>\r\n    <h6 class=\"md:pl-3 text-white text-lg\">{title}</h6>\r\n  </AppBar>\r\n\r\n  <ul>\r\n    {#each itemList as item (item._id)}\r\n      <Item type=\"item\" bind:item />\r\n    {/each}\r\n  </ul>\r\n\r\n  <div class=\"fixed px-5 py-5 bottom-0 right-0\">\r\n    <Button color=\"error\" icon=\"add\" on:click={createNew} />\r\n  </div>\r\n</div>\r\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ZXing = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    function fixProto(target, prototype) {\n        var setPrototypeOf = Object.setPrototypeOf;\n        setPrototypeOf ? setPrototypeOf(target, prototype) : (target.__proto__ = prototype);\n    }\n\n    function fixStack(target, fn) {\n        if (fn === void 0) {\n            fn = target.constructor;\n        }\n        var captureStackTrace = Error.captureStackTrace;\n        captureStackTrace && captureStackTrace(target, fn);\n    }\n\n\n\n\n\n    var CustomError = (function (_super) {\n        __extends(CustomError, _super);\n        function CustomError(message) {\n            var _newTarget = this.constructor;\n            var _this = _super.call(this, message) || this;\n            Object.defineProperty(_this, 'name', {\n                value: _newTarget.name,\n                enumerable: false\n            });\n            fixProto(_this, _newTarget.prototype);\n            fixStack(_this);\n            return _this;\n        }\n        \n        return CustomError;\n    })(Error);\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class Exception extends CustomError {\n        /**\n         * Allows Exception to be constructed directly\n         * with some message and prototype definition.\n         */\n        constructor(message = undefined) {\n            super(message);\n            this.message = message;\n        }\n        getKind() {\n            const ex = this.constructor;\n            return ex.kind;\n        }\n    }\n    /**\n     * It's typed as string so it can be extended and overriden.\n     */\n    Exception.kind = 'Exception';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArgumentException extends Exception {\n    }\n    ArgumentException.kind = 'ArgumentException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IllegalArgumentException extends Exception {\n    }\n    IllegalArgumentException.kind = 'IllegalArgumentException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class BinaryBitmap {\n        constructor(binarizer) {\n            this.binarizer = binarizer;\n            if (binarizer === null) {\n                throw new IllegalArgumentException('Binarizer must be non-null.');\n            }\n        }\n        /**\n         * @return The width of the bitmap.\n         */\n        getWidth() {\n            return this.binarizer.getWidth();\n        }\n        /**\n         * @return The height of the bitmap.\n         */\n        getHeight() {\n            return this.binarizer.getHeight();\n        }\n        /**\n         * Converts one row of luminance data to 1 bit data. May actually do the conversion, or return\n         * cached data. Callers should assume this method is expensive and call it as seldom as possible.\n         * This method is intended for decoding 1D barcodes and may choose to apply sharpening.\n         *\n         * @param y The row to fetch, which must be in [0, bitmap height)\n         * @param row An optional preallocated array. If null or too small, it will be ignored.\n         *            If used, the Binarizer will call BitArray.clear(). Always use the returned object.\n         * @return The array of bits for this row (true means black).\n         * @throws NotFoundException if row can't be binarized\n         */\n        getBlackRow(y /*int*/, row) {\n            return this.binarizer.getBlackRow(y, row);\n        }\n        /**\n         * Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive\n         * and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or\n         * may not apply sharpening. Therefore, a row from this matrix may not be identical to one\n         * fetched using getBlackRow(), so don't mix and match between them.\n         *\n         * @return The 2D array of bits for the image (true means black).\n         * @throws NotFoundException if image can't be binarized to make a matrix\n         */\n        getBlackMatrix() {\n            // The matrix is created on demand the first time it is requested, then cached. There are two\n            // reasons for this:\n            // 1. This work will never be done if the caller only installs 1D Reader objects, or if a\n            //    1D Reader finds a barcode before the 2D Readers run.\n            // 2. This work will only be done once even if the caller installs multiple 2D Readers.\n            if (this.matrix === null || this.matrix === undefined) {\n                this.matrix = this.binarizer.getBlackMatrix();\n            }\n            return this.matrix;\n        }\n        /**\n         * @return Whether this bitmap can be cropped.\n         */\n        isCropSupported() {\n            return this.binarizer.getLuminanceSource().isCropSupported();\n        }\n        /**\n         * Returns a new object with cropped image data. Implementations may keep a reference to the\n         * original data rather than a copy. Only callable if isCropSupported() is true.\n         *\n         * @param left The left coordinate, which must be in [0,getWidth())\n         * @param top The top coordinate, which must be in [0,getHeight())\n         * @param width The width of the rectangle to crop.\n         * @param height The height of the rectangle to crop.\n         * @return A cropped version of this object.\n         */\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            const newSource = this.binarizer.getLuminanceSource().crop(left, top, width, height);\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /**\n         * @return Whether this bitmap supports counter-clockwise rotation.\n         */\n        isRotateSupported() {\n            return this.binarizer.getLuminanceSource().isRotateSupported();\n        }\n        /**\n         * Returns a new object with rotated image data by 90 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise() {\n            const newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise();\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /**\n         * Returns a new object with rotated image data by 45 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise45() {\n            const newSource = this.binarizer.getLuminanceSource().rotateCounterClockwise45();\n            return new BinaryBitmap(this.binarizer.createBinarizer(newSource));\n        }\n        /*@Override*/\n        toString() {\n            try {\n                return this.getBlackMatrix().toString();\n            }\n            catch (e /*: NotFoundException*/) {\n                return '';\n            }\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ChecksumException extends Exception {\n        static getChecksumInstance() {\n            return new ChecksumException();\n        }\n    }\n    ChecksumException.kind = 'ChecksumException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class hierarchy provides a set of methods to convert luminance data to 1 bit data.\n     * It allows the algorithm to vary polymorphically, for example allowing a very expensive\n     * thresholding technique for servers and a fast one for mobile. It also permits the implementation\n     * to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class Binarizer {\n        constructor(source) {\n            this.source = source;\n        }\n        getLuminanceSource() {\n            return this.source;\n        }\n        getWidth() {\n            return this.source.getWidth();\n        }\n        getHeight() {\n            return this.source.getHeight();\n        }\n    }\n\n    class System {\n        // public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)\n        /**\n         * Makes a copy of a array.\n         */\n        static arraycopy(src, srcPos, dest, destPos, length) {\n            // TODO: better use split or set?\n            while (length--) {\n                dest[destPos++] = src[srcPos++];\n            }\n        }\n        /**\n         * Returns the current time in milliseconds.\n         */\n        static currentTimeMillis() {\n            return Date.now();\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IndexOutOfBoundsException extends Exception {\n    }\n    IndexOutOfBoundsException.kind = 'IndexOutOfBoundsException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException {\n        constructor(index = undefined, message = undefined) {\n            super(message);\n            this.index = index;\n            this.message = message;\n        }\n    }\n    ArrayIndexOutOfBoundsException.kind = 'ArrayIndexOutOfBoundsException';\n\n    class Arrays {\n        /**\n         * Assigns the specified int value to each element of the specified array\n         * of ints.\n         *\n         * @param a the array to be filled\n         * @param val the value to be stored in all elements of the array\n         */\n        static fill(a, val) {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] = val;\n        }\n        /**\n         * Assigns the specified int value to each element of the specified\n         * range of the specified array of ints.  The range to be filled\n         * extends from index {@code fromIndex}, inclusive, to index\n         * {@code toIndex}, exclusive.  (If {@code fromIndex==toIndex}, the\n         * range to be filled is empty.)\n         *\n         * @param a the array to be filled\n         * @param fromIndex the index of the first element (inclusive) to be\n         *        filled with the specified value\n         * @param toIndex the index of the last element (exclusive) to be\n         *        filled with the specified value\n         * @param val the value to be stored in all elements of the array\n         * @throws IllegalArgumentException if {@code fromIndex > toIndex}\n         * @throws ArrayIndexOutOfBoundsException if {@code fromIndex < 0} or\n         *         {@code toIndex > a.length}\n         */\n        static fillWithin(a, fromIndex, toIndex, val) {\n            Arrays.rangeCheck(a.length, fromIndex, toIndex);\n            for (let i = fromIndex; i < toIndex; i++)\n                a[i] = val;\n        }\n        /**\n         * Checks that {@code fromIndex} and {@code toIndex} are in\n         * the range and throws an exception if they aren't.\n         */\n        static rangeCheck(arrayLength, fromIndex, toIndex) {\n            if (fromIndex > toIndex) {\n                throw new IllegalArgumentException('fromIndex(' + fromIndex + ') > toIndex(' + toIndex + ')');\n            }\n            if (fromIndex < 0) {\n                throw new ArrayIndexOutOfBoundsException(fromIndex);\n            }\n            if (toIndex > arrayLength) {\n                throw new ArrayIndexOutOfBoundsException(toIndex);\n            }\n        }\n        static asList(...args) {\n            return args;\n        }\n        static create(rows, cols, value) {\n            let arr = Array.from({ length: rows });\n            return arr.map(x => Array.from({ length: cols }).fill(value));\n        }\n        static createInt32Array(rows, cols, value) {\n            let arr = Array.from({ length: rows });\n            return arr.map(x => Int32Array.from({ length: cols }).fill(value));\n        }\n        static equals(first, second) {\n            if (!first) {\n                return false;\n            }\n            if (!second) {\n                return false;\n            }\n            if (!first.length) {\n                return false;\n            }\n            if (!second.length) {\n                return false;\n            }\n            if (first.length !== second.length) {\n                return false;\n            }\n            for (let i = 0, length = first.length; i < length; i++) {\n                if (first[i] !== second[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static hashCode(a) {\n            if (a === null) {\n                return 0;\n            }\n            let result = 1;\n            for (const element of a) {\n                result = 31 * result + element;\n            }\n            return result;\n        }\n        static fillUint8Array(a, value) {\n            for (let i = 0; i !== a.length; i++) {\n                a[i] = value;\n            }\n        }\n        static copyOf(original, newLength) {\n            return original.slice(0, newLength);\n        }\n        static copyOfUint8Array(original, newLength) {\n            if (original.length <= newLength) {\n                const newArray = new Uint8Array(newLength);\n                newArray.set(original);\n                return newArray;\n            }\n            return original.slice(0, newLength);\n        }\n        static copyOfRange(original, from, to) {\n            const newLength = to - from;\n            const copy = new Int32Array(newLength);\n            System.arraycopy(original, from, copy, 0, newLength);\n            return copy;\n        }\n        /*\n        * Returns the index of of the element in a sorted array or (-n-1) where n is the insertion point\n        * for the new element.\n        * Parameters:\n        *     ar - A sorted array\n        *     el - An element to search for\n        *     comparator - A comparator function. The function takes two arguments: (a, b) and returns:\n        *        a negative number  if a is less than b;\n        *        0 if a is equal to b;\n        *        a positive number of a is greater than b.\n        * The array may contain duplicate elements. If there are more than one equal elements in the array,\n        * the returned value can be the index of any one of the equal elements.\n        *\n        * http://jsfiddle.net/aryzhov/pkfst550/\n        */\n        static binarySearch(ar, el, comparator) {\n            if (undefined === comparator) {\n                comparator = Arrays.numberComparator;\n            }\n            let m = 0;\n            let n = ar.length - 1;\n            while (m <= n) {\n                const k = (n + m) >> 1;\n                const cmp = comparator(el, ar[k]);\n                if (cmp > 0) {\n                    m = k + 1;\n                }\n                else if (cmp < 0) {\n                    n = k - 1;\n                }\n                else {\n                    return k;\n                }\n            }\n            return -m - 1;\n        }\n        static numberComparator(a, b) {\n            return a - b;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Integer class.\n     */\n    class Integer {\n        static numberOfTrailingZeros(i) {\n            let y;\n            if (i === 0)\n                return 32;\n            let n = 31;\n            y = i << 16;\n            if (y !== 0) {\n                n -= 16;\n                i = y;\n            }\n            y = i << 8;\n            if (y !== 0) {\n                n -= 8;\n                i = y;\n            }\n            y = i << 4;\n            if (y !== 0) {\n                n -= 4;\n                i = y;\n            }\n            y = i << 2;\n            if (y !== 0) {\n                n -= 2;\n                i = y;\n            }\n            return n - ((i << 1) >>> 31);\n        }\n        static numberOfLeadingZeros(i) {\n            // HD, Figure 5-6\n            if (i === 0) {\n                return 32;\n            }\n            let n = 1;\n            if (i >>> 16 === 0) {\n                n += 16;\n                i <<= 16;\n            }\n            if (i >>> 24 === 0) {\n                n += 8;\n                i <<= 8;\n            }\n            if (i >>> 28 === 0) {\n                n += 4;\n                i <<= 4;\n            }\n            if (i >>> 30 === 0) {\n                n += 2;\n                i <<= 2;\n            }\n            n -= i >>> 31;\n            return n;\n        }\n        static toHexString(i) {\n            return i.toString(16);\n        }\n        static toBinaryString(intNumber) {\n            return String(parseInt(String(intNumber), 2));\n        }\n        // Returns the number of one-bits in the two's complement binary representation of the specified int value. This function is sometimes referred to as the population count.\n        // Returns:\n        // the number of one-bits in the two's complement binary representation of the specified int value.\n        static bitCount(i) {\n            // HD, Figure 5-2\n            i = i - ((i >>> 1) & 0x55555555);\n            i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n            i = (i + (i >>> 4)) & 0x0f0f0f0f;\n            i = i + (i >>> 8);\n            i = i + (i >>> 16);\n            return i & 0x3f;\n        }\n        static truncDivision(dividend, divisor) {\n            return Math.trunc(dividend / divisor);\n        }\n        /**\n         * Converts A string to an integer.\n         * @param s A string to convert into a number.\n         * @param radix A value between 2 and 36 that specifies the base of the number in numString. If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal. All other strings are considered decimal.\n         */\n        static parseInt(num, radix = undefined) {\n            return parseInt(num, radix);\n        }\n    }\n    Integer.MIN_VALUE_32_BITS = -2147483648;\n    Integer.MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>A simple, fast array of bits, represented compactly by an array of ints internally.</p>\n     *\n     * @author Sean Owen\n     */\n    class BitArray /*implements Cloneable*/ {\n        // public constructor() {\n        //   this.size = 0\n        //   this.bits = new Int32Array(1)\n        // }\n        // public constructor(size?: number /*int*/) {\n        //   if (undefined === size) {\n        //     this.size = 0\n        //   } else {\n        //     this.size = size\n        //   }\n        //   this.bits = this.makeArray(size)\n        // }\n        // For testing only\n        constructor(size /*int*/, bits) {\n            if (undefined === size) {\n                this.size = 0;\n                this.bits = new Int32Array(1);\n            }\n            else {\n                this.size = size;\n                if (undefined === bits || null === bits) {\n                    this.bits = BitArray.makeArray(size);\n                }\n                else {\n                    this.bits = bits;\n                }\n            }\n        }\n        getSize() {\n            return this.size;\n        }\n        getSizeInBytes() {\n            return Math.floor((this.size + 7) / 8);\n        }\n        ensureCapacity(size /*int*/) {\n            if (size > this.bits.length * 32) {\n                const newBits = BitArray.makeArray(size);\n                System.arraycopy(this.bits, 0, newBits, 0, this.bits.length);\n                this.bits = newBits;\n            }\n        }\n        /**\n         * @param i bit to get\n         * @return true iff bit i is set\n         */\n        get(i /*int*/) {\n            return (this.bits[Math.floor(i / 32)] & (1 << (i & 0x1F))) !== 0;\n        }\n        /**\n         * Sets bit i.\n         *\n         * @param i bit to set\n         */\n        set(i /*int*/) {\n            this.bits[Math.floor(i / 32)] |= 1 << (i & 0x1F);\n        }\n        /**\n         * Flips bit i.\n         *\n         * @param i bit to set\n         */\n        flip(i /*int*/) {\n            this.bits[Math.floor(i / 32)] ^= 1 << (i & 0x1F);\n        }\n        /**\n         * @param from first bit to check\n         * @return index of first bit that is set, starting from the given index, or size if none are set\n         *  at or beyond this given index\n         * @see #getNextUnset(int)\n         */\n        getNextSet(from /*int*/) {\n            const size = this.size;\n            if (from >= size) {\n                return size;\n            }\n            const bits = this.bits;\n            let bitsOffset = Math.floor(from / 32);\n            let currentBits = bits[bitsOffset];\n            // mask off lesser bits first\n            currentBits &= ~((1 << (from & 0x1F)) - 1);\n            const length = bits.length;\n            while (currentBits === 0) {\n                if (++bitsOffset === length) {\n                    return size;\n                }\n                currentBits = bits[bitsOffset];\n            }\n            const result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n            return result > size ? size : result;\n        }\n        /**\n         * @param from index to start looking for unset bit\n         * @return index of next unset bit, or {@code size} if none are unset until the end\n         * @see #getNextSet(int)\n         */\n        getNextUnset(from /*int*/) {\n            const size = this.size;\n            if (from >= size) {\n                return size;\n            }\n            const bits = this.bits;\n            let bitsOffset = Math.floor(from / 32);\n            let currentBits = ~bits[bitsOffset];\n            // mask off lesser bits first\n            currentBits &= ~((1 << (from & 0x1F)) - 1);\n            const length = bits.length;\n            while (currentBits === 0) {\n                if (++bitsOffset === length) {\n                    return size;\n                }\n                currentBits = ~bits[bitsOffset];\n            }\n            const result = (bitsOffset * 32) + Integer.numberOfTrailingZeros(currentBits);\n            return result > size ? size : result;\n        }\n        /**\n         * Sets a block of 32 bits, starting at bit i.\n         *\n         * @param i first bit to set\n         * @param newBits the new value of the next 32 bits. Note again that the least-significant bit\n         * corresponds to bit i, the next-least-significant to i+1, and so on.\n         */\n        setBulk(i /*int*/, newBits /*int*/) {\n            this.bits[Math.floor(i / 32)] = newBits;\n        }\n        /**\n         * Sets a range of bits.\n         *\n         * @param start start of range, inclusive.\n         * @param end end of range, exclusive\n         */\n        setRange(start /*int*/, end /*int*/) {\n            if (end < start || start < 0 || end > this.size) {\n                throw new IllegalArgumentException();\n            }\n            if (end === start) {\n                return;\n            }\n            end--; // will be easier to treat this as the last actually set bit -- inclusive\n            const firstInt = Math.floor(start / 32);\n            const lastInt = Math.floor(end / 32);\n            const bits = this.bits;\n            for (let i = firstInt; i <= lastInt; i++) {\n                const firstBit = i > firstInt ? 0 : start & 0x1F;\n                const lastBit = i < lastInt ? 31 : end & 0x1F;\n                // Ones from firstBit to lastBit, inclusive\n                const mask = (2 << lastBit) - (1 << firstBit);\n                bits[i] |= mask;\n            }\n        }\n        /**\n         * Clears all bits (sets to false).\n         */\n        clear() {\n            const max = this.bits.length;\n            const bits = this.bits;\n            for (let i = 0; i < max; i++) {\n                bits[i] = 0;\n            }\n        }\n        /**\n         * Efficient method to check if a range of bits is set, or not set.\n         *\n         * @param start start of range, inclusive.\n         * @param end end of range, exclusive\n         * @param value if true, checks that bits in range are set, otherwise checks that they are not set\n         * @return true iff all bits are set or not set in range, according to value argument\n         * @throws IllegalArgumentException if end is less than start or the range is not contained in the array\n         */\n        isRange(start /*int*/, end /*int*/, value) {\n            if (end < start || start < 0 || end > this.size) {\n                throw new IllegalArgumentException();\n            }\n            if (end === start) {\n                return true; // empty range matches\n            }\n            end--; // will be easier to treat this as the last actually set bit -- inclusive\n            const firstInt = Math.floor(start / 32);\n            const lastInt = Math.floor(end / 32);\n            const bits = this.bits;\n            for (let i = firstInt; i <= lastInt; i++) {\n                const firstBit = i > firstInt ? 0 : start & 0x1F;\n                const lastBit = i < lastInt ? 31 : end & 0x1F;\n                // Ones from firstBit to lastBit, inclusive\n                const mask = (2 << lastBit) - (1 << firstBit) & 0xFFFFFFFF;\n                // TYPESCRIPTPORT: & 0xFFFFFFFF added to discard anything after 32 bits, as ES has 53 bits\n                // Return false if we're looking for 1s and the masked bits[i] isn't all 1s (is: that,\n                // equals the mask, or we're looking for 0s and the masked portion is not all 0s\n                if ((bits[i] & mask) !== (value ? mask : 0)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        appendBit(bit) {\n            this.ensureCapacity(this.size + 1);\n            if (bit) {\n                this.bits[Math.floor(this.size / 32)] |= 1 << (this.size & 0x1F);\n            }\n            this.size++;\n        }\n        /**\n         * Appends the least-significant bits, from value, in order from most-significant to\n         * least-significant. For example, appending 6 bits from 0x000001E will append the bits\n         * 0, 1, 1, 1, 1, 0 in that order.\n         *\n         * @param value {@code int} containing bits to append\n         * @param numBits bits from value to append\n         */\n        appendBits(value /*int*/, numBits /*int*/) {\n            if (numBits < 0 || numBits > 32) {\n                throw new IllegalArgumentException('Num bits must be between 0 and 32');\n            }\n            this.ensureCapacity(this.size + numBits);\n            // const appendBit = this.appendBit;\n            for (let numBitsLeft = numBits; numBitsLeft > 0; numBitsLeft--) {\n                this.appendBit(((value >> (numBitsLeft - 1)) & 0x01) === 1);\n            }\n        }\n        appendBitArray(other) {\n            const otherSize = other.size;\n            this.ensureCapacity(this.size + otherSize);\n            // const appendBit = this.appendBit;\n            for (let i = 0; i < otherSize; i++) {\n                this.appendBit(other.get(i));\n            }\n        }\n        xor(other) {\n            if (this.size !== other.size) {\n                throw new IllegalArgumentException('Sizes don\\'t match');\n            }\n            const bits = this.bits;\n            for (let i = 0, length = bits.length; i < length; i++) {\n                // The last int could be incomplete (i.e. not have 32 bits in\n                // it) but there is no problem since 0 XOR 0 == 0.\n                bits[i] ^= other.bits[i];\n            }\n        }\n        /**\n         *\n         * @param bitOffset first bit to start writing\n         * @param array array to write into. Bytes are written most-significant byte first. This is the opposite\n         *  of the internal representation, which is exposed by {@link #getBitArray()}\n         * @param offset position in array to start writing\n         * @param numBytes how many bytes to write\n         */\n        toBytes(bitOffset /*int*/, array, offset /*int*/, numBytes /*int*/) {\n            for (let i = 0; i < numBytes; i++) {\n                let theByte = 0;\n                for (let j = 0; j < 8; j++) {\n                    if (this.get(bitOffset)) {\n                        theByte |= 1 << (7 - j);\n                    }\n                    bitOffset++;\n                }\n                array[offset + i] = /*(byte)*/ theByte;\n            }\n        }\n        /**\n         * @return underlying array of ints. The first element holds the first 32 bits, and the least\n         *         significant bit is bit 0.\n         */\n        getBitArray() {\n            return this.bits;\n        }\n        /**\n         * Reverses all bits in the array.\n         */\n        reverse() {\n            const newBits = new Int32Array(this.bits.length);\n            // reverse all int's first\n            const len = Math.floor((this.size - 1) / 32);\n            const oldBitsLen = len + 1;\n            const bits = this.bits;\n            for (let i = 0; i < oldBitsLen; i++) {\n                let x = bits[i];\n                x = ((x >> 1) & 0x55555555) | ((x & 0x55555555) << 1);\n                x = ((x >> 2) & 0x33333333) | ((x & 0x33333333) << 2);\n                x = ((x >> 4) & 0x0f0f0f0f) | ((x & 0x0f0f0f0f) << 4);\n                x = ((x >> 8) & 0x00ff00ff) | ((x & 0x00ff00ff) << 8);\n                x = ((x >> 16) & 0x0000ffff) | ((x & 0x0000ffff) << 16);\n                newBits[len - i] = /*(int)*/ x;\n            }\n            // now correct the int's if the bit size isn't a multiple of 32\n            if (this.size !== oldBitsLen * 32) {\n                const leftOffset = oldBitsLen * 32 - this.size;\n                let currentInt = newBits[0] >>> leftOffset;\n                for (let i = 1; i < oldBitsLen; i++) {\n                    const nextInt = newBits[i];\n                    currentInt |= nextInt << (32 - leftOffset);\n                    newBits[i - 1] = currentInt;\n                    currentInt = nextInt >>> leftOffset;\n                }\n                newBits[oldBitsLen - 1] = currentInt;\n            }\n            this.bits = newBits;\n        }\n        static makeArray(size /*int*/) {\n            return new Int32Array(Math.floor((size + 31) / 32));\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof BitArray)) {\n                return false;\n            }\n            const other = o;\n            return this.size === other.size && Arrays.equals(this.bits, other.bits);\n        }\n        /*@Override*/\n        hashCode() {\n            return 31 * this.size + Arrays.hashCode(this.bits);\n        }\n        /*@Override*/\n        toString() {\n            let result = '';\n            for (let i = 0, size = this.size; i < size; i++) {\n                if ((i & 0x07) === 0) {\n                    result += ' ';\n                }\n                result += this.get(i) ? 'X' : '.';\n            }\n            return result;\n        }\n        /*@Override*/\n        clone() {\n            return new BitArray(this.size, this.bits.slice());\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * Encapsulates a type of hint that a caller may pass to a barcode reader to help it\n     * more quickly or accurately decode it. It is up to implementations to decide what,\n     * if anything, to do with the information that is supplied.\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @see Reader#decode(BinaryBitmap,java.util.Map)\n     */\n    var DecodeHintType;\n    (function (DecodeHintType) {\n        /**\n         * Unspecified, application-specific hint. Maps to an unspecified {@link Object}.\n         */\n        DecodeHintType[DecodeHintType[\"OTHER\"] = 0] = \"OTHER\"; /*(Object.class)*/\n        /**\n         * Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"PURE_BARCODE\"] = 1] = \"PURE_BARCODE\"; /*(Void.class)*/\n        /**\n         * Image is known to be of one of a few possible formats.\n         * Maps to a {@link List} of {@link BarcodeFormat}s.\n         */\n        DecodeHintType[DecodeHintType[\"POSSIBLE_FORMATS\"] = 2] = \"POSSIBLE_FORMATS\"; /*(List.class)*/\n        /**\n         * Spend more time to try to find a barcode; optimize for accuracy, not speed.\n         * Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"TRY_HARDER\"] = 3] = \"TRY_HARDER\"; /*(Void.class)*/\n        /**\n         * Specifies what character encoding to use when decoding, where applicable (type String)\n         */\n        DecodeHintType[DecodeHintType[\"CHARACTER_SET\"] = 4] = \"CHARACTER_SET\"; /*(String.class)*/\n        /**\n         * Allowed lengths of encoded data -- reject anything else. Maps to an {@code Int32Array}.\n         */\n        DecodeHintType[DecodeHintType[\"ALLOWED_LENGTHS\"] = 5] = \"ALLOWED_LENGTHS\"; /*(Int32Array.class)*/\n        /**\n         * Assume Code 39 codes employ a check digit. Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"ASSUME_CODE_39_CHECK_DIGIT\"] = 6] = \"ASSUME_CODE_39_CHECK_DIGIT\"; /*(Void.class)*/\n        /**\n         * Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.\n         * For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;\n         * use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"ASSUME_GS1\"] = 7] = \"ASSUME_GS1\"; /*(Void.class)*/\n        /**\n         * If true, return the start and end digits in a Codabar barcode instead of stripping them. They\n         * are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them\n         * to not be. Doesn't matter what it maps to; use {@link Boolean#TRUE}.\n         */\n        DecodeHintType[DecodeHintType[\"RETURN_CODABAR_START_END\"] = 8] = \"RETURN_CODABAR_START_END\"; /*(Void.class)*/\n        /**\n         * The caller needs to be notified via callback when a possible {@link ResultPoint}\n         * is found. Maps to a {@link ResultPointCallback}.\n         */\n        DecodeHintType[DecodeHintType[\"NEED_RESULT_POINT_CALLBACK\"] = 9] = \"NEED_RESULT_POINT_CALLBACK\"; /*(ResultPointCallback.class)*/\n        /**\n         * Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.\n         * Maps to an {@code Int32Array} of the allowed extension lengths, for example [2], [5], or [2, 5].\n         * If it is optional to have an extension, do not set this hint. If this is set,\n         * and a UPC or EAN barcode is found but an extension is not, then no result will be returned\n         * at all.\n         */\n        DecodeHintType[DecodeHintType[\"ALLOWED_EAN_EXTENSIONS\"] = 10] = \"ALLOWED_EAN_EXTENSIONS\"; /*(Int32Array.class)*/\n        // End of enumeration values.\n        /**\n         * Data type the hint is expecting.\n         * Among the possible values the {@link Void} stands out as being used for\n         * hints that do not expect a value to be supplied (flag hints). Such hints\n         * will possibly have their value ignored, or replaced by a\n         * {@link Boolean#TRUE}. Hint suppliers should probably use\n         * {@link Boolean#TRUE} as directed by the actual hint documentation.\n         */\n        // private valueType: Class<?>\n        // DecodeHintType(valueType: Class<?>) {\n        //   this.valueType = valueType\n        // }\n        // public getValueType(): Class<?> {\n        //   return valueType\n        // }\n    })(DecodeHintType || (DecodeHintType = {}));\n    var DecodeHintType$1 = DecodeHintType;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class FormatException extends Exception {\n        static getFormatInstance() {\n            return new FormatException();\n        }\n    }\n    FormatException.kind = 'FormatException';\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.HashMap;*/\n    /*import java.util.Map;*/\n    var CharacterSetValueIdentifiers;\n    (function (CharacterSetValueIdentifiers) {\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp437\"] = 0] = \"Cp437\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_1\"] = 1] = \"ISO8859_1\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_2\"] = 2] = \"ISO8859_2\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_3\"] = 3] = \"ISO8859_3\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_4\"] = 4] = \"ISO8859_4\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_5\"] = 5] = \"ISO8859_5\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_6\"] = 6] = \"ISO8859_6\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_7\"] = 7] = \"ISO8859_7\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_8\"] = 8] = \"ISO8859_8\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_9\"] = 9] = \"ISO8859_9\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_10\"] = 10] = \"ISO8859_10\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_11\"] = 11] = \"ISO8859_11\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_13\"] = 12] = \"ISO8859_13\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_14\"] = 13] = \"ISO8859_14\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_15\"] = 14] = \"ISO8859_15\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ISO8859_16\"] = 15] = \"ISO8859_16\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"SJIS\"] = 16] = \"SJIS\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1250\"] = 17] = \"Cp1250\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1251\"] = 18] = \"Cp1251\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1252\"] = 19] = \"Cp1252\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Cp1256\"] = 20] = \"Cp1256\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UnicodeBigUnmarked\"] = 21] = \"UnicodeBigUnmarked\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"UTF8\"] = 22] = \"UTF8\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"ASCII\"] = 23] = \"ASCII\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"Big5\"] = 24] = \"Big5\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"GB18030\"] = 25] = \"GB18030\";\n        CharacterSetValueIdentifiers[CharacterSetValueIdentifiers[\"EUC_KR\"] = 26] = \"EUC_KR\";\n    })(CharacterSetValueIdentifiers || (CharacterSetValueIdentifiers = {}));\n    /**\n     * Encapsulates a Character Set ECI, according to \"Extended Channel Interpretations\" 5.3.1.1\n     * of ISO 18004.\n     *\n     * @author Sean Owen\n     */\n    class CharacterSetECI {\n        constructor(valueIdentifier, valuesParam, name, ...otherEncodingNames) {\n            this.valueIdentifier = valueIdentifier;\n            this.name = name;\n            if (typeof valuesParam === 'number') {\n                this.values = Int32Array.from([valuesParam]);\n            }\n            else {\n                this.values = valuesParam;\n            }\n            this.otherEncodingNames = otherEncodingNames;\n            CharacterSetECI.VALUE_IDENTIFIER_TO_ECI.set(valueIdentifier, this);\n            CharacterSetECI.NAME_TO_ECI.set(name, this);\n            const values = this.values;\n            for (let i = 0, length = values.length; i !== length; i++) {\n                const v = values[i];\n                CharacterSetECI.VALUES_TO_ECI.set(v, this);\n            }\n            for (const otherName of otherEncodingNames) {\n                CharacterSetECI.NAME_TO_ECI.set(otherName, this);\n            }\n        }\n        // CharacterSetECI(value: number /*int*/) {\n        //   this(new Int32Array {value})\n        // }\n        // CharacterSetECI(value: number /*int*/, String... otherEncodingNames) {\n        //   this.values = new Int32Array {value}\n        //   this.otherEncodingNames = otherEncodingNames\n        // }\n        // CharacterSetECI(values: Int32Array, String... otherEncodingNames) {\n        //   this.values = values\n        //   this.otherEncodingNames = otherEncodingNames\n        // }\n        getValueIdentifier() {\n            return this.valueIdentifier;\n        }\n        getName() {\n            return this.name;\n        }\n        getValue() {\n            return this.values[0];\n        }\n        /**\n         * @param value character set ECI value\n         * @return {@code CharacterSetECI} representing ECI of given value, or null if it is legal but\n         *   unsupported\n         * @throws FormatException if ECI value is invalid\n         */\n        static getCharacterSetECIByValue(value /*int*/) {\n            if (value < 0 || value >= 900) {\n                throw new FormatException('incorect value');\n            }\n            const characterSet = CharacterSetECI.VALUES_TO_ECI.get(value);\n            if (undefined === characterSet) {\n                throw new FormatException('incorect value');\n            }\n            return characterSet;\n        }\n        /**\n         * @param name character set ECI encoding name\n         * @return CharacterSetECI representing ECI for character encoding, or null if it is legal\n         *   but unsupported\n         */\n        static getCharacterSetECIByName(name) {\n            const characterSet = CharacterSetECI.NAME_TO_ECI.get(name);\n            if (undefined === characterSet) {\n                throw new FormatException('incorect value');\n            }\n            return characterSet;\n        }\n        equals(o) {\n            if (!(o instanceof CharacterSetECI)) {\n                return false;\n            }\n            const other = o;\n            return this.getName() === other.getName();\n        }\n    }\n    CharacterSetECI.VALUE_IDENTIFIER_TO_ECI = new Map();\n    CharacterSetECI.VALUES_TO_ECI = new Map();\n    CharacterSetECI.NAME_TO_ECI = new Map();\n    // Enum name is a Java encoding valid for java.lang and java.io\n    // TYPESCRIPTPORT: changed the main label for ISO as the TextEncoder did not recognized them in the form from java\n    // (eg ISO8859_1 must be ISO88591 or ISO8859-1 or ISO-8859-1)\n    // later on: well, except 16 wich does not work with ISO885916 so used ISO-8859-1 form for default\n    CharacterSetECI.Cp437 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp437, Int32Array.from([0, 2]), 'Cp437');\n    CharacterSetECI.ISO8859_1 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_1, Int32Array.from([1, 3]), 'ISO-8859-1', 'ISO88591', 'ISO8859_1');\n    CharacterSetECI.ISO8859_2 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_2, 4, 'ISO-8859-2', 'ISO88592', 'ISO8859_2');\n    CharacterSetECI.ISO8859_3 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_3, 5, 'ISO-8859-3', 'ISO88593', 'ISO8859_3');\n    CharacterSetECI.ISO8859_4 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_4, 6, 'ISO-8859-4', 'ISO88594', 'ISO8859_4');\n    CharacterSetECI.ISO8859_5 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_5, 7, 'ISO-8859-5', 'ISO88595', 'ISO8859_5');\n    CharacterSetECI.ISO8859_6 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_6, 8, 'ISO-8859-6', 'ISO88596', 'ISO8859_6');\n    CharacterSetECI.ISO8859_7 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_7, 9, 'ISO-8859-7', 'ISO88597', 'ISO8859_7');\n    CharacterSetECI.ISO8859_8 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_8, 10, 'ISO-8859-8', 'ISO88598', 'ISO8859_8');\n    CharacterSetECI.ISO8859_9 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_9, 11, 'ISO-8859-9', 'ISO88599', 'ISO8859_9');\n    CharacterSetECI.ISO8859_10 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_10, 12, 'ISO-8859-10', 'ISO885910', 'ISO8859_10');\n    CharacterSetECI.ISO8859_11 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_11, 13, 'ISO-8859-11', 'ISO885911', 'ISO8859_11');\n    CharacterSetECI.ISO8859_13 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_13, 15, 'ISO-8859-13', 'ISO885913', 'ISO8859_13');\n    CharacterSetECI.ISO8859_14 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_14, 16, 'ISO-8859-14', 'ISO885914', 'ISO8859_14');\n    CharacterSetECI.ISO8859_15 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_15, 17, 'ISO-8859-15', 'ISO885915', 'ISO8859_15');\n    CharacterSetECI.ISO8859_16 = new CharacterSetECI(CharacterSetValueIdentifiers.ISO8859_16, 18, 'ISO-8859-16', 'ISO885916', 'ISO8859_16');\n    CharacterSetECI.SJIS = new CharacterSetECI(CharacterSetValueIdentifiers.SJIS, 20, 'SJIS', 'Shift_JIS');\n    CharacterSetECI.Cp1250 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1250, 21, 'Cp1250', 'windows-1250');\n    CharacterSetECI.Cp1251 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1251, 22, 'Cp1251', 'windows-1251');\n    CharacterSetECI.Cp1252 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1252, 23, 'Cp1252', 'windows-1252');\n    CharacterSetECI.Cp1256 = new CharacterSetECI(CharacterSetValueIdentifiers.Cp1256, 24, 'Cp1256', 'windows-1256');\n    CharacterSetECI.UnicodeBigUnmarked = new CharacterSetECI(CharacterSetValueIdentifiers.UnicodeBigUnmarked, 25, 'UnicodeBigUnmarked', 'UTF-16BE', 'UnicodeBig');\n    CharacterSetECI.UTF8 = new CharacterSetECI(CharacterSetValueIdentifiers.UTF8, 26, 'UTF8', 'UTF-8');\n    CharacterSetECI.ASCII = new CharacterSetECI(CharacterSetValueIdentifiers.ASCII, Int32Array.from([27, 170]), 'ASCII', 'US-ASCII');\n    CharacterSetECI.Big5 = new CharacterSetECI(CharacterSetValueIdentifiers.Big5, 28, 'Big5');\n    CharacterSetECI.GB18030 = new CharacterSetECI(CharacterSetValueIdentifiers.GB18030, 29, 'GB18030', 'GB2312', 'EUC_CN', 'GBK');\n    CharacterSetECI.EUC_KR = new CharacterSetECI(CharacterSetValueIdentifiers.EUC_KR, 30, 'EUC_KR', 'EUC-KR');\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class UnsupportedOperationException extends Exception {\n    }\n    UnsupportedOperationException.kind = 'UnsupportedOperationException';\n\n    /**\n     * Responsible for en/decoding strings.\n     */\n    class StringEncoding {\n        /**\n         * Decodes some Uint8Array to a string format.\n         */\n        static decode(bytes, encoding) {\n            const encodingName = this.encodingName(encoding);\n            if (this.customDecoder) {\n                return this.customDecoder(bytes, encodingName);\n            }\n            // Increases browser support.\n            if (typeof TextDecoder === 'undefined' || this.shouldDecodeOnFallback(encodingName)) {\n                return this.decodeFallback(bytes, encodingName);\n            }\n            return new TextDecoder(encodingName).decode(bytes);\n        }\n        /**\n         * Checks if the decoding method should use the fallback for decoding\n         * once Node TextDecoder doesn't support all encoding formats.\n         *\n         * @param encodingName\n         */\n        static shouldDecodeOnFallback(encodingName) {\n            return !StringEncoding.isBrowser() && encodingName === 'ISO-8859-1';\n        }\n        /**\n         * Encodes some string into a Uint8Array.\n         */\n        static encode(s, encoding) {\n            const encodingName = this.encodingName(encoding);\n            if (this.customEncoder) {\n                return this.customEncoder(s, encodingName);\n            }\n            // Increases browser support.\n            if (typeof TextEncoder === 'undefined') {\n                return this.encodeFallback(s);\n            }\n            // TextEncoder only encodes to UTF8 by default as specified by encoding.spec.whatwg.org\n            return new TextEncoder().encode(s);\n        }\n        static isBrowser() {\n            return (typeof window !== 'undefined' && {}.toString.call(window) === '[object Window]');\n        }\n        /**\n         * Returns the string value from some encoding character set.\n         */\n        static encodingName(encoding) {\n            return typeof encoding === 'string'\n                ? encoding\n                : encoding.getName();\n        }\n        /**\n         * Returns character set from some encoding character set.\n         */\n        static encodingCharacterSet(encoding) {\n            if (encoding instanceof CharacterSetECI) {\n                return encoding;\n            }\n            return CharacterSetECI.getCharacterSetECIByName(encoding);\n        }\n        /**\n         * Runs a fallback for the native decoding funcion.\n         */\n        static decodeFallback(bytes, encoding) {\n            const characterSet = this.encodingCharacterSet(encoding);\n            if (StringEncoding.isDecodeFallbackSupported(characterSet)) {\n                let s = '';\n                for (let i = 0, length = bytes.length; i < length; i++) {\n                    let h = bytes[i].toString(16);\n                    if (h.length < 2) {\n                        h = '0' + h;\n                    }\n                    s += '%' + h;\n                }\n                return decodeURIComponent(s);\n            }\n            if (characterSet.equals(CharacterSetECI.UnicodeBigUnmarked)) {\n                return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n            }\n            throw new UnsupportedOperationException(`Encoding ${this.encodingName(encoding)} not supported by fallback.`);\n        }\n        static isDecodeFallbackSupported(characterSet) {\n            return characterSet.equals(CharacterSetECI.UTF8) ||\n                characterSet.equals(CharacterSetECI.ISO8859_1) ||\n                characterSet.equals(CharacterSetECI.ASCII);\n        }\n        /**\n         * Runs a fallback for the native encoding funcion.\n         *\n         * @see https://stackoverflow.com/a/17192845/4367683\n         */\n        static encodeFallback(s) {\n            const encodedURIstring = btoa(unescape(encodeURIComponent(s)));\n            const charList = encodedURIstring.split('');\n            const uintArray = [];\n            for (let i = 0; i < charList.length; i++) {\n                uintArray.push(charList[i].charCodeAt(0));\n            }\n            return new Uint8Array(uintArray);\n        }\n    }\n\n    /*\n     * Copyright (C) 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Common string-related functions.\n     *\n     * @author Sean Owen\n     * @author Alex Dupre\n     */\n    class StringUtils {\n        // SHIFT_JIS.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING) ||\n        // EUC_JP.equalsIgnoreCase(PLATFORM_DEFAULT_ENCODING);\n        static castAsNonUtf8Char(code, encoding = null) {\n            // ISO 8859-1 is the Java default as UTF-8 is JavaScripts\n            // you can see this method as a Java version of String.fromCharCode\n            const e = encoding ? encoding.getName() : this.ISO88591;\n            // use passed format (fromCharCode will return UTF8 encoding)\n            return StringEncoding.decode(new Uint8Array([code]), e);\n        }\n        /**\n         * @param bytes bytes encoding a string, whose encoding should be guessed\n         * @param hints decode hints if applicable\n         * @return name of guessed encoding; at the moment will only guess one of:\n         *  {@link #SHIFT_JIS}, {@link #UTF8}, {@link #ISO88591}, or the platform\n         *  default encoding if none of these can possibly be correct\n         */\n        static guessEncoding(bytes, hints) {\n            if (hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType$1.CHARACTER_SET)) {\n                return hints.get(DecodeHintType$1.CHARACTER_SET).toString();\n            }\n            // For now, merely tries to distinguish ISO-8859-1, UTF-8 and Shift_JIS,\n            // which should be by far the most common encodings.\n            const length = bytes.length;\n            let canBeISO88591 = true;\n            let canBeShiftJIS = true;\n            let canBeUTF8 = true;\n            let utf8BytesLeft = 0;\n            // int utf8LowChars = 0\n            let utf2BytesChars = 0;\n            let utf3BytesChars = 0;\n            let utf4BytesChars = 0;\n            let sjisBytesLeft = 0;\n            // int sjisLowChars = 0\n            let sjisKatakanaChars = 0;\n            // int sjisDoubleBytesChars = 0\n            let sjisCurKatakanaWordLength = 0;\n            let sjisCurDoubleBytesWordLength = 0;\n            let sjisMaxKatakanaWordLength = 0;\n            let sjisMaxDoubleBytesWordLength = 0;\n            // int isoLowChars = 0\n            // int isoHighChars = 0\n            let isoHighOther = 0;\n            const utf8bom = bytes.length > 3 &&\n                bytes[0] === /*(byte) */ 0xEF &&\n                bytes[1] === /*(byte) */ 0xBB &&\n                bytes[2] === /*(byte) */ 0xBF;\n            for (let i = 0; i < length && (canBeISO88591 || canBeShiftJIS || canBeUTF8); i++) {\n                const value = bytes[i] & 0xFF;\n                // UTF-8 stuff\n                if (canBeUTF8) {\n                    if (utf8BytesLeft > 0) {\n                        if ((value & 0x80) === 0) {\n                            canBeUTF8 = false;\n                        }\n                        else {\n                            utf8BytesLeft--;\n                        }\n                    }\n                    else if ((value & 0x80) !== 0) {\n                        if ((value & 0x40) === 0) {\n                            canBeUTF8 = false;\n                        }\n                        else {\n                            utf8BytesLeft++;\n                            if ((value & 0x20) === 0) {\n                                utf2BytesChars++;\n                            }\n                            else {\n                                utf8BytesLeft++;\n                                if ((value & 0x10) === 0) {\n                                    utf3BytesChars++;\n                                }\n                                else {\n                                    utf8BytesLeft++;\n                                    if ((value & 0x08) === 0) {\n                                        utf4BytesChars++;\n                                    }\n                                    else {\n                                        canBeUTF8 = false;\n                                    }\n                                }\n                            }\n                        }\n                    } // else {\n                    // utf8LowChars++\n                    // }\n                }\n                // ISO-8859-1 stuff\n                if (canBeISO88591) {\n                    if (value > 0x7F && value < 0xA0) {\n                        canBeISO88591 = false;\n                    }\n                    else if (value > 0x9F) {\n                        if (value < 0xC0 || value === 0xD7 || value === 0xF7) {\n                            isoHighOther++;\n                        } // else {\n                        // isoHighChars++\n                        // }\n                    } // else {\n                    // isoLowChars++\n                    // }\n                }\n                // Shift_JIS stuff\n                if (canBeShiftJIS) {\n                    if (sjisBytesLeft > 0) {\n                        if (value < 0x40 || value === 0x7F || value > 0xFC) {\n                            canBeShiftJIS = false;\n                        }\n                        else {\n                            sjisBytesLeft--;\n                        }\n                    }\n                    else if (value === 0x80 || value === 0xA0 || value > 0xEF) {\n                        canBeShiftJIS = false;\n                    }\n                    else if (value > 0xA0 && value < 0xE0) {\n                        sjisKatakanaChars++;\n                        sjisCurDoubleBytesWordLength = 0;\n                        sjisCurKatakanaWordLength++;\n                        if (sjisCurKatakanaWordLength > sjisMaxKatakanaWordLength) {\n                            sjisMaxKatakanaWordLength = sjisCurKatakanaWordLength;\n                        }\n                    }\n                    else if (value > 0x7F) {\n                        sjisBytesLeft++;\n                        // sjisDoubleBytesChars++\n                        sjisCurKatakanaWordLength = 0;\n                        sjisCurDoubleBytesWordLength++;\n                        if (sjisCurDoubleBytesWordLength > sjisMaxDoubleBytesWordLength) {\n                            sjisMaxDoubleBytesWordLength = sjisCurDoubleBytesWordLength;\n                        }\n                    }\n                    else {\n                        // sjisLowChars++\n                        sjisCurKatakanaWordLength = 0;\n                        sjisCurDoubleBytesWordLength = 0;\n                    }\n                }\n            }\n            if (canBeUTF8 && utf8BytesLeft > 0) {\n                canBeUTF8 = false;\n            }\n            if (canBeShiftJIS && sjisBytesLeft > 0) {\n                canBeShiftJIS = false;\n            }\n            // Easy -- if there is BOM or at least 1 valid not-single byte character (and no evidence it can't be UTF-8), done\n            if (canBeUTF8 && (utf8bom || utf2BytesChars + utf3BytesChars + utf4BytesChars > 0)) {\n                return StringUtils.UTF8;\n            }\n            // Easy -- if assuming Shift_JIS or at least 3 valid consecutive not-ascii characters (and no evidence it can't be), done\n            if (canBeShiftJIS && (StringUtils.ASSUME_SHIFT_JIS || sjisMaxKatakanaWordLength >= 3 || sjisMaxDoubleBytesWordLength >= 3)) {\n                return StringUtils.SHIFT_JIS;\n            }\n            // Distinguishing Shift_JIS and ISO-8859-1 can be a little tough for short words. The crude heuristic is:\n            // - If we saw\n            //   - only two consecutive katakana chars in the whole text, or\n            //   - at least 10% of bytes that could be \"upper\" not-alphanumeric Latin1,\n            // - then we conclude Shift_JIS, else ISO-8859-1\n            if (canBeISO88591 && canBeShiftJIS) {\n                return (sjisMaxKatakanaWordLength === 2 && sjisKatakanaChars === 2) || isoHighOther * 10 >= length\n                    ? StringUtils.SHIFT_JIS : StringUtils.ISO88591;\n            }\n            // Otherwise, try in order ISO-8859-1, Shift JIS, UTF-8 and fall back to default platform encoding\n            if (canBeISO88591) {\n                return StringUtils.ISO88591;\n            }\n            if (canBeShiftJIS) {\n                return StringUtils.SHIFT_JIS;\n            }\n            if (canBeUTF8) {\n                return StringUtils.UTF8;\n            }\n            // Otherwise, we take a wild guess with platform encoding\n            return StringUtils.PLATFORM_DEFAULT_ENCODING;\n        }\n        /**\n         *\n         * @see https://stackoverflow.com/a/13439711/4367683\n         *\n         * @param append The new string to append.\n         * @param args Argumets values to be formated.\n         */\n        static format(append, ...args) {\n            let i = -1;\n            function callback(exp, p0, p1, p2, p3, p4) {\n                if (exp === '%%')\n                    return '%';\n                if (args[++i] === undefined)\n                    return undefined;\n                exp = p2 ? parseInt(p2.substr(1)) : undefined;\n                let base = p3 ? parseInt(p3.substr(1)) : undefined;\n                let val;\n                switch (p4) {\n                    case 's':\n                        val = args[i];\n                        break;\n                    case 'c':\n                        val = args[i][0];\n                        break;\n                    case 'f':\n                        val = parseFloat(args[i]).toFixed(exp);\n                        break;\n                    case 'p':\n                        val = parseFloat(args[i]).toPrecision(exp);\n                        break;\n                    case 'e':\n                        val = parseFloat(args[i]).toExponential(exp);\n                        break;\n                    case 'x':\n                        val = parseInt(args[i]).toString(base ? base : 16);\n                        break;\n                    case 'd':\n                        val = parseFloat(parseInt(args[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n                        break;\n                }\n                val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n                let size = parseInt(p1); /* padding size */\n                let ch = p1 && (p1[0] + '') === '0' ? '0' : ' '; /* isnull? */\n                while (val.length < size)\n                    val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n                return val;\n            }\n            let regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n            return append.replace(regex, callback);\n        }\n        /**\n         *\n         */\n        static getBytes(str, encoding) {\n            return StringEncoding.encode(str, encoding);\n        }\n        /**\n         * Returns the charcode at the specified index or at index zero.\n         */\n        static getCharCode(str, index = 0) {\n            return str.charCodeAt(index);\n        }\n        /**\n         * Returns char for given charcode\n         */\n        static getCharAt(charCode) {\n            return String.fromCharCode(charCode);\n        }\n    }\n    StringUtils.SHIFT_JIS = CharacterSetECI.SJIS.getName(); // \"SJIS\"\n    StringUtils.GB2312 = 'GB2312';\n    StringUtils.ISO88591 = CharacterSetECI.ISO8859_1.getName(); // \"ISO8859_1\"\n    StringUtils.EUC_JP = 'EUC_JP';\n    StringUtils.UTF8 = CharacterSetECI.UTF8.getName(); // \"UTF8\"\n    StringUtils.PLATFORM_DEFAULT_ENCODING = StringUtils.UTF8; // \"UTF8\"//Charset.defaultCharset().name()\n    StringUtils.ASSUME_SHIFT_JIS = false;\n\n    class StringBuilder {\n        constructor(value = '') {\n            this.value = value;\n        }\n        enableDecoding(encoding) {\n            this.encoding = encoding;\n            return this;\n        }\n        append(s) {\n            if (typeof s === 'string') {\n                this.value += s.toString();\n            }\n            else if (this.encoding) {\n                // use passed format (fromCharCode will return UTF8 encoding)\n                this.value += StringUtils.castAsNonUtf8Char(s, this.encoding);\n            }\n            else {\n                // correctly converts from UTF-8, but not other encodings\n                this.value += String.fromCharCode(s);\n            }\n            return this;\n        }\n        appendChars(str, offset, len) {\n            for (let i = offset; offset < offset + len; i++) {\n                this.append(str[i]);\n            }\n            return this;\n        }\n        length() {\n            return this.value.length;\n        }\n        charAt(n) {\n            return this.value.charAt(n);\n        }\n        deleteCharAt(n) {\n            this.value = this.value.substr(0, n) + this.value.substring(n + 1);\n        }\n        setCharAt(n, c) {\n            this.value = this.value.substr(0, n) + c + this.value.substr(n + 1);\n        }\n        substring(start, end) {\n            return this.value.substring(start, end);\n        }\n        /**\n         * @note helper method for RSS Expanded\n         */\n        setLengthToZero() {\n            this.value = '';\n        }\n        toString() {\n            return this.value;\n        }\n        insert(n, c) {\n            this.value = this.value.substr(0, n) + c + this.value.substr(n + c.length);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common\n     * module, x is the column position, and y is the row position. The ordering is always x, y.\n     * The origin is at the top-left.</p>\n     *\n     * <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins\n     * with a new int. This is done intentionally so that we can copy out a row into a BitArray very\n     * efficiently.</p>\n     *\n     * <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,\n     * meaning they represent lower x values. This is compatible with BitArray's implementation.</p>\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class BitMatrix /*implements Cloneable*/ {\n        /**\n         * Creates an empty square {@link BitMatrix}.\n         *\n         * @param dimension height and width\n         */\n        // public constructor(dimension: number /*int*/) {\n        //   this(dimension, dimension)\n        // }\n        /**\n         * Creates an empty {@link BitMatrix}.\n         *\n         * @param width bit matrix width\n         * @param height bit matrix height\n         */\n        // public constructor(width: number /*int*/, height: number /*int*/) {\n        //   if (width < 1 || height < 1) {\n        //     throw new IllegalArgumentException(\"Both dimensions must be greater than 0\")\n        //   }\n        //   this.width = width\n        //   this.height = height\n        //   this.rowSize = (width + 31) / 32\n        //   bits = new int[rowSize * height];\n        // }\n        constructor(width /*int*/, height /*int*/, rowSize /*int*/, bits) {\n            this.width = width;\n            this.height = height;\n            this.rowSize = rowSize;\n            this.bits = bits;\n            if (undefined === height || null === height) {\n                height = width;\n            }\n            this.height = height;\n            if (width < 1 || height < 1) {\n                throw new IllegalArgumentException('Both dimensions must be greater than 0');\n            }\n            if (undefined === rowSize || null === rowSize) {\n                rowSize = Math.floor((width + 31) / 32);\n            }\n            this.rowSize = rowSize;\n            if (undefined === bits || null === bits) {\n                this.bits = new Int32Array(this.rowSize * this.height);\n            }\n        }\n        /**\n         * Interprets a 2D array of booleans as a {@link BitMatrix}, where \"true\" means an \"on\" bit.\n         *\n         * @function parse\n         * @param image bits of the image, as a row-major 2D array. Elements are arrays representing rows\n         * @return {@link BitMatrix} representation of image\n         */\n        static parseFromBooleanArray(image) {\n            const height = image.length;\n            const width = image[0].length;\n            const bits = new BitMatrix(width, height);\n            for (let i = 0; i < height; i++) {\n                const imageI = image[i];\n                for (let j = 0; j < width; j++) {\n                    if (imageI[j]) {\n                        bits.set(j, i);\n                    }\n                }\n            }\n            return bits;\n        }\n        /**\n         *\n         * @function parse\n         * @param stringRepresentation\n         * @param setString\n         * @param unsetString\n         */\n        static parseFromString(stringRepresentation, setString, unsetString) {\n            if (stringRepresentation === null) {\n                throw new IllegalArgumentException('stringRepresentation cannot be null');\n            }\n            const bits = new Array(stringRepresentation.length);\n            let bitsPos = 0;\n            let rowStartPos = 0;\n            let rowLength = -1;\n            let nRows = 0;\n            let pos = 0;\n            while (pos < stringRepresentation.length) {\n                if (stringRepresentation.charAt(pos) === '\\n' ||\n                    stringRepresentation.charAt(pos) === '\\r') {\n                    if (bitsPos > rowStartPos) {\n                        if (rowLength === -1) {\n                            rowLength = bitsPos - rowStartPos;\n                        }\n                        else if (bitsPos - rowStartPos !== rowLength) {\n                            throw new IllegalArgumentException('row lengths do not match');\n                        }\n                        rowStartPos = bitsPos;\n                        nRows++;\n                    }\n                    pos++;\n                }\n                else if (stringRepresentation.substring(pos, pos + setString.length) === setString) {\n                    pos += setString.length;\n                    bits[bitsPos] = true;\n                    bitsPos++;\n                }\n                else if (stringRepresentation.substring(pos, pos + unsetString.length) === unsetString) {\n                    pos += unsetString.length;\n                    bits[bitsPos] = false;\n                    bitsPos++;\n                }\n                else {\n                    throw new IllegalArgumentException('illegal character encountered: ' + stringRepresentation.substring(pos));\n                }\n            }\n            // no EOL at end?\n            if (bitsPos > rowStartPos) {\n                if (rowLength === -1) {\n                    rowLength = bitsPos - rowStartPos;\n                }\n                else if (bitsPos - rowStartPos !== rowLength) {\n                    throw new IllegalArgumentException('row lengths do not match');\n                }\n                nRows++;\n            }\n            const matrix = new BitMatrix(rowLength, nRows);\n            for (let i = 0; i < bitsPos; i++) {\n                if (bits[i]) {\n                    matrix.set(Math.floor(i % rowLength), Math.floor(i / rowLength));\n                }\n            }\n            return matrix;\n        }\n        /**\n         * <p>Gets the requested bit, where true means black.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         * @return value of given bit in matrix\n         */\n        get(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            return ((this.bits[offset] >>> (x & 0x1f)) & 1) !== 0;\n        }\n        /**\n         * <p>Sets the given bit to true.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         */\n        set(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] |= (1 << (x & 0x1f)) & 0xFFFFFFFF;\n        }\n        unset(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] &= ~((1 << (x & 0x1f)) & 0xFFFFFFFF);\n        }\n        /**\n         * <p>Flips the given bit.</p>\n         *\n         * @param x The horizontal component (i.e. which column)\n         * @param y The vertical component (i.e. which row)\n         */\n        flip(x /*int*/, y /*int*/) {\n            const offset = y * this.rowSize + Math.floor(x / 32);\n            this.bits[offset] ^= ((1 << (x & 0x1f)) & 0xFFFFFFFF);\n        }\n        /**\n         * Exclusive-or (XOR): Flip the bit in this {@code BitMatrix} if the corresponding\n         * mask bit is set.\n         *\n         * @param mask XOR mask\n         */\n        xor(mask) {\n            if (this.width !== mask.getWidth() || this.height !== mask.getHeight()\n                || this.rowSize !== mask.getRowSize()) {\n                throw new IllegalArgumentException('input matrix dimensions do not match');\n            }\n            const rowArray = new BitArray(Math.floor(this.width / 32) + 1);\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            for (let y = 0, height = this.height; y < height; y++) {\n                const offset = y * rowSize;\n                const row = mask.getRow(y, rowArray).getBitArray();\n                for (let x = 0; x < rowSize; x++) {\n                    bits[offset + x] ^= row[x];\n                }\n            }\n        }\n        /**\n         * Clears all bits (sets to false).\n         */\n        clear() {\n            const bits = this.bits;\n            const max = bits.length;\n            for (let i = 0; i < max; i++) {\n                bits[i] = 0;\n            }\n        }\n        /**\n         * <p>Sets a square region of the bit matrix to true.</p>\n         *\n         * @param left The horizontal position to begin at (inclusive)\n         * @param top The vertical position to begin at (inclusive)\n         * @param width The width of the region\n         * @param height The height of the region\n         */\n        setRegion(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            if (top < 0 || left < 0) {\n                throw new IllegalArgumentException('Left and top must be nonnegative');\n            }\n            if (height < 1 || width < 1) {\n                throw new IllegalArgumentException('Height and width must be at least 1');\n            }\n            const right = left + width;\n            const bottom = top + height;\n            if (bottom > this.height || right > this.width) {\n                throw new IllegalArgumentException('The region must fit inside the matrix');\n            }\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            for (let y = top; y < bottom; y++) {\n                const offset = y * rowSize;\n                for (let x = left; x < right; x++) {\n                    bits[offset + Math.floor(x / 32)] |= ((1 << (x & 0x1f)) & 0xFFFFFFFF);\n                }\n            }\n        }\n        /**\n         * A fast method to retrieve one row of data from the matrix as a BitArray.\n         *\n         * @param y The row to retrieve\n         * @param row An optional caller-allocated BitArray, will be allocated if null or too small\n         * @return The resulting BitArray - this reference should always be used even when passing\n         *         your own row\n         */\n        getRow(y /*int*/, row) {\n            if (row === null || row === undefined || row.getSize() < this.width) {\n                row = new BitArray(this.width);\n            }\n            else {\n                row.clear();\n            }\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            const offset = y * rowSize;\n            for (let x = 0; x < rowSize; x++) {\n                row.setBulk(x * 32, bits[offset + x]);\n            }\n            return row;\n        }\n        /**\n         * @param y row to set\n         * @param row {@link BitArray} to copy from\n         */\n        setRow(y /*int*/, row) {\n            System.arraycopy(row.getBitArray(), 0, this.bits, y * this.rowSize, this.rowSize);\n        }\n        /**\n         * Modifies this {@code BitMatrix} to represent the same but rotated 180 degrees\n         */\n        rotate180() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            let topRow = new BitArray(width);\n            let bottomRow = new BitArray(width);\n            for (let i = 0, length = Math.floor((height + 1) / 2); i < length; i++) {\n                topRow = this.getRow(i, topRow);\n                bottomRow = this.getRow(height - 1 - i, bottomRow);\n                topRow.reverse();\n                bottomRow.reverse();\n                this.setRow(i, bottomRow);\n                this.setRow(height - 1 - i, topRow);\n            }\n        }\n        /**\n         * This is useful in detecting the enclosing rectangle of a 'pure' barcode.\n         *\n         * @return {@code left,top,width,height} enclosing rectangle of all 1 bits, or null if it is all white\n         */\n        getEnclosingRectangle() {\n            const width = this.width;\n            const height = this.height;\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let left = width;\n            let top = height;\n            let right = -1;\n            let bottom = -1;\n            for (let y = 0; y < height; y++) {\n                for (let x32 = 0; x32 < rowSize; x32++) {\n                    const theBits = bits[y * rowSize + x32];\n                    if (theBits !== 0) {\n                        if (y < top) {\n                            top = y;\n                        }\n                        if (y > bottom) {\n                            bottom = y;\n                        }\n                        if (x32 * 32 < left) {\n                            let bit = 0;\n                            while (((theBits << (31 - bit)) & 0xFFFFFFFF) === 0) {\n                                bit++;\n                            }\n                            if ((x32 * 32 + bit) < left) {\n                                left = x32 * 32 + bit;\n                            }\n                        }\n                        if (x32 * 32 + 31 > right) {\n                            let bit = 31;\n                            while ((theBits >>> bit) === 0) {\n                                bit--;\n                            }\n                            if ((x32 * 32 + bit) > right) {\n                                right = x32 * 32 + bit;\n                            }\n                        }\n                    }\n                }\n            }\n            if (right < left || bottom < top) {\n                return null;\n            }\n            return Int32Array.from([left, top, right - left + 1, bottom - top + 1]);\n        }\n        /**\n         * This is useful in detecting a corner of a 'pure' barcode.\n         *\n         * @return {@code x,y} coordinate of top-left-most 1 bit, or null if it is all white\n         */\n        getTopLeftOnBit() {\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let bitsOffset = 0;\n            while (bitsOffset < bits.length && bits[bitsOffset] === 0) {\n                bitsOffset++;\n            }\n            if (bitsOffset === bits.length) {\n                return null;\n            }\n            const y = bitsOffset / rowSize;\n            let x = (bitsOffset % rowSize) * 32;\n            const theBits = bits[bitsOffset];\n            let bit = 0;\n            while (((theBits << (31 - bit)) & 0xFFFFFFFF) === 0) {\n                bit++;\n            }\n            x += bit;\n            return Int32Array.from([x, y]);\n        }\n        getBottomRightOnBit() {\n            const rowSize = this.rowSize;\n            const bits = this.bits;\n            let bitsOffset = bits.length - 1;\n            while (bitsOffset >= 0 && bits[bitsOffset] === 0) {\n                bitsOffset--;\n            }\n            if (bitsOffset < 0) {\n                return null;\n            }\n            const y = Math.floor(bitsOffset / rowSize);\n            let x = Math.floor(bitsOffset % rowSize) * 32;\n            const theBits = bits[bitsOffset];\n            let bit = 31;\n            while ((theBits >>> bit) === 0) {\n                bit--;\n            }\n            x += bit;\n            return Int32Array.from([x, y]);\n        }\n        /**\n         * @return The width of the matrix\n         */\n        getWidth() {\n            return this.width;\n        }\n        /**\n         * @return The height of the matrix\n         */\n        getHeight() {\n            return this.height;\n        }\n        /**\n         * @return The row size of the matrix\n         */\n        getRowSize() {\n            return this.rowSize;\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof BitMatrix)) {\n                return false;\n            }\n            const other = o;\n            return this.width === other.width && this.height === other.height && this.rowSize === other.rowSize &&\n                Arrays.equals(this.bits, other.bits);\n        }\n        /*@Override*/\n        hashCode() {\n            let hash = this.width;\n            hash = 31 * hash + this.width;\n            hash = 31 * hash + this.height;\n            hash = 31 * hash + this.rowSize;\n            hash = 31 * hash + Arrays.hashCode(this.bits);\n            return hash;\n        }\n        /**\n         * @return string representation using \"X\" for set and \" \" for unset bits\n         */\n        /*@Override*/\n        // public toString(): string {\n        //   return toString(\": \"X, \"  \")\n        // }\n        /**\n         * @param setString representation of a set bit\n         * @param unsetString representation of an unset bit\n         * @return string representation of entire matrix utilizing given strings\n         */\n        // public toString(setString: string = \"X \", unsetString: string = \"  \"): string {\n        //   return this.buildToString(setString, unsetString, \"\\n\")\n        // }\n        /**\n         * @param setString representation of a set bit\n         * @param unsetString representation of an unset bit\n         * @param lineSeparator newline character in string representation\n         * @return string representation of entire matrix utilizing given strings and line separator\n         * @deprecated call {@link #toString(String,String)} only, which uses \\n line separator always\n         */\n        // @Deprecated\n        toString(setString = 'X ', unsetString = '  ', lineSeparator = '\\n') {\n            return this.buildToString(setString, unsetString, lineSeparator);\n        }\n        buildToString(setString, unsetString, lineSeparator) {\n            let result = new StringBuilder();\n            // result.append(lineSeparator);\n            for (let y = 0, height = this.height; y < height; y++) {\n                for (let x = 0, width = this.width; x < width; x++) {\n                    result.append(this.get(x, y) ? setString : unsetString);\n                }\n                result.append(lineSeparator);\n            }\n            return result.toString();\n        }\n        /*@Override*/\n        clone() {\n            return new BitMatrix(this.width, this.height, this.rowSize, this.bits.slice());\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class NotFoundException extends Exception {\n        static getNotFoundInstance() {\n            return new NotFoundException();\n        }\n    }\n    NotFoundException.kind = 'NotFoundException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This Binarizer implementation uses the old ZXing global histogram approach. It is suitable\n     * for low-end mobile devices which don't have enough CPU or memory to use a local thresholding\n     * algorithm. However, because it picks a global black point, it cannot handle difficult shadows\n     * and gradients.\n     *\n     * Faster mobile devices and all desktop applications should probably use HybridBinarizer instead.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     */\n    class GlobalHistogramBinarizer extends Binarizer {\n        constructor(source) {\n            super(source);\n            this.luminances = GlobalHistogramBinarizer.EMPTY;\n            this.buckets = new Int32Array(GlobalHistogramBinarizer.LUMINANCE_BUCKETS);\n        }\n        // Applies simple sharpening to the row data to improve performance of the 1D Readers.\n        /*@Override*/\n        getBlackRow(y /*int*/, row) {\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            if (row === undefined || row === null || row.getSize() < width) {\n                row = new BitArray(width);\n            }\n            else {\n                row.clear();\n            }\n            this.initArrays(width);\n            const localLuminances = source.getRow(y, this.luminances);\n            const localBuckets = this.buckets;\n            for (let x = 0; x < width; x++) {\n                localBuckets[(localLuminances[x] & 0xff) >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n            }\n            const blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);\n            if (width < 3) {\n                // Special case for very small images\n                for (let x = 0; x < width; x++) {\n                    if ((localLuminances[x] & 0xff) < blackPoint) {\n                        row.set(x);\n                    }\n                }\n            }\n            else {\n                let left = localLuminances[0] & 0xff;\n                let center = localLuminances[1] & 0xff;\n                for (let x = 1; x < width - 1; x++) {\n                    const right = localLuminances[x + 1] & 0xff;\n                    // A simple -1 4 -1 box filter with a weight of 2.\n                    if (((center * 4) - left - right) / 2 < blackPoint) {\n                        row.set(x);\n                    }\n                    left = center;\n                    center = right;\n                }\n            }\n            return row;\n        }\n        // Does not sharpen the data, as this call is intended to only be used by 2D Readers.\n        /*@Override*/\n        getBlackMatrix() {\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            const height = source.getHeight();\n            const matrix = new BitMatrix(width, height);\n            // Quickly calculates the histogram by sampling four rows from the image. This proved to be\n            // more robust on the blackbox tests than sampling a diagonal as we used to do.\n            this.initArrays(width);\n            const localBuckets = this.buckets;\n            for (let y = 1; y < 5; y++) {\n                const row = Math.floor((height * y) / 5);\n                const localLuminances = source.getRow(row, this.luminances);\n                const right = Math.floor((width * 4) / 5);\n                for (let x = Math.floor(width / 5); x < right; x++) {\n                    const pixel = localLuminances[x] & 0xff;\n                    localBuckets[pixel >> GlobalHistogramBinarizer.LUMINANCE_SHIFT]++;\n                }\n            }\n            const blackPoint = GlobalHistogramBinarizer.estimateBlackPoint(localBuckets);\n            // We delay reading the entire image luminance until the black point estimation succeeds.\n            // Although we end up reading four rows twice, it is consistent with our motto of\n            // \"fail quickly\" which is necessary for continuous scanning.\n            const localLuminances = source.getMatrix();\n            for (let y = 0; y < height; y++) {\n                const offset = y * width;\n                for (let x = 0; x < width; x++) {\n                    const pixel = localLuminances[offset + x] & 0xff;\n                    if (pixel < blackPoint) {\n                        matrix.set(x, y);\n                    }\n                }\n            }\n            return matrix;\n        }\n        /*@Override*/\n        createBinarizer(source) {\n            return new GlobalHistogramBinarizer(source);\n        }\n        initArrays(luminanceSize /*int*/) {\n            if (this.luminances.length < luminanceSize) {\n                this.luminances = new Uint8ClampedArray(luminanceSize);\n            }\n            const buckets = this.buckets;\n            for (let x = 0; x < GlobalHistogramBinarizer.LUMINANCE_BUCKETS; x++) {\n                buckets[x] = 0;\n            }\n        }\n        static estimateBlackPoint(buckets) {\n            // Find the tallest peak in the histogram.\n            const numBuckets = buckets.length;\n            let maxBucketCount = 0;\n            let firstPeak = 0;\n            let firstPeakSize = 0;\n            for (let x = 0; x < numBuckets; x++) {\n                if (buckets[x] > firstPeakSize) {\n                    firstPeak = x;\n                    firstPeakSize = buckets[x];\n                }\n                if (buckets[x] > maxBucketCount) {\n                    maxBucketCount = buckets[x];\n                }\n            }\n            // Find the second-tallest peak which is somewhat far from the tallest peak.\n            let secondPeak = 0;\n            let secondPeakScore = 0;\n            for (let x = 0; x < numBuckets; x++) {\n                const distanceToBiggest = x - firstPeak;\n                // Encourage more distant second peaks by multiplying by square of distance.\n                const score = buckets[x] * distanceToBiggest * distanceToBiggest;\n                if (score > secondPeakScore) {\n                    secondPeak = x;\n                    secondPeakScore = score;\n                }\n            }\n            // Make sure firstPeak corresponds to the black peak.\n            if (firstPeak > secondPeak) {\n                const temp = firstPeak;\n                firstPeak = secondPeak;\n                secondPeak = temp;\n            }\n            // If there is too little contrast in the image to pick a meaningful black point, throw rather\n            // than waste time trying to decode the image, and risk false positives.\n            if (secondPeak - firstPeak <= numBuckets / 16) {\n                throw new NotFoundException();\n            }\n            // Find a valley between them that is low and closer to the white peak.\n            let bestValley = secondPeak - 1;\n            let bestValleyScore = -1;\n            for (let x = secondPeak - 1; x > firstPeak; x--) {\n                const fromFirst = x - firstPeak;\n                const score = fromFirst * fromFirst * (secondPeak - x) * (maxBucketCount - buckets[x]);\n                if (score > bestValleyScore) {\n                    bestValley = x;\n                    bestValleyScore = score;\n                }\n            }\n            return bestValley << GlobalHistogramBinarizer.LUMINANCE_SHIFT;\n        }\n    }\n    GlobalHistogramBinarizer.LUMINANCE_BITS = 5;\n    GlobalHistogramBinarizer.LUMINANCE_SHIFT = 8 - GlobalHistogramBinarizer.LUMINANCE_BITS;\n    GlobalHistogramBinarizer.LUMINANCE_BUCKETS = 1 << GlobalHistogramBinarizer.LUMINANCE_BITS;\n    GlobalHistogramBinarizer.EMPTY = Uint8ClampedArray.from([0]);\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class implements a local thresholding algorithm, which while slower than the\n     * GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for\n     * high frequency images of barcodes with black data on white backgrounds. For this application,\n     * it does a much better job than a global blackpoint with severe shadows and gradients.\n     * However it tends to produce artifacts on lower frequency images and is therefore not\n     * a good general purpose binarizer for uses outside ZXing.\n     *\n     * This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers,\n     * and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already\n     * inherently local, and only fails for horizontal gradients. We can revisit that problem later,\n     * but for now it was not a win to use local blocks for 1D.\n     *\n     * This Binarizer is the default for the unit tests and the recommended class for library users.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class HybridBinarizer extends GlobalHistogramBinarizer {\n        constructor(source) {\n            super(source);\n            this.matrix = null;\n        }\n        /**\n         * Calculates the final BitMatrix once for all requests. This could be called once from the\n         * constructor instead, but there are some advantages to doing it lazily, such as making\n         * profiling easier, and not doing heavy lifting when callers don't expect it.\n         */\n        /*@Override*/\n        getBlackMatrix() {\n            if (this.matrix !== null) {\n                return this.matrix;\n            }\n            const source = this.getLuminanceSource();\n            const width = source.getWidth();\n            const height = source.getHeight();\n            if (width >= HybridBinarizer.MINIMUM_DIMENSION && height >= HybridBinarizer.MINIMUM_DIMENSION) {\n                const luminances = source.getMatrix();\n                let subWidth = width >> HybridBinarizer.BLOCK_SIZE_POWER;\n                if ((width & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n                    subWidth++;\n                }\n                let subHeight = height >> HybridBinarizer.BLOCK_SIZE_POWER;\n                if ((height & HybridBinarizer.BLOCK_SIZE_MASK) !== 0) {\n                    subHeight++;\n                }\n                const blackPoints = HybridBinarizer.calculateBlackPoints(luminances, subWidth, subHeight, width, height);\n                const newMatrix = new BitMatrix(width, height);\n                HybridBinarizer.calculateThresholdForBlock(luminances, subWidth, subHeight, width, height, blackPoints, newMatrix);\n                this.matrix = newMatrix;\n            }\n            else {\n                // If the image is too small, fall back to the global histogram approach.\n                this.matrix = super.getBlackMatrix();\n            }\n            return this.matrix;\n        }\n        /*@Override*/\n        createBinarizer(source) {\n            return new HybridBinarizer(source);\n        }\n        /**\n         * For each block in the image, calculate the average black point using a 5x5 grid\n         * of the blocks around it. Also handles the corner cases (fractional blocks are computed based\n         * on the last pixels in the row/column which are also used in the previous block).\n         */\n        static calculateThresholdForBlock(luminances, subWidth /*int*/, subHeight /*int*/, width /*int*/, height /*int*/, blackPoints, matrix) {\n            const maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n            const maxXOffset = width - HybridBinarizer.BLOCK_SIZE;\n            for (let y = 0; y < subHeight; y++) {\n                let yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n                if (yoffset > maxYOffset) {\n                    yoffset = maxYOffset;\n                }\n                const top = HybridBinarizer.cap(y, 2, subHeight - 3);\n                for (let x = 0; x < subWidth; x++) {\n                    let xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n                    if (xoffset > maxXOffset) {\n                        xoffset = maxXOffset;\n                    }\n                    const left = HybridBinarizer.cap(x, 2, subWidth - 3);\n                    let sum = 0;\n                    for (let z = -2; z <= 2; z++) {\n                        const blackRow = blackPoints[top + z];\n                        sum += blackRow[left - 2] + blackRow[left - 1] + blackRow[left] + blackRow[left + 1] + blackRow[left + 2];\n                    }\n                    const average = sum / 25;\n                    HybridBinarizer.thresholdBlock(luminances, xoffset, yoffset, average, width, matrix);\n                }\n            }\n        }\n        static cap(value /*int*/, min /*int*/, max /*int*/) {\n            return value < min ? min : value > max ? max : value;\n        }\n        /**\n         * Applies a single threshold to a block of pixels.\n         */\n        static thresholdBlock(luminances, xoffset /*int*/, yoffset /*int*/, threshold /*int*/, stride /*int*/, matrix) {\n            for (let y = 0, offset = yoffset * stride + xoffset; y < HybridBinarizer.BLOCK_SIZE; y++, offset += stride) {\n                for (let x = 0; x < HybridBinarizer.BLOCK_SIZE; x++) {\n                    // Comparison needs to be <= so that black == 0 pixels are black even if the threshold is 0.\n                    if ((luminances[offset + x] & 0xFF) <= threshold) {\n                        matrix.set(xoffset + x, yoffset + y);\n                    }\n                }\n            }\n        }\n        /**\n         * Calculates a single black point for each block of pixels and saves it away.\n         * See the following thread for a discussion of this algorithm:\n         *  http://groups.google.com/group/zxing/browse_thread/thread/d06efa2c35a7ddc0\n         */\n        static calculateBlackPoints(luminances, subWidth /*int*/, subHeight /*int*/, width /*int*/, height /*int*/) {\n            const maxYOffset = height - HybridBinarizer.BLOCK_SIZE;\n            const maxXOffset = width - HybridBinarizer.BLOCK_SIZE;\n            // tslint:disable-next-line:whitespace\n            const blackPoints = new Array(subHeight); // subWidth\n            for (let y = 0; y < subHeight; y++) {\n                blackPoints[y] = new Int32Array(subWidth);\n                let yoffset = y << HybridBinarizer.BLOCK_SIZE_POWER;\n                if (yoffset > maxYOffset) {\n                    yoffset = maxYOffset;\n                }\n                for (let x = 0; x < subWidth; x++) {\n                    let xoffset = x << HybridBinarizer.BLOCK_SIZE_POWER;\n                    if (xoffset > maxXOffset) {\n                        xoffset = maxXOffset;\n                    }\n                    let sum = 0;\n                    let min = 0xFF;\n                    let max = 0;\n                    for (let yy = 0, offset = yoffset * width + xoffset; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n                        for (let xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n                            const pixel = luminances[offset + xx] & 0xFF;\n                            sum += pixel;\n                            // still looking for good contrast\n                            if (pixel < min) {\n                                min = pixel;\n                            }\n                            if (pixel > max) {\n                                max = pixel;\n                            }\n                        }\n                        // short-circuit min/max tests once dynamic range is met\n                        if (max - min > HybridBinarizer.MIN_DYNAMIC_RANGE) {\n                            // finish the rest of the rows quickly\n                            for (yy++, offset += width; yy < HybridBinarizer.BLOCK_SIZE; yy++, offset += width) {\n                                for (let xx = 0; xx < HybridBinarizer.BLOCK_SIZE; xx++) {\n                                    sum += luminances[offset + xx] & 0xFF;\n                                }\n                            }\n                        }\n                    }\n                    // The default estimate is the average of the values in the block.\n                    let average = sum >> (HybridBinarizer.BLOCK_SIZE_POWER * 2);\n                    if (max - min <= HybridBinarizer.MIN_DYNAMIC_RANGE) {\n                        // If variation within the block is low, assume this is a block with only light or only\n                        // dark pixels. In that case we do not want to use the average, as it would divide this\n                        // low contrast area into black and white pixels, essentially creating data out of noise.\n                        //\n                        // The default assumption is that the block is light/background. Since no estimate for\n                        // the level of dark pixels exists locally, use half the min for the block.\n                        average = min / 2;\n                        if (y > 0 && x > 0) {\n                            // Correct the \"white background\" assumption for blocks that have neighbors by comparing\n                            // the pixels in this block to the previously calculated black points. This is based on\n                            // the fact that dark barcode symbology is always surrounded by some amount of light\n                            // background for which reasonable black point estimates were made. The bp estimated at\n                            // the boundaries is used for the interior.\n                            // The (min < bp) is arbitrary but works better than other heuristics that were tried.\n                            const averageNeighborBlackPoint = (blackPoints[y - 1][x] + (2 * blackPoints[y][x - 1]) + blackPoints[y - 1][x - 1]) / 4;\n                            if (min < averageNeighborBlackPoint) {\n                                average = averageNeighborBlackPoint;\n                            }\n                        }\n                    }\n                    blackPoints[y][x] = average;\n                }\n            }\n            return blackPoints;\n        }\n    }\n    // This class uses 5x5 blocks to compute local luminance, where each block is 8x8 pixels.\n    // So this is the smallest dimension in each axis we can accept.\n    HybridBinarizer.BLOCK_SIZE_POWER = 3;\n    HybridBinarizer.BLOCK_SIZE = 1 << HybridBinarizer.BLOCK_SIZE_POWER; // ...0100...00\n    HybridBinarizer.BLOCK_SIZE_MASK = HybridBinarizer.BLOCK_SIZE - 1; // ...0011...11\n    HybridBinarizer.MINIMUM_DIMENSION = HybridBinarizer.BLOCK_SIZE * 5;\n    HybridBinarizer.MIN_DYNAMIC_RANGE = 24;\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * The purpose of this class hierarchy is to abstract different bitmap implementations across\n     * platforms into a standard interface for requesting greyscale luminance values. The interface\n     * only provides immutable methods; therefore crop and rotation create copies. This is to ensure\n     * that one Reader does not modify the original luminance source and leave it in an unknown state\n     * for other Readers in the chain.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class LuminanceSource {\n        constructor(width /*int*/, height /*int*/) {\n            this.width = width;\n            this.height = height;\n        }\n        /**\n         * @return The width of the bitmap.\n         */\n        getWidth() {\n            return this.width;\n        }\n        /**\n         * @return The height of the bitmap.\n         */\n        getHeight() {\n            return this.height;\n        }\n        /**\n         * @return Whether this subclass supports cropping.\n         */\n        isCropSupported() {\n            return false;\n        }\n        /**\n         * Returns a new object with cropped image data. Implementations may keep a reference to the\n         * original data rather than a copy. Only callable if isCropSupported() is true.\n         *\n         * @param left The left coordinate, which must be in [0,getWidth())\n         * @param top The top coordinate, which must be in [0,getHeight())\n         * @param width The width of the rectangle to crop.\n         * @param height The height of the rectangle to crop.\n         * @return A cropped version of this object.\n         */\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            throw new UnsupportedOperationException('This luminance source does not support cropping.');\n        }\n        /**\n         * @return Whether this subclass supports counter-clockwise rotation.\n         */\n        isRotateSupported() {\n            return false;\n        }\n        /**\n         * Returns a new object with rotated image data by 90 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise() {\n            throw new UnsupportedOperationException('This luminance source does not support rotation by 90 degrees.');\n        }\n        /**\n         * Returns a new object with rotated image data by 45 degrees counterclockwise.\n         * Only callable if {@link #isRotateSupported()} is true.\n         *\n         * @return A rotated version of this object.\n         */\n        rotateCounterClockwise45() {\n            throw new UnsupportedOperationException('This luminance source does not support rotation by 45 degrees.');\n        }\n        /*@Override*/\n        toString() {\n            const row = new Uint8ClampedArray(this.width);\n            let result = new StringBuilder();\n            for (let y = 0; y < this.height; y++) {\n                const sourceRow = this.getRow(y, row);\n                for (let x = 0; x < this.width; x++) {\n                    const luminance = sourceRow[x] & 0xFF;\n                    let c;\n                    if (luminance < 0x40) {\n                        c = '#';\n                    }\n                    else if (luminance < 0x80) {\n                        c = '+';\n                    }\n                    else if (luminance < 0xC0) {\n                        c = '.';\n                    }\n                    else {\n                        c = ' ';\n                    }\n                    result.append(c);\n                }\n                result.append('\\n');\n            }\n            return result.toString();\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes\n     * white and vice versa, and each value becomes (255-value).\n     *\n     * @author Sean Owen\n     */\n    class InvertedLuminanceSource extends LuminanceSource {\n        constructor(delegate) {\n            super(delegate.getWidth(), delegate.getHeight());\n            this.delegate = delegate;\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            const sourceRow = this.delegate.getRow(y, row);\n            const width = this.getWidth();\n            for (let i = 0; i < width; i++) {\n                sourceRow[i] = /*(byte)*/ (255 - (sourceRow[i] & 0xFF));\n            }\n            return sourceRow;\n        }\n        /*@Override*/\n        getMatrix() {\n            const matrix = this.delegate.getMatrix();\n            const length = this.getWidth() * this.getHeight();\n            const invertedMatrix = new Uint8ClampedArray(length);\n            for (let i = 0; i < length; i++) {\n                invertedMatrix[i] = /*(byte)*/ (255 - (matrix[i] & 0xFF));\n            }\n            return invertedMatrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return this.delegate.isCropSupported();\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new InvertedLuminanceSource(this.delegate.crop(left, top, width, height));\n        }\n        /*@Override*/\n        isRotateSupported() {\n            return this.delegate.isRotateSupported();\n        }\n        /**\n         * @return original delegate {@link LuminanceSource} since invert undoes itself\n         */\n        /*@Override*/\n        invert() {\n            return this.delegate;\n        }\n        /*@Override*/\n        rotateCounterClockwise() {\n            return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise());\n        }\n        /*@Override*/\n        rotateCounterClockwise45() {\n            return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise45());\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     */\n    class HTMLCanvasElementLuminanceSource extends LuminanceSource {\n        constructor(canvas) {\n            super(canvas.width, canvas.height);\n            this.canvas = canvas;\n            this.tempCanvasElement = null;\n            this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(canvas);\n        }\n        static makeBufferFromCanvasImageData(canvas) {\n            const imageData = canvas.getContext('2d').getImageData(0, 0, canvas.width, canvas.height);\n            return HTMLCanvasElementLuminanceSource.toGrayscaleBuffer(imageData.data, canvas.width, canvas.height);\n        }\n        static toGrayscaleBuffer(imageBuffer, width, height) {\n            const grayscaleBuffer = new Uint8ClampedArray(width * height);\n            for (let i = 0, j = 0, length = imageBuffer.length; i < length; i += 4, j++) {\n                let gray;\n                const alpha = imageBuffer[i + 3];\n                // The color of fully-transparent pixels is irrelevant. They are often, technically, fully-transparent\n                // black (0 alpha, and then 0 RGB). They are often used, of course as the \"white\" area in a\n                // barcode image. Force any such pixel to be white:\n                if (alpha === 0) {\n                    gray = 0xFF;\n                }\n                else {\n                    const pixelR = imageBuffer[i];\n                    const pixelG = imageBuffer[i + 1];\n                    const pixelB = imageBuffer[i + 2];\n                    // .299R + 0.587G + 0.114B (YUV/YIQ for PAL and NTSC),\n                    // (306*R) >> 10 is approximately equal to R*0.299, and so on.\n                    // 0x200 >> 10 is 0.5, it implements rounding.\n                    gray = (306 * pixelR +\n                        601 * pixelG +\n                        117 * pixelB +\n                        0x200) >> 10;\n                }\n                grayscaleBuffer[j] = gray;\n            }\n            return grayscaleBuffer;\n        }\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            const start = y * width;\n            if (row === null) {\n                row = this.buffer.slice(start, start + width);\n            }\n            else {\n                if (row.length < width) {\n                    row = new Uint8ClampedArray(width);\n                }\n                // The underlying raster of image consists of bytes with the luminance values\n                // TODO: can avoid set/slice?\n                row.set(this.buffer.slice(start, start + width));\n            }\n            return row;\n        }\n        getMatrix() {\n            return this.buffer;\n        }\n        isCropSupported() {\n            return true;\n        }\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            super.crop(left, top, width, height);\n            return this;\n        }\n        /**\n         * This is always true, since the image is a gray-scale image.\n         *\n         * @return true\n         */\n        isRotateSupported() {\n            return true;\n        }\n        rotateCounterClockwise() {\n            this.rotate(-90);\n            return this;\n        }\n        rotateCounterClockwise45() {\n            this.rotate(-45);\n            return this;\n        }\n        getTempCanvasElement() {\n            if (null === this.tempCanvasElement) {\n                const tempCanvasElement = this.canvas.ownerDocument.createElement('canvas');\n                tempCanvasElement.width = this.canvas.width;\n                tempCanvasElement.height = this.canvas.height;\n                this.tempCanvasElement = tempCanvasElement;\n            }\n            return this.tempCanvasElement;\n        }\n        rotate(angle) {\n            const tempCanvasElement = this.getTempCanvasElement();\n            const tempContext = tempCanvasElement.getContext('2d');\n            const angleRadians = angle * HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS;\n            // Calculate and set new dimensions for temp canvas\n            const width = this.canvas.width;\n            const height = this.canvas.height;\n            const newWidth = Math.ceil(Math.abs(Math.cos(angleRadians)) * width + Math.abs(Math.sin(angleRadians)) * height);\n            const newHeight = Math.ceil(Math.abs(Math.sin(angleRadians)) * width + Math.abs(Math.cos(angleRadians)) * height);\n            tempCanvasElement.width = newWidth;\n            tempCanvasElement.height = newHeight;\n            // Draw at center of temp canvas to prevent clipping of image data\n            tempContext.translate(newWidth / 2, newHeight / 2);\n            tempContext.rotate(angleRadians);\n            tempContext.drawImage(this.canvas, width / -2, height / -2);\n            this.buffer = HTMLCanvasElementLuminanceSource.makeBufferFromCanvasImageData(tempCanvasElement);\n            return this;\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n    HTMLCanvasElementLuminanceSource.DEGREE_TO_RADIANS = Math.PI / 180;\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Video input device metadata containing the id and label of the device if available.\n     */\n    class VideoInputDevice {\n        /**\n         * Creates an instance of VideoInputDevice.\n         *\n         * @param {string} deviceId the video input device id\n         * @param {string} label the label of the device if available\n         */\n        constructor(deviceId, label, groupId) {\n            this.deviceId = deviceId;\n            this.label = label;\n            /** @inheritdoc */\n            this.kind = 'videoinput';\n            this.groupId = groupId || undefined;\n        }\n        /** @inheritdoc */\n        toJSON() {\n            return {\n                kind: this.kind,\n                groupId: this.groupId,\n                deviceId: this.deviceId,\n                label: this.label,\n            };\n        }\n    }\n\n    var __awaiter = ((globalThis || global || self || window || undefined) && (globalThis || global || self || window || undefined).__awaiter) || function (thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    };\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Base class for browser code reader.\n     */\n    class BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserCodeReader.\n         * @param {Reader} reader The reader instance to decode the barcode\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent successful decode tries\n         *\n         * @memberOf BrowserCodeReader\n         */\n        constructor(reader, timeBetweenScansMillis = 500, _hints) {\n            this.reader = reader;\n            this.timeBetweenScansMillis = timeBetweenScansMillis;\n            this._hints = _hints;\n            /**\n             * This will break the loop.\n             */\n            this._stopContinuousDecode = false;\n            /**\n             * This will break the loop.\n             */\n            this._stopAsyncDecode = false;\n            /**\n             * Delay time between decode attempts made by the scanner.\n             */\n            this._timeBetweenDecodingAttempts = 0;\n        }\n        /**\n         * If navigator is present.\n         */\n        get hasNavigator() {\n            return typeof navigator !== 'undefined';\n        }\n        /**\n         * If mediaDevices under navigator is supported.\n         */\n        get isMediaDevicesSuported() {\n            return this.hasNavigator && !!navigator.mediaDevices;\n        }\n        /**\n         * If enumerateDevices under navigator is supported.\n         */\n        get canEnumerateDevices() {\n            return !!(this.isMediaDevicesSuported && navigator.mediaDevices.enumerateDevices);\n        }\n        /** Time between two decoding tries in milli seconds. */\n        get timeBetweenDecodingAttempts() {\n            return this._timeBetweenDecodingAttempts;\n        }\n        /**\n         * Change the time span the decoder waits between two decoding tries.\n         *\n         * @param {number} millis Time between two decoding tries in milli seconds.\n         */\n        set timeBetweenDecodingAttempts(millis) {\n            this._timeBetweenDecodingAttempts = millis < 0 ? 0 : millis;\n        }\n        /**\n         * Sets the hints.\n         */\n        set hints(hints) {\n            this._hints = hints || null;\n        }\n        /**\n         * Sets the hints.\n         */\n        get hints() {\n            return this._hints;\n        }\n        /**\n         * Lists all the available video input devices.\n         */\n        listVideoInputDevices() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!this.hasNavigator) {\n                    throw new Error('Can\\'t enumerate devices, navigator is not present.');\n                }\n                if (!this.canEnumerateDevices) {\n                    throw new Error('Can\\'t enumerate devices, method not supported.');\n                }\n                const devices = yield navigator.mediaDevices.enumerateDevices();\n                const videoDevices = [];\n                for (const device of devices) {\n                    const kind = device.kind === 'video' ? 'videoinput' : device.kind;\n                    if (kind !== 'videoinput') {\n                        continue;\n                    }\n                    const deviceId = device.deviceId || device.id;\n                    const label = device.label || `Video device ${videoDevices.length + 1}`;\n                    const groupId = device.groupId;\n                    const videoDevice = { deviceId, label, kind, groupId };\n                    videoDevices.push(videoDevice);\n                }\n                return videoDevices;\n            });\n        }\n        /**\n         * Obtain the list of available devices with type 'videoinput'.\n         *\n         * @returns {Promise<VideoInputDevice[]>} an array of available video input devices\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `listVideoInputDevices` instead.\n         */\n        getVideoInputDevices() {\n            return __awaiter(this, void 0, void 0, function* () {\n                const devices = yield this.listVideoInputDevices();\n                return devices.map(d => new VideoInputDevice(d.deviceId, d.label));\n            });\n        }\n        /**\n         * Let's you find a device using it's Id.\n         */\n        findDeviceById(deviceId) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const devices = yield this.listVideoInputDevices();\n                if (!devices) {\n                    return null;\n                }\n                return devices.find(x => x.deviceId === deviceId);\n            });\n        }\n        /**\n         * Decodes the barcode from the device specified by deviceId while showing the video in the specified video element.\n         *\n         * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `decodeOnceFromVideoDevice` instead.\n         */\n        decodeFromInputVideoDevice(deviceId, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                return yield this.decodeOnceFromVideoDevice(deviceId, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from the device specified by deviceId while showing the video in the specified video element.\n         *\n         * @param deviceId the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromVideoDevice(deviceId, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                let videoConstraints;\n                if (!deviceId) {\n                    videoConstraints = { facingMode: 'environment' };\n                }\n                else {\n                    videoConstraints = { deviceId: { exact: deviceId } };\n                }\n                const constraints = { video: videoConstraints };\n                return yield this.decodeOnceFromConstraints(constraints, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param constraints the media stream constraints to get s valid media stream to decode from\n         * @param video the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromConstraints(constraints, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n                return yield this.decodeOnceFromStream(stream, videoSource);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeOnceFromStream(stream, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                const video = yield this.attachStreamToVideo(stream, videoSource);\n                const result = yield this.decodeOnce(video);\n                return result;\n            });\n        }\n        /**\n         * Continuously decodes the barcode from the device specified by device while showing the video in the specified video element.\n         *\n         * @param {string|null} [deviceId] the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<void>}\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @deprecated Use `decodeFromVideoDevice` instead.\n         */\n        decodeFromInputVideoDeviceContinuously(deviceId, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                return yield this.decodeFromVideoDevice(deviceId, videoSource, callbackFn);\n            });\n        }\n        /**\n         * Continuously tries to decode the barcode from the device specified by device while showing the video in the specified video element.\n         *\n         * @param {string|null} [deviceId] the id of one of the devices obtained after calling getVideoInputDevices. Can be undefined, in this case it will decode from one of the available devices, preffering the main camera (environment facing) if available.\n         * @param {string|HTMLVideoElement|null} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<void>}\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromVideoDevice(deviceId, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let videoConstraints;\n                if (!deviceId) {\n                    videoConstraints = { facingMode: 'environment' };\n                }\n                else {\n                    videoConstraints = { deviceId: { exact: deviceId } };\n                }\n                const constraints = { video: videoConstraints };\n                return yield this.decodeFromConstraints(constraints, videoSource, callbackFn);\n            });\n        }\n        /**\n         * Continuously tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromConstraints(constraints, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n                return yield this.decodeFromStream(stream, videoSource, callbackFn);\n            });\n        }\n        /**\n         * In one attempt, tries to decode the barcode from a stream obtained from the given constraints while showing the video in the specified video element.\n         *\n         * @param {MediaStream} [constraints] the media stream constraints to get s valid media stream to decode from\n         * @param {string|HTMLVideoElement} [video] the video element in page where to show the video while decoding. Can be either an element id or directly an HTMLVideoElement. Can be undefined, in which case no video will be shown.\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromStream(stream, videoSource, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                this.reset();\n                const video = yield this.attachStreamToVideo(stream, videoSource);\n                return yield this.decodeContinuously(video, callbackFn);\n            });\n        }\n        /**\n         * Breaks the decoding loop.\n         */\n        stopAsyncDecode() {\n            this._stopAsyncDecode = true;\n        }\n        /**\n         * Breaks the decoding loop.\n         */\n        stopContinuousDecode() {\n            this._stopContinuousDecode = true;\n        }\n        /**\n         * Sets the new stream and request a new decoding-with-delay.\n         *\n         * @param stream The stream to be shown in the video element.\n         * @param decodeFn A callback for the decode method.\n         */\n        attachStreamToVideo(stream, videoSource) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const videoElement = this.prepareVideoElement(videoSource);\n                this.addVideoSource(videoElement, stream);\n                this.videoElement = videoElement;\n                this.stream = stream;\n                yield this.playVideoOnLoadAsync(videoElement);\n                return videoElement;\n            });\n        }\n        /**\n         *\n         * @param videoElement\n         */\n        playVideoOnLoadAsync(videoElement) {\n            return new Promise((resolve, reject) => this.playVideoOnLoad(videoElement, () => resolve()));\n        }\n        /**\n         * Binds listeners and callbacks to the videoElement.\n         *\n         * @param element\n         * @param callbackFn\n         */\n        playVideoOnLoad(element, callbackFn) {\n            this.videoEndedListener = () => this.stopStreams();\n            this.videoCanPlayListener = () => this.tryPlayVideo(element);\n            element.addEventListener('ended', this.videoEndedListener);\n            element.addEventListener('canplay', this.videoCanPlayListener);\n            element.addEventListener('playing', callbackFn);\n            // if canplay was already fired, we won't know when to play, so just give it a try\n            this.tryPlayVideo(element);\n        }\n        /**\n         * Checks if the given video element is currently playing.\n         */\n        isVideoPlaying(video) {\n            return video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2;\n        }\n        /**\n         * Just tries to play the video and logs any errors.\n         * The play call is only made is the video is not already playing.\n         */\n        tryPlayVideo(videoElement) {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (this.isVideoPlaying(videoElement)) {\n                    console.warn('Trying to play video that is already playing.');\n                    return;\n                }\n                try {\n                    yield videoElement.play();\n                }\n                catch (_a) {\n                    console.warn('It was not possible to play the video.');\n                }\n            });\n        }\n        /**\n         * Searches and validates a media element.\n         */\n        getMediaElement(mediaElementId, type) {\n            const mediaElement = document.getElementById(mediaElementId);\n            if (!mediaElement) {\n                throw new ArgumentException(`element with id '${mediaElementId}' not found`);\n            }\n            if (mediaElement.nodeName.toLowerCase() !== type.toLowerCase()) {\n                throw new ArgumentException(`element with id '${mediaElementId}' must be an ${type} element`);\n            }\n            return mediaElement;\n        }\n        /**\n         * Decodes the barcode from an image.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromImage(source, url) {\n            if (!source && !url) {\n                throw new ArgumentException('either imageElement with a src set or an url must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromImageUrl(url);\n            }\n            return this.decodeFromImageElement(source);\n        }\n        /**\n         * Decodes the barcode from a video.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        decodeFromVideo(source, url) {\n            if (!source && !url) {\n                throw new ArgumentException('Either an element with a src set or an URL must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromVideoUrl(url);\n            }\n            return this.decodeFromVideoElement(source);\n        }\n        /**\n         * Decodes continuously the barcode from a video.\n         *\n         * @param {(string|HTMLImageElement)} [source] The image element that can be either an element id or the element itself. Can be undefined in which case the decoding will be done from the imageUrl parameter.\n         * @param {string} [url]\n         * @returns {Promise<Result>} The decoding result.\n         *\n         * @memberOf BrowserCodeReader\n         *\n         * @experimental\n         */\n        decodeFromVideoContinuously(source, url, callbackFn) {\n            if (undefined === source && undefined === url) {\n                throw new ArgumentException('Either an element with a src set or an URL must be provided');\n            }\n            if (url && !source) {\n                return this.decodeFromVideoUrlContinuously(url, callbackFn);\n            }\n            return this.decodeFromVideoElementContinuously(source, callbackFn);\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromImageElement(source) {\n            if (!source) {\n                throw new ArgumentException('An image element must be provided.');\n            }\n            this.reset();\n            const element = this.prepareImageElement(source);\n            this.imageElement = element;\n            let task;\n            if (this.isImageLoaded(element)) {\n                task = this.decodeOnce(element, false, true);\n            }\n            else {\n                task = this._decodeOnLoadImage(element);\n            }\n            return task;\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromVideoElement(source) {\n            const element = this._decodeFromVideoElementSetup(source);\n            return this._decodeOnLoadVideo(element);\n        }\n        /**\n         * Decodes something from an image HTML element.\n         */\n        decodeFromVideoElementContinuously(source, callbackFn) {\n            const element = this._decodeFromVideoElementSetup(source);\n            return this._decodeOnLoadVideoContinuously(element, callbackFn);\n        }\n        /**\n         * Sets up the video source so it can be decoded when loaded.\n         *\n         * @param source The video source element.\n         */\n        _decodeFromVideoElementSetup(source) {\n            if (!source) {\n                throw new ArgumentException('A video element must be provided.');\n            }\n            this.reset();\n            const element = this.prepareVideoElement(source);\n            // defines the video element before starts decoding\n            this.videoElement = element;\n            return element;\n        }\n        /**\n         * Decodes an image from a URL.\n         */\n        decodeFromImageUrl(url) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            const element = this.prepareImageElement();\n            this.imageElement = element;\n            const decodeTask = this._decodeOnLoadImage(element);\n            element.src = url;\n            return decodeTask;\n        }\n        /**\n         * Decodes an image from a URL.\n         */\n        decodeFromVideoUrl(url) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            // creates a new element\n            const element = this.prepareVideoElement();\n            const decodeTask = this.decodeFromVideoElement(element);\n            element.src = url;\n            return decodeTask;\n        }\n        /**\n         * Decodes an image from a URL.\n         *\n         * @experimental\n         */\n        decodeFromVideoUrlContinuously(url, callbackFn) {\n            if (!url) {\n                throw new ArgumentException('An URL must be provided.');\n            }\n            this.reset();\n            // creates a new element\n            const element = this.prepareVideoElement();\n            const decodeTask = this.decodeFromVideoElementContinuously(element, callbackFn);\n            element.src = url;\n            return decodeTask;\n        }\n        _decodeOnLoadImage(element) {\n            return new Promise((resolve, reject) => {\n                this.imageLoadedListener = () => this.decodeOnce(element, false, true).then(resolve, reject);\n                element.addEventListener('load', this.imageLoadedListener);\n            });\n        }\n        _decodeOnLoadVideo(videoElement) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // plays the video\n                yield this.playVideoOnLoadAsync(videoElement);\n                // starts decoding after played the video\n                return yield this.decodeOnce(videoElement);\n            });\n        }\n        _decodeOnLoadVideoContinuously(videoElement, callbackFn) {\n            return __awaiter(this, void 0, void 0, function* () {\n                // plays the video\n                yield this.playVideoOnLoadAsync(videoElement);\n                // starts decoding after played the video\n                this.decodeContinuously(videoElement, callbackFn);\n            });\n        }\n        isImageLoaded(img) {\n            // During the onload event, IE correctly identifies any images that\n            // weren’t downloaded as not complete. Others should too. Gecko-based\n            // browsers act like NS4 in that they report this incorrectly.\n            if (!img.complete) {\n                return false;\n            }\n            // However, they do have two very useful properties: naturalWidth and\n            // naturalHeight. These give the true size of the image. If it failed\n            // to load, either of these should be zero.\n            if (img.naturalWidth === 0) {\n                return false;\n            }\n            // No other way of checking: assume it’s ok.\n            return true;\n        }\n        prepareImageElement(imageSource) {\n            let imageElement;\n            if (typeof imageSource === 'undefined') {\n                imageElement = document.createElement('img');\n                imageElement.width = 200;\n                imageElement.height = 200;\n            }\n            if (typeof imageSource === 'string') {\n                imageElement = this.getMediaElement(imageSource, 'img');\n            }\n            if (imageSource instanceof HTMLImageElement) {\n                imageElement = imageSource;\n            }\n            return imageElement;\n        }\n        /**\n         * Sets a HTMLVideoElement for scanning or creates a new one.\n         *\n         * @param videoSource The HTMLVideoElement to be set.\n         */\n        prepareVideoElement(videoSource) {\n            let videoElement;\n            if (!videoSource && typeof document !== 'undefined') {\n                videoElement = document.createElement('video');\n                videoElement.width = 200;\n                videoElement.height = 200;\n            }\n            if (typeof videoSource === 'string') {\n                videoElement = this.getMediaElement(videoSource, 'video');\n            }\n            if (videoSource instanceof HTMLVideoElement) {\n                videoElement = videoSource;\n            }\n            // Needed for iOS 11\n            videoElement.setAttribute('autoplay', 'true');\n            videoElement.setAttribute('muted', 'true');\n            videoElement.setAttribute('playsinline', 'true');\n            return videoElement;\n        }\n        /**\n         * Tries to decode from the video input until it finds some value.\n         */\n        decodeOnce(element, retryIfNotFound = true, retryIfChecksumOrFormatError = true) {\n            this._stopAsyncDecode = false;\n            const loop = (resolve, reject) => {\n                if (this._stopAsyncDecode) {\n                    reject(new NotFoundException('Video stream has ended before any code could be detected.'));\n                    this._stopAsyncDecode = undefined;\n                    return;\n                }\n                try {\n                    const result = this.decode(element);\n                    resolve(result);\n                }\n                catch (e) {\n                    const ifNotFound = retryIfNotFound && e instanceof NotFoundException;\n                    const isChecksumOrFormatError = e instanceof ChecksumException || e instanceof FormatException;\n                    const ifChecksumOrFormat = isChecksumOrFormatError && retryIfChecksumOrFormatError;\n                    if (ifNotFound || ifChecksumOrFormat) {\n                        // trying again\n                        return setTimeout(loop, this._timeBetweenDecodingAttempts, resolve, reject);\n                    }\n                    reject(e);\n                }\n            };\n            return new Promise((resolve, reject) => loop(resolve, reject));\n        }\n        /**\n         * Continuously decodes from video input.\n         */\n        decodeContinuously(element, callbackFn) {\n            this._stopContinuousDecode = false;\n            const loop = () => {\n                if (this._stopContinuousDecode) {\n                    this._stopContinuousDecode = undefined;\n                    return;\n                }\n                try {\n                    const result = this.decode(element);\n                    callbackFn(result, null);\n                    setTimeout(loop, this.timeBetweenScansMillis);\n                }\n                catch (e) {\n                    callbackFn(null, e);\n                    const isChecksumOrFormatError = e instanceof ChecksumException || e instanceof FormatException;\n                    const isNotFound = e instanceof NotFoundException;\n                    if (isChecksumOrFormatError || isNotFound) {\n                        // trying again\n                        setTimeout(loop, this._timeBetweenDecodingAttempts);\n                    }\n                }\n            };\n            loop();\n        }\n        /**\n         * Gets the BinaryBitmap for ya! (and decodes it)\n         */\n        decode(element) {\n            // get binary bitmap for decode function\n            const binaryBitmap = this.createBinaryBitmap(element);\n            return this.decodeBitmap(binaryBitmap);\n        }\n        /**\n         * Creates a binaryBitmap based in some image source.\n         *\n         * @param mediaElement HTML element containing drawable image source.\n         */\n        createBinaryBitmap(mediaElement) {\n            const ctx = this.getCaptureCanvasContext(mediaElement);\n            this.drawImageOnCanvas(ctx, mediaElement);\n            const canvas = this.getCaptureCanvas(mediaElement);\n            const luminanceSource = new HTMLCanvasElementLuminanceSource(canvas);\n            const hybridBinarizer = new HybridBinarizer(luminanceSource);\n            return new BinaryBitmap(hybridBinarizer);\n        }\n        /**\n         *\n         */\n        getCaptureCanvasContext(mediaElement) {\n            if (!this.captureCanvasContext) {\n                const elem = this.getCaptureCanvas(mediaElement);\n                const ctx = elem.getContext('2d');\n                this.captureCanvasContext = ctx;\n            }\n            return this.captureCanvasContext;\n        }\n        /**\n         *\n         */\n        getCaptureCanvas(mediaElement) {\n            if (!this.captureCanvas) {\n                const elem = this.createCaptureCanvas(mediaElement);\n                this.captureCanvas = elem;\n            }\n            return this.captureCanvas;\n        }\n        /**\n         * Ovewriting this allows you to manipulate the snapshot image in anyway you want before decode.\n         */\n        drawImageOnCanvas(canvasElementContext, srcElement) {\n            canvasElementContext.drawImage(srcElement, 0, 0);\n        }\n        /**\n         * Call the encapsulated readers decode\n         */\n        decodeBitmap(binaryBitmap) {\n            return this.reader.decode(binaryBitmap, this._hints);\n        }\n        /**\n         * 🖌 Prepares the canvas for capture and scan frames.\n         */\n        createCaptureCanvas(mediaElement) {\n            if (typeof document === 'undefined') {\n                this._destroyCaptureCanvas();\n                return null;\n            }\n            const canvasElement = document.createElement('canvas');\n            let width;\n            let height;\n            if (typeof mediaElement !== 'undefined') {\n                if (mediaElement instanceof HTMLVideoElement) {\n                    width = mediaElement.videoWidth;\n                    height = mediaElement.videoHeight;\n                }\n                else if (mediaElement instanceof HTMLImageElement) {\n                    width = mediaElement.naturalWidth || mediaElement.width;\n                    height = mediaElement.naturalHeight || mediaElement.height;\n                }\n            }\n            canvasElement.style.width = width + 'px';\n            canvasElement.style.height = height + 'px';\n            canvasElement.width = width;\n            canvasElement.height = height;\n            return canvasElement;\n        }\n        /**\n         * Stops the continuous scan and cleans the stream.\n         */\n        stopStreams() {\n            if (this.stream) {\n                this.stream.getVideoTracks().forEach(t => t.stop());\n                this.stream = undefined;\n            }\n            if (this._stopAsyncDecode === false) {\n                this.stopAsyncDecode();\n            }\n            if (this._stopContinuousDecode === false) {\n                this.stopContinuousDecode();\n            }\n        }\n        /**\n         * Resets the code reader to the initial state. Cancels any ongoing barcode scanning from video or camera.\n         *\n         * @memberOf BrowserCodeReader\n         */\n        reset() {\n            // stops the camera, preview and scan 🔴\n            this.stopStreams();\n            // clean and forget about HTML elements\n            this._destroyVideoElement();\n            this._destroyImageElement();\n            this._destroyCaptureCanvas();\n        }\n        _destroyVideoElement() {\n            if (!this.videoElement) {\n                return;\n            }\n            // first gives freedon to the element 🕊\n            if (typeof this.videoEndedListener !== 'undefined') {\n                this.videoElement.removeEventListener('ended', this.videoEndedListener);\n            }\n            if (typeof this.videoPlayingEventListener !== 'undefined') {\n                this.videoElement.removeEventListener('playing', this.videoPlayingEventListener);\n            }\n            if (typeof this.videoCanPlayListener !== 'undefined') {\n                this.videoElement.removeEventListener('loadedmetadata', this.videoCanPlayListener);\n            }\n            // then forgets about that element 😢\n            this.cleanVideoSource(this.videoElement);\n            this.videoElement = undefined;\n        }\n        _destroyImageElement() {\n            if (!this.imageElement) {\n                return;\n            }\n            // first gives freedon to the element 🕊\n            if (undefined !== this.imageLoadedListener) {\n                this.imageElement.removeEventListener('load', this.imageLoadedListener);\n            }\n            // then forget about that element 😢\n            this.imageElement.src = undefined;\n            this.imageElement.removeAttribute('src');\n            this.imageElement = undefined;\n        }\n        /**\n         * Cleans canvas references 🖌\n         */\n        _destroyCaptureCanvas() {\n            // then forget about that element 😢\n            this.captureCanvasContext = undefined;\n            this.captureCanvas = undefined;\n        }\n        /**\n         * Defines what the videoElement src will be.\n         *\n         * @param videoElement\n         * @param stream\n         */\n        addVideoSource(videoElement, stream) {\n            // Older browsers may not have `srcObject`\n            try {\n                // @note Throws Exception if interrupted by a new loaded request\n                videoElement.srcObject = stream;\n            }\n            catch (err) {\n                // @note Avoid using this in new browsers, as it is going away.\n                videoElement.src = URL.createObjectURL(stream);\n            }\n        }\n        /**\n         * Unbinds a HTML video src property.\n         *\n         * @param videoElement\n         */\n        cleanVideoSource(videoElement) {\n            try {\n                videoElement.srcObject = null;\n            }\n            catch (err) {\n                videoElement.src = '';\n            }\n            this.videoElement.removeAttribute('src');\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates the result of decoding a barcode within an image.</p>\n     *\n     * @author Sean Owen\n     */\n    class Result {\n        // public constructor(private text: string,\n        //               Uint8Array rawBytes,\n        //               ResultPoconst resultPoints: Int32Array,\n        //               BarcodeFormat format) {\n        //   this(text, rawBytes, resultPoints, format, System.currentTimeMillis())\n        // }\n        // public constructor(text: string,\n        //               Uint8Array rawBytes,\n        //               ResultPoconst resultPoints: Int32Array,\n        //               BarcodeFormat format,\n        //               long timestamp) {\n        //   this(text, rawBytes, rawBytes == null ? 0 : 8 * rawBytes.length,\n        //        resultPoints, format, timestamp)\n        // }\n        constructor(text, rawBytes, numBits = rawBytes == null ? 0 : 8 * rawBytes.length, resultPoints, format, timestamp = System.currentTimeMillis()) {\n            this.text = text;\n            this.rawBytes = rawBytes;\n            this.numBits = numBits;\n            this.resultPoints = resultPoints;\n            this.format = format;\n            this.timestamp = timestamp;\n            this.text = text;\n            this.rawBytes = rawBytes;\n            if (undefined === numBits || null === numBits) {\n                this.numBits = (rawBytes === null || rawBytes === undefined) ? 0 : 8 * rawBytes.length;\n            }\n            else {\n                this.numBits = numBits;\n            }\n            this.resultPoints = resultPoints;\n            this.format = format;\n            this.resultMetadata = null;\n            if (undefined === timestamp || null === timestamp) {\n                this.timestamp = System.currentTimeMillis();\n            }\n            else {\n                this.timestamp = timestamp;\n            }\n        }\n        /**\n         * @return raw text encoded by the barcode\n         */\n        getText() {\n            return this.text;\n        }\n        /**\n         * @return raw bytes encoded by the barcode, if applicable, otherwise {@code null}\n         */\n        getRawBytes() {\n            return this.rawBytes;\n        }\n        /**\n         * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\n         * @since 3.3.0\n         */\n        getNumBits() {\n            return this.numBits;\n        }\n        /**\n         * @return points related to the barcode in the image. These are typically points\n         *         identifying finder patterns or the corners of the barcode. The exact meaning is\n         *         specific to the type of barcode that was decoded.\n         */\n        getResultPoints() {\n            return this.resultPoints;\n        }\n        /**\n         * @return {@link BarcodeFormat} representing the format of the barcode that was decoded\n         */\n        getBarcodeFormat() {\n            return this.format;\n        }\n        /**\n         * @return {@link Map} mapping {@link ResultMetadataType} keys to values. May be\n         *   {@code null}. This contains optional metadata about what was detected about the barcode,\n         *   like orientation.\n         */\n        getResultMetadata() {\n            return this.resultMetadata;\n        }\n        putMetadata(type, value) {\n            if (this.resultMetadata === null) {\n                this.resultMetadata = new Map();\n            }\n            this.resultMetadata.set(type, value);\n        }\n        putAllMetadata(metadata) {\n            if (metadata !== null) {\n                if (this.resultMetadata === null) {\n                    this.resultMetadata = metadata;\n                }\n                else {\n                    this.resultMetadata = new Map(metadata);\n                }\n            }\n        }\n        addResultPoints(newPoints) {\n            const oldPoints = this.resultPoints;\n            if (oldPoints === null) {\n                this.resultPoints = newPoints;\n            }\n            else if (newPoints !== null && newPoints.length > 0) {\n                const allPoints = new Array(oldPoints.length + newPoints.length);\n                System.arraycopy(oldPoints, 0, allPoints, 0, oldPoints.length);\n                System.arraycopy(newPoints, 0, allPoints, oldPoints.length, newPoints.length);\n                this.resultPoints = allPoints;\n            }\n        }\n        getTimestamp() {\n            return this.timestamp;\n        }\n        /*@Override*/\n        toString() {\n            return this.text;\n        }\n    }\n\n    /*\n     * Direct port to TypeScript of ZXing by Adrian Toșcă\n     */\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * Enumerates barcode formats known to this package. Please keep alphabetized.\n     *\n     * @author Sean Owen\n     */\n    var BarcodeFormat;\n    (function (BarcodeFormat) {\n        /** Aztec 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"AZTEC\"] = 0] = \"AZTEC\";\n        /** CODABAR 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODABAR\"] = 1] = \"CODABAR\";\n        /** Code 39 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_39\"] = 2] = \"CODE_39\";\n        /** Code 93 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_93\"] = 3] = \"CODE_93\";\n        /** Code 128 1D format. */\n        BarcodeFormat[BarcodeFormat[\"CODE_128\"] = 4] = \"CODE_128\";\n        /** Data Matrix 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"DATA_MATRIX\"] = 5] = \"DATA_MATRIX\";\n        /** EAN-8 1D format. */\n        BarcodeFormat[BarcodeFormat[\"EAN_8\"] = 6] = \"EAN_8\";\n        /** EAN-13 1D format. */\n        BarcodeFormat[BarcodeFormat[\"EAN_13\"] = 7] = \"EAN_13\";\n        /** ITF (Interleaved Two of Five) 1D format. */\n        BarcodeFormat[BarcodeFormat[\"ITF\"] = 8] = \"ITF\";\n        /** MaxiCode 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"MAXICODE\"] = 9] = \"MAXICODE\";\n        /** PDF417 format. */\n        BarcodeFormat[BarcodeFormat[\"PDF_417\"] = 10] = \"PDF_417\";\n        /** QR Code 2D barcode format. */\n        BarcodeFormat[BarcodeFormat[\"QR_CODE\"] = 11] = \"QR_CODE\";\n        /** RSS 14 */\n        BarcodeFormat[BarcodeFormat[\"RSS_14\"] = 12] = \"RSS_14\";\n        /** RSS EXPANDED */\n        BarcodeFormat[BarcodeFormat[\"RSS_EXPANDED\"] = 13] = \"RSS_EXPANDED\";\n        /** UPC-A 1D format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_A\"] = 14] = \"UPC_A\";\n        /** UPC-E 1D format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_E\"] = 15] = \"UPC_E\";\n        /** UPC/EAN extension format. Not a stand-alone format. */\n        BarcodeFormat[BarcodeFormat[\"UPC_EAN_EXTENSION\"] = 16] = \"UPC_EAN_EXTENSION\";\n    })(BarcodeFormat || (BarcodeFormat = {}));\n    var BarcodeFormat$1 = BarcodeFormat;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * Represents some type of metadata about the result of the decoding that the decoder\n     * wishes to communicate back to the caller.\n     *\n     * @author Sean Owen\n     */\n    var ResultMetadataType;\n    (function (ResultMetadataType) {\n        /**\n         * Unspecified, application-specific metadata. Maps to an unspecified {@link Object}.\n         */\n        ResultMetadataType[ResultMetadataType[\"OTHER\"] = 0] = \"OTHER\";\n        /**\n         * Denotes the likely approximate orientation of the barcode in the image. This value\n         * is given as degrees rotated clockwise from the normal, upright orientation.\n         * For example a 1D barcode which was found by reading top-to-bottom would be\n         * said to have orientation \"90\". This key maps to an {@link Integer} whose\n         * value is in the range [0,360).\n         */\n        ResultMetadataType[ResultMetadataType[\"ORIENTATION\"] = 1] = \"ORIENTATION\";\n        /**\n         * <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode'\n         * which is sometimes used to encode binary data. While {@link Result} makes available\n         * the complete raw bytes in the barcode for these formats, it does not offer the bytes\n         * from the byte segments alone.</p>\n         *\n         * <p>This maps to a {@link java.util.List} of byte arrays corresponding to the\n         * raw bytes in the byte segments in the barcode, in order.</p>\n         */\n        ResultMetadataType[ResultMetadataType[\"BYTE_SEGMENTS\"] = 2] = \"BYTE_SEGMENTS\";\n        /**\n         * Error correction level used, if applicable. The value type depends on the\n         * format, but is typically a String.\n         */\n        ResultMetadataType[ResultMetadataType[\"ERROR_CORRECTION_LEVEL\"] = 3] = \"ERROR_CORRECTION_LEVEL\";\n        /**\n         * For some periodicals, indicates the issue number as an {@link Integer}.\n         */\n        ResultMetadataType[ResultMetadataType[\"ISSUE_NUMBER\"] = 4] = \"ISSUE_NUMBER\";\n        /**\n         * For some products, indicates the suggested retail price in the barcode as a\n         * formatted {@link String}.\n         */\n        ResultMetadataType[ResultMetadataType[\"SUGGESTED_PRICE\"] = 5] = \"SUGGESTED_PRICE\";\n        /**\n         * For some products, the possible country of manufacture as a {@link String} denoting the\n         * ISO country code. Some map to multiple possible countries, like \"US/CA\".\n         */\n        ResultMetadataType[ResultMetadataType[\"POSSIBLE_COUNTRY\"] = 6] = \"POSSIBLE_COUNTRY\";\n        /**\n         * For some products, the extension text\n         */\n        ResultMetadataType[ResultMetadataType[\"UPC_EAN_EXTENSION\"] = 7] = \"UPC_EAN_EXTENSION\";\n        /**\n         * PDF417-specific metadata\n         */\n        ResultMetadataType[ResultMetadataType[\"PDF417_EXTRA_METADATA\"] = 8] = \"PDF417_EXTRA_METADATA\";\n        /**\n         * If the code format supports structured append and the current scanned code is part of one then the\n         * sequence number is given with it.\n         */\n        ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_SEQUENCE\"] = 9] = \"STRUCTURED_APPEND_SEQUENCE\";\n        /**\n         * If the code format supports structured append and the current scanned code is part of one then the\n         * parity is given with it.\n         */\n        ResultMetadataType[ResultMetadataType[\"STRUCTURED_APPEND_PARITY\"] = 10] = \"STRUCTURED_APPEND_PARITY\";\n    })(ResultMetadataType || (ResultMetadataType = {}));\n    var ResultMetadataType$1 = ResultMetadataType;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common {*/\n    /*import java.util.List;*/\n    /**\n     * <p>Encapsulates the result of decoding a matrix of bits. This typically\n     * applies to 2D barcode formats. For now it contains the raw bytes obtained,\n     * as well as a String interpretation of those bytes, if applicable.</p>\n     *\n     * @author Sean Owen\n     */\n    class DecoderResult {\n        // public constructor(rawBytes: Uint8Array,\n        //                      text: string,\n        //                      List<Uint8Array> byteSegments,\n        //                      String ecLevel) {\n        //   this(rawBytes, text, byteSegments, ecLevel, -1, -1)\n        // }\n        constructor(rawBytes, text, byteSegments, ecLevel, structuredAppendSequenceNumber = -1, structuredAppendParity = -1) {\n            this.rawBytes = rawBytes;\n            this.text = text;\n            this.byteSegments = byteSegments;\n            this.ecLevel = ecLevel;\n            this.structuredAppendSequenceNumber = structuredAppendSequenceNumber;\n            this.structuredAppendParity = structuredAppendParity;\n            this.numBits = (rawBytes === undefined || rawBytes === null) ? 0 : 8 * rawBytes.length;\n        }\n        /**\n         * @return raw bytes representing the result, or {@code null} if not applicable\n         */\n        getRawBytes() {\n            return this.rawBytes;\n        }\n        /**\n         * @return how many bits of {@link #getRawBytes()} are valid; typically 8 times its length\n         * @since 3.3.0\n         */\n        getNumBits() {\n            return this.numBits;\n        }\n        /**\n         * @param numBits overrides the number of bits that are valid in {@link #getRawBytes()}\n         * @since 3.3.0\n         */\n        setNumBits(numBits /*int*/) {\n            this.numBits = numBits;\n        }\n        /**\n         * @return text representation of the result\n         */\n        getText() {\n            return this.text;\n        }\n        /**\n         * @return list of byte segments in the result, or {@code null} if not applicable\n         */\n        getByteSegments() {\n            return this.byteSegments;\n        }\n        /**\n         * @return name of error correction level used, or {@code null} if not applicable\n         */\n        getECLevel() {\n            return this.ecLevel;\n        }\n        /**\n         * @return number of errors corrected, or {@code null} if not applicable\n         */\n        getErrorsCorrected() {\n            return this.errorsCorrected;\n        }\n        setErrorsCorrected(errorsCorrected /*Integer*/) {\n            this.errorsCorrected = errorsCorrected;\n        }\n        /**\n         * @return number of erasures corrected, or {@code null} if not applicable\n         */\n        getErasures() {\n            return this.erasures;\n        }\n        setErasures(erasures /*Integer*/) {\n            this.erasures = erasures;\n        }\n        /**\n         * @return arbitrary additional metadata\n         */\n        getOther() {\n            return this.other;\n        }\n        setOther(other) {\n            this.other = other;\n        }\n        hasStructuredAppend() {\n            return this.structuredAppendParity >= 0 && this.structuredAppendSequenceNumber >= 0;\n        }\n        getStructuredAppendParity() {\n            return this.structuredAppendParity;\n        }\n        getStructuredAppendSequenceNumber() {\n            return this.structuredAppendSequenceNumber;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This class contains utility methods for performing mathematical operations over\n     * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n     *\n     * <p>Throughout this package, elements of the GF are represented as an {@code int}\n     * for convenience and speed (but at the cost of memory).\n     * </p>\n     *\n     * @author Sean Owen\n     * @author David Olivier\n     */\n    class AbstractGenericGF {\n        /**\n         * @return 2 to the power of a in GF(size)\n         */\n        exp(a) {\n            return this.expTable[a];\n        }\n        /**\n         * @return base 2 log of a in GF(size)\n         */\n        log(a /*int*/) {\n            if (a === 0) {\n                throw new IllegalArgumentException();\n            }\n            return this.logTable[a];\n        }\n        /**\n         * Implements both addition and subtraction -- they are the same in GF(size).\n         *\n         * @return sum/difference of a and b\n         */\n        static addOrSubtract(a /*int*/, b /*int*/) {\n            return a ^ b;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Represents a polynomial whose coefficients are elements of a GF.\n     * Instances of this class are immutable.</p>\n     *\n     * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n     * port of his C++ Reed-Solomon implementation.</p>\n     *\n     * @author Sean Owen\n     */\n    class GenericGFPoly {\n        /**\n         * @param field the {@link GenericGF} instance representing the field to use\n         * to perform computations\n         * @param coefficients coefficients as ints representing elements of GF(size), arranged\n         * from most significant (highest-power term) coefficient to least significant\n         * @throws IllegalArgumentException if argument is null or empty,\n         * or if leading coefficient is 0 and this is not a\n         * constant polynomial (that is, it is not the monomial \"0\")\n         */\n        constructor(field, coefficients) {\n            if (coefficients.length === 0) {\n                throw new IllegalArgumentException();\n            }\n            this.field = field;\n            const coefficientsLength = coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] === 0) {\n                // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                let firstNonZero = 1;\n                while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                    firstNonZero++;\n                }\n                if (firstNonZero === coefficientsLength) {\n                    this.coefficients = Int32Array.from([0]);\n                }\n                else {\n                    this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n                    System.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n                }\n            }\n            else {\n                this.coefficients = coefficients;\n            }\n        }\n        getCoefficients() {\n            return this.coefficients;\n        }\n        /**\n         * @return degree of this polynomial\n         */\n        getDegree() {\n            return this.coefficients.length - 1;\n        }\n        /**\n         * @return true iff this polynomial is the monomial \"0\"\n         */\n        isZero() {\n            return this.coefficients[0] === 0;\n        }\n        /**\n         * @return coefficient of x^degree term in this polynomial\n         */\n        getCoefficient(degree /*int*/) {\n            return this.coefficients[this.coefficients.length - 1 - degree];\n        }\n        /**\n         * @return evaluation of this polynomial at a given point\n         */\n        evaluateAt(a /*int*/) {\n            if (a === 0) {\n                // Just return the x^0 coefficient\n                return this.getCoefficient(0);\n            }\n            const coefficients = this.coefficients;\n            let result;\n            if (a === 1) {\n                // Just the sum of the coefficients\n                result = 0;\n                for (let i = 0, length = coefficients.length; i !== length; i++) {\n                    const coefficient = coefficients[i];\n                    result = AbstractGenericGF.addOrSubtract(result, coefficient);\n                }\n                return result;\n            }\n            result = coefficients[0];\n            const size = coefficients.length;\n            const field = this.field;\n            for (let i = 1; i < size; i++) {\n                result = AbstractGenericGF.addOrSubtract(field.multiply(a, result), coefficients[i]);\n            }\n            return result;\n        }\n        addOrSubtract(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (this.isZero()) {\n                return other;\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            let smallerCoefficients = this.coefficients;\n            let largerCoefficients = other.coefficients;\n            if (smallerCoefficients.length > largerCoefficients.length) {\n                const temp = smallerCoefficients;\n                smallerCoefficients = largerCoefficients;\n                largerCoefficients = temp;\n            }\n            let sumDiff = new Int32Array(largerCoefficients.length);\n            const lengthDiff = largerCoefficients.length - smallerCoefficients.length;\n            // Copy high-order terms only found in higher-degree polynomial's coefficients\n            System.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n            for (let i = lengthDiff; i < largerCoefficients.length; i++) {\n                sumDiff[i] = AbstractGenericGF.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n            }\n            return new GenericGFPoly(this.field, sumDiff);\n        }\n        multiply(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (this.isZero() || other.isZero()) {\n                return this.field.getZero();\n            }\n            const aCoefficients = this.coefficients;\n            const aLength = aCoefficients.length;\n            const bCoefficients = other.coefficients;\n            const bLength = bCoefficients.length;\n            const product = new Int32Array(aLength + bLength - 1);\n            const field = this.field;\n            for (let i = 0; i < aLength; i++) {\n                const aCoeff = aCoefficients[i];\n                for (let j = 0; j < bLength; j++) {\n                    product[i + j] = AbstractGenericGF.addOrSubtract(product[i + j], field.multiply(aCoeff, bCoefficients[j]));\n                }\n            }\n            return new GenericGFPoly(field, product);\n        }\n        multiplyScalar(scalar /*int*/) {\n            if (scalar === 0) {\n                return this.field.getZero();\n            }\n            if (scalar === 1) {\n                return this;\n            }\n            const size = this.coefficients.length;\n            const field = this.field;\n            const product = new Int32Array(size);\n            const coefficients = this.coefficients;\n            for (let i = 0; i < size; i++) {\n                product[i] = field.multiply(coefficients[i], scalar);\n            }\n            return new GenericGFPoly(field, product);\n        }\n        multiplyByMonomial(degree /*int*/, coefficient /*int*/) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.field.getZero();\n            }\n            const coefficients = this.coefficients;\n            const size = coefficients.length;\n            const product = new Int32Array(size + degree);\n            const field = this.field;\n            for (let i = 0; i < size; i++) {\n                product[i] = field.multiply(coefficients[i], coefficient);\n            }\n            return new GenericGFPoly(field, product);\n        }\n        divide(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('GenericGFPolys do not have same GenericGF field');\n            }\n            if (other.isZero()) {\n                throw new IllegalArgumentException('Divide by 0');\n            }\n            const field = this.field;\n            let quotient = field.getZero();\n            let remainder = this;\n            const denominatorLeadingTerm = other.getCoefficient(other.getDegree());\n            const inverseDenominatorLeadingTerm = field.inverse(denominatorLeadingTerm);\n            while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n                const degreeDifference = remainder.getDegree() - other.getDegree();\n                const scale = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n                const term = other.multiplyByMonomial(degreeDifference, scale);\n                const iterationQuotient = field.buildMonomial(degreeDifference, scale);\n                quotient = quotient.addOrSubtract(iterationQuotient);\n                remainder = remainder.addOrSubtract(term);\n            }\n            return [quotient, remainder];\n        }\n        /*@Override*/\n        toString() {\n            let result = '';\n            for (let degree = this.getDegree(); degree >= 0; degree--) {\n                let coefficient = this.getCoefficient(degree);\n                if (coefficient !== 0) {\n                    if (coefficient < 0) {\n                        result += ' - ';\n                        coefficient = -coefficient;\n                    }\n                    else {\n                        if (result.length > 0) {\n                            result += ' + ';\n                        }\n                    }\n                    if (degree === 0 || coefficient !== 1) {\n                        const alphaPower = this.field.log(coefficient);\n                        if (alphaPower === 0) {\n                            result += '1';\n                        }\n                        else if (alphaPower === 1) {\n                            result += 'a';\n                        }\n                        else {\n                            result += 'a^';\n                            result += alphaPower;\n                        }\n                    }\n                    if (degree !== 0) {\n                        if (degree === 1) {\n                            result += 'x';\n                        }\n                        else {\n                            result += 'x^';\n                            result += degree;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ArithmeticException extends Exception {\n    }\n    ArithmeticException.kind = 'ArithmeticException';\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This class contains utility methods for performing mathematical operations over\n     * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n     *\n     * <p>Throughout this package, elements of the GF are represented as an {@code int}\n     * for convenience and speed (but at the cost of memory).\n     * </p>\n     *\n     * @author Sean Owen\n     * @author David Olivier\n     */\n    class GenericGF extends AbstractGenericGF {\n        /**\n         * Create a representation of GF(size) using the given primitive polynomial.\n         *\n         * @param primitive irreducible polynomial whose coefficients are represented by\n         *  the bits of an int, where the least-significant bit represents the constant\n         *  coefficient\n         * @param size the size of the field\n         * @param b the factor b in the generator polynomial can be 0- or 1-based\n         *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).\n         *  In most cases it should be 1, but for QR code it is 0.\n         */\n        constructor(primitive /*int*/, size /*int*/, generatorBase /*int*/) {\n            super();\n            this.primitive = primitive;\n            this.size = size;\n            this.generatorBase = generatorBase;\n            const expTable = new Int32Array(size);\n            let x = 1;\n            for (let i = 0; i < size; i++) {\n                expTable[i] = x;\n                x *= 2; // we're assuming the generator alpha is 2\n                if (x >= size) {\n                    x ^= primitive;\n                    x &= size - 1;\n                }\n            }\n            this.expTable = expTable;\n            const logTable = new Int32Array(size);\n            for (let i = 0; i < size - 1; i++) {\n                logTable[expTable[i]] = i;\n            }\n            this.logTable = logTable;\n            // logTable[0] == 0 but this should never be used\n            this.zero = new GenericGFPoly(this, Int32Array.from([0]));\n            this.one = new GenericGFPoly(this, Int32Array.from([1]));\n        }\n        getZero() {\n            return this.zero;\n        }\n        getOne() {\n            return this.one;\n        }\n        /**\n         * @return the monomial representing coefficient * x^degree\n         */\n        buildMonomial(degree /*int*/, coefficient /*int*/) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.zero;\n            }\n            const coefficients = new Int32Array(degree + 1);\n            coefficients[0] = coefficient;\n            return new GenericGFPoly(this, coefficients);\n        }\n        /**\n         * @return multiplicative inverse of a\n         */\n        inverse(a /*int*/) {\n            if (a === 0) {\n                throw new ArithmeticException();\n            }\n            return this.expTable[this.size - this.logTable[a] - 1];\n        }\n        /**\n         * @return product of a and b in GF(size)\n         */\n        multiply(a /*int*/, b /*int*/) {\n            if (a === 0 || b === 0) {\n                return 0;\n            }\n            return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n        }\n        getSize() {\n            return this.size;\n        }\n        getGeneratorBase() {\n            return this.generatorBase;\n        }\n        /*@Override*/\n        toString() {\n            return ('GF(0x' + Integer.toHexString(this.primitive) + ',' + this.size + ')');\n        }\n        equals(o) {\n            return o === this;\n        }\n    }\n    GenericGF.AZTEC_DATA_12 = new GenericGF(0x1069, 4096, 1); // x^12 + x^6 + x^5 + x^3 + 1\n    GenericGF.AZTEC_DATA_10 = new GenericGF(0x409, 1024, 1); // x^10 + x^3 + 1\n    GenericGF.AZTEC_DATA_6 = new GenericGF(0x43, 64, 1); // x^6 + x + 1\n    GenericGF.AZTEC_PARAM = new GenericGF(0x13, 16, 1); // x^4 + x + 1\n    GenericGF.QR_CODE_FIELD_256 = new GenericGF(0x011d, 256, 0); // x^8 + x^4 + x^3 + x^2 + 1\n    GenericGF.DATA_MATRIX_FIELD_256 = new GenericGF(0x012d, 256, 1); // x^8 + x^5 + x^3 + x^2 + 1\n    GenericGF.AZTEC_DATA_8 = GenericGF.DATA_MATRIX_FIELD_256;\n    GenericGF.MAXICODE_FIELD_64 = GenericGF.AZTEC_DATA_6;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ReedSolomonException extends Exception {\n    }\n    ReedSolomonException.kind = 'ReedSolomonException';\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class IllegalStateException extends Exception {\n    }\n    IllegalStateException.kind = 'IllegalStateException';\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Implements Reed-Solomon decoding, as the name implies.</p>\n     *\n     * <p>The algorithm will not be explained here, but the following references were helpful\n     * in creating this implementation:</p>\n     *\n     * <ul>\n     * <li>Bruce Maggs.\n     * <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps\">\n     * \"Decoding Reed-Solomon Codes\"</a> (see discussion of Forney's Formula)</li>\n     * <li>J.I. Hall. <a href=\"www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf\">\n     * \"Chapter 5. Generalized Reed-Solomon Codes\"</a>\n     * (see discussion of Euclidean algorithm)</li>\n     * </ul>\n     *\n     * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n     * port of his C++ Reed-Solomon implementation.</p>\n     *\n     * @author Sean Owen\n     * @author William Rucklidge\n     * @author sanfordsquires\n     */\n    class ReedSolomonDecoder {\n        constructor(field) {\n            this.field = field;\n        }\n        /**\n         * <p>Decodes given set of received codewords, which include both data and error-correction\n         * codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,\n         * in the input.</p>\n         *\n         * @param received data and error-correction codewords\n         * @param twoS number of error-correction codewords available\n         * @throws ReedSolomonException if decoding fails for any reason\n         */\n        decode(received, twoS /*int*/) {\n            const field = this.field;\n            const poly = new GenericGFPoly(field, received);\n            const syndromeCoefficients = new Int32Array(twoS);\n            let noError = true;\n            for (let i = 0; i < twoS; i++) {\n                const evalResult = poly.evaluateAt(field.exp(i + field.getGeneratorBase()));\n                syndromeCoefficients[syndromeCoefficients.length - 1 - i] = evalResult;\n                if (evalResult !== 0) {\n                    noError = false;\n                }\n            }\n            if (noError) {\n                return;\n            }\n            const syndrome = new GenericGFPoly(field, syndromeCoefficients);\n            const sigmaOmega = this.runEuclideanAlgorithm(field.buildMonomial(twoS, 1), syndrome, twoS);\n            const sigma = sigmaOmega[0];\n            const omega = sigmaOmega[1];\n            const errorLocations = this.findErrorLocations(sigma);\n            const errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations);\n            for (let i = 0; i < errorLocations.length; i++) {\n                const position = received.length - 1 - field.log(errorLocations[i]);\n                if (position < 0) {\n                    throw new ReedSolomonException('Bad error location');\n                }\n                received[position] = GenericGF.addOrSubtract(received[position], errorMagnitudes[i]);\n            }\n        }\n        runEuclideanAlgorithm(a, b, R /*int*/) {\n            // Assume a's degree is >= b's\n            if (a.getDegree() < b.getDegree()) {\n                const temp = a;\n                a = b;\n                b = temp;\n            }\n            const field = this.field;\n            let rLast = a;\n            let r = b;\n            let tLast = field.getZero();\n            let t = field.getOne();\n            // Run Euclidean algorithm until r's degree is less than R/2\n            while (r.getDegree() >= (R / 2 | 0)) {\n                let rLastLast = rLast;\n                let tLastLast = tLast;\n                rLast = r;\n                tLast = t;\n                // Divide rLastLast by rLast, with quotient in q and remainder in r\n                if (rLast.isZero()) {\n                    // Oops, Euclidean algorithm already terminated?\n                    throw new ReedSolomonException('r_{i-1} was zero');\n                }\n                r = rLastLast;\n                let q = field.getZero();\n                const denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n                const dltInverse = field.inverse(denominatorLeadingTerm);\n                while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n                    const degreeDiff = r.getDegree() - rLast.getDegree();\n                    const scale = field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n                    q = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n                    r = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                }\n                t = q.multiply(tLast).addOrSubtract(tLastLast);\n                if (r.getDegree() >= rLast.getDegree()) {\n                    throw new IllegalStateException('Division algorithm failed to reduce polynomial?');\n                }\n            }\n            const sigmaTildeAtZero = t.getCoefficient(0);\n            if (sigmaTildeAtZero === 0) {\n                throw new ReedSolomonException('sigmaTilde(0) was zero');\n            }\n            const inverse = field.inverse(sigmaTildeAtZero);\n            const sigma = t.multiplyScalar(inverse);\n            const omega = r.multiplyScalar(inverse);\n            return [sigma, omega];\n        }\n        findErrorLocations(errorLocator) {\n            // This is a direct application of Chien's search\n            const numErrors = errorLocator.getDegree();\n            if (numErrors === 1) { // shortcut\n                return Int32Array.from([errorLocator.getCoefficient(1)]);\n            }\n            const result = new Int32Array(numErrors);\n            let e = 0;\n            const field = this.field;\n            for (let i = 1; i < field.getSize() && e < numErrors; i++) {\n                if (errorLocator.evaluateAt(i) === 0) {\n                    result[e] = field.inverse(i);\n                    e++;\n                }\n            }\n            if (e !== numErrors) {\n                throw new ReedSolomonException('Error locator degree does not match number of roots');\n            }\n            return result;\n        }\n        findErrorMagnitudes(errorEvaluator, errorLocations) {\n            // This is directly applying Forney's Formula\n            const s = errorLocations.length;\n            const result = new Int32Array(s);\n            const field = this.field;\n            for (let i = 0; i < s; i++) {\n                const xiInverse = field.inverse(errorLocations[i]);\n                let denominator = 1;\n                for (let j = 0; j < s; j++) {\n                    if (i !== j) {\n                        // denominator = field.multiply(denominator,\n                        //    GenericGF.addOrSubtract(1, field.multiply(errorLocations[j], xiInverse)))\n                        // Above should work but fails on some Apple and Linux JDKs due to a Hotspot bug.\n                        // Below is a funny-looking workaround from Steven Parkes\n                        const term = field.multiply(errorLocations[j], xiInverse);\n                        const termPlus1 = (term & 0x1) === 0 ? term | 1 : term & ~1;\n                        denominator = field.multiply(denominator, termPlus1);\n                    }\n                }\n                result[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n                if (field.getGeneratorBase() !== 0) {\n                    result[i] = field.multiply(result[i], xiInverse);\n                }\n            }\n            return result;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.Arrays;\n    var Table;\n    (function (Table) {\n        Table[Table[\"UPPER\"] = 0] = \"UPPER\";\n        Table[Table[\"LOWER\"] = 1] = \"LOWER\";\n        Table[Table[\"MIXED\"] = 2] = \"MIXED\";\n        Table[Table[\"DIGIT\"] = 3] = \"DIGIT\";\n        Table[Table[\"PUNCT\"] = 4] = \"PUNCT\";\n        Table[Table[\"BINARY\"] = 5] = \"BINARY\";\n    })(Table || (Table = {}));\n    /**\n     * <p>The main class which implements Aztec Code decoding -- as opposed to locating and extracting\n     * the Aztec Code from an image.</p>\n     *\n     * @author David Olivier\n     */\n    class Decoder {\n        decode(detectorResult) {\n            this.ddata = detectorResult;\n            let matrix = detectorResult.getBits();\n            let rawbits = this.extractBits(matrix);\n            let correctedBits = this.correctBits(rawbits);\n            let rawBytes = Decoder.convertBoolArrayToByteArray(correctedBits);\n            let result = Decoder.getEncodedData(correctedBits);\n            let decoderResult = new DecoderResult(rawBytes, result, null, null);\n            decoderResult.setNumBits(correctedBits.length);\n            return decoderResult;\n        }\n        // This method is used for testing the high-level encoder\n        static highLevelDecode(correctedBits) {\n            return this.getEncodedData(correctedBits);\n        }\n        /**\n         * Gets the string encoded in the aztec code bits\n         *\n         * @return the decoded string\n         */\n        static getEncodedData(correctedBits) {\n            let endIndex = correctedBits.length;\n            let latchTable = Table.UPPER; // table most recently latched to\n            let shiftTable = Table.UPPER; // table to use for the next read\n            let result = '';\n            let index = 0;\n            while (index < endIndex) {\n                if (shiftTable === Table.BINARY) {\n                    if (endIndex - index < 5) {\n                        break;\n                    }\n                    let length = Decoder.readCode(correctedBits, index, 5);\n                    index += 5;\n                    if (length === 0) {\n                        if (endIndex - index < 11) {\n                            break;\n                        }\n                        length = Decoder.readCode(correctedBits, index, 11) + 31;\n                        index += 11;\n                    }\n                    for (let charCount = 0; charCount < length; charCount++) {\n                        if (endIndex - index < 8) {\n                            index = endIndex; // Force outer loop to exit\n                            break;\n                        }\n                        const code = Decoder.readCode(correctedBits, index, 8);\n                        result += /*(char)*/ StringUtils.castAsNonUtf8Char(code);\n                        index += 8;\n                    }\n                    // Go back to whatever mode we had been in\n                    shiftTable = latchTable;\n                }\n                else {\n                    let size = shiftTable === Table.DIGIT ? 4 : 5;\n                    if (endIndex - index < size) {\n                        break;\n                    }\n                    let code = Decoder.readCode(correctedBits, index, size);\n                    index += size;\n                    let str = Decoder.getCharacter(shiftTable, code);\n                    if (str.startsWith('CTRL_')) {\n                        // Table changes\n                        // ISO/IEC 24778:2008 prescribes ending a shift sequence in the mode from which it was invoked.\n                        // That's including when that mode is a shift.\n                        // Our test case dlusbs.png for issue #642 exercises that.\n                        latchTable = shiftTable; // Latch the current mode, so as to return to Upper after U/S B/S\n                        shiftTable = Decoder.getTable(str.charAt(5));\n                        if (str.charAt(6) === 'L') {\n                            latchTable = shiftTable;\n                        }\n                    }\n                    else {\n                        result += str;\n                        // Go back to whatever mode we had been in\n                        shiftTable = latchTable;\n                    }\n                }\n            }\n            return result;\n        }\n        /**\n         * gets the table corresponding to the char passed\n         */\n        static getTable(t) {\n            switch (t) {\n                case 'L':\n                    return Table.LOWER;\n                case 'P':\n                    return Table.PUNCT;\n                case 'M':\n                    return Table.MIXED;\n                case 'D':\n                    return Table.DIGIT;\n                case 'B':\n                    return Table.BINARY;\n                case 'U':\n                default:\n                    return Table.UPPER;\n            }\n        }\n        /**\n         * Gets the character (or string) corresponding to the passed code in the given table\n         *\n         * @param table the table used\n         * @param code the code of the character\n         */\n        static getCharacter(table, code) {\n            switch (table) {\n                case Table.UPPER:\n                    return Decoder.UPPER_TABLE[code];\n                case Table.LOWER:\n                    return Decoder.LOWER_TABLE[code];\n                case Table.MIXED:\n                    return Decoder.MIXED_TABLE[code];\n                case Table.PUNCT:\n                    return Decoder.PUNCT_TABLE[code];\n                case Table.DIGIT:\n                    return Decoder.DIGIT_TABLE[code];\n                default:\n                    // Should not reach here.\n                    throw new IllegalStateException('Bad table');\n            }\n        }\n        /**\n         * <p>Performs RS error correction on an array of bits.</p>\n         *\n         * @return the corrected array\n         * @throws FormatException if the input contains too many errors\n         */\n        correctBits(rawbits) {\n            let gf;\n            let codewordSize;\n            if (this.ddata.getNbLayers() <= 2) {\n                codewordSize = 6;\n                gf = GenericGF.AZTEC_DATA_6;\n            }\n            else if (this.ddata.getNbLayers() <= 8) {\n                codewordSize = 8;\n                gf = GenericGF.AZTEC_DATA_8;\n            }\n            else if (this.ddata.getNbLayers() <= 22) {\n                codewordSize = 10;\n                gf = GenericGF.AZTEC_DATA_10;\n            }\n            else {\n                codewordSize = 12;\n                gf = GenericGF.AZTEC_DATA_12;\n            }\n            let numDataCodewords = this.ddata.getNbDatablocks();\n            let numCodewords = rawbits.length / codewordSize;\n            if (numCodewords < numDataCodewords) {\n                throw new FormatException();\n            }\n            let offset = rawbits.length % codewordSize;\n            let dataWords = new Int32Array(numCodewords);\n            for (let i = 0; i < numCodewords; i++, offset += codewordSize) {\n                dataWords[i] = Decoder.readCode(rawbits, offset, codewordSize);\n            }\n            try {\n                let rsDecoder = new ReedSolomonDecoder(gf);\n                rsDecoder.decode(dataWords, numCodewords - numDataCodewords);\n            }\n            catch (ex) {\n                throw new FormatException(ex);\n            }\n            // Now perform the unstuffing operation.\n            // First, count how many bits are going to be thrown out as stuffing\n            let mask = (1 << codewordSize) - 1;\n            let stuffedBits = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                let dataWord = dataWords[i];\n                if (dataWord === 0 || dataWord === mask) {\n                    throw new FormatException();\n                }\n                else if (dataWord === 1 || dataWord === mask - 1) {\n                    stuffedBits++;\n                }\n            }\n            // Now, actually unpack the bits and remove the stuffing\n            let correctedBits = new Array(numDataCodewords * codewordSize - stuffedBits);\n            let index = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                let dataWord = dataWords[i];\n                if (dataWord === 1 || dataWord === mask - 1) {\n                    // next codewordSize-1 bits are all zeros or all ones\n                    correctedBits.fill(dataWord > 1, index, index + codewordSize - 1);\n                    // Arrays.fill(correctedBits, index, index + codewordSize - 1, dataWord > 1);\n                    index += codewordSize - 1;\n                }\n                else {\n                    for (let bit = codewordSize - 1; bit >= 0; --bit) {\n                        correctedBits[index++] = (dataWord & (1 << bit)) !== 0;\n                    }\n                }\n            }\n            return correctedBits;\n        }\n        /**\n         * Gets the array of bits from an Aztec Code matrix\n         *\n         * @return the array of bits\n         */\n        extractBits(matrix) {\n            let compact = this.ddata.isCompact();\n            let layers = this.ddata.getNbLayers();\n            let baseMatrixSize = (compact ? 11 : 14) + layers * 4; // not including alignment lines\n            let alignmentMap = new Int32Array(baseMatrixSize);\n            let rawbits = new Array(this.totalBitsInLayer(layers, compact));\n            if (compact) {\n                for (let i = 0; i < alignmentMap.length; i++) {\n                    alignmentMap[i] = i;\n                }\n            }\n            else {\n                let matrixSize = baseMatrixSize + 1 + 2 * Integer.truncDivision((Integer.truncDivision(baseMatrixSize, 2) - 1), 15);\n                let origCenter = baseMatrixSize / 2;\n                let center = Integer.truncDivision(matrixSize, 2);\n                for (let i = 0; i < origCenter; i++) {\n                    let newOffset = i + Integer.truncDivision(i, 15);\n                    alignmentMap[origCenter - i - 1] = center - newOffset - 1;\n                    alignmentMap[origCenter + i] = center + newOffset + 1;\n                }\n            }\n            for (let i = 0, rowOffset = 0; i < layers; i++) {\n                let rowSize = (layers - i) * 4 + (compact ? 9 : 12);\n                // The top-left most point of this layer is <low, low> (not including alignment lines)\n                let low = i * 2;\n                // The bottom-right most point of this layer is <high, high> (not including alignment lines)\n                let high = baseMatrixSize - 1 - low;\n                // We pull bits from the two 2 x rowSize columns and two rowSize x 2 rows\n                for (let j = 0; j < rowSize; j++) {\n                    let columnOffset = j * 2;\n                    for (let k = 0; k < 2; k++) {\n                        // left column\n                        rawbits[rowOffset + columnOffset + k] =\n                            matrix.get(alignmentMap[low + k], alignmentMap[low + j]);\n                        // bottom row\n                        rawbits[rowOffset + 2 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[low + j], alignmentMap[high - k]);\n                        // right column\n                        rawbits[rowOffset + 4 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[high - k], alignmentMap[high - j]);\n                        // top row\n                        rawbits[rowOffset + 6 * rowSize + columnOffset + k] =\n                            matrix.get(alignmentMap[high - j], alignmentMap[low + k]);\n                    }\n                }\n                rowOffset += rowSize * 8;\n            }\n            return rawbits;\n        }\n        /**\n         * Reads a code of given length and at given index in an array of bits\n         */\n        static readCode(rawbits, startIndex, length) {\n            let res = 0;\n            for (let i = startIndex; i < startIndex + length; i++) {\n                res <<= 1;\n                if (rawbits[i]) {\n                    res |= 0x01;\n                }\n            }\n            return res;\n        }\n        /**\n         * Reads a code of length 8 in an array of bits, padding with zeros\n         */\n        static readByte(rawbits, startIndex) {\n            let n = rawbits.length - startIndex;\n            if (n >= 8) {\n                return Decoder.readCode(rawbits, startIndex, 8);\n            }\n            return Decoder.readCode(rawbits, startIndex, n) << (8 - n);\n        }\n        /**\n         * Packs a bit array into bytes, most significant bit first\n         */\n        static convertBoolArrayToByteArray(boolArr) {\n            let byteArr = new Uint8Array((boolArr.length + 7) / 8);\n            for (let i = 0; i < byteArr.length; i++) {\n                byteArr[i] = Decoder.readByte(boolArr, 8 * i);\n            }\n            return byteArr;\n        }\n        totalBitsInLayer(layers, compact) {\n            return ((compact ? 88 : 112) + 16 * layers) * layers;\n        }\n    }\n    Decoder.UPPER_TABLE = [\n        'CTRL_PS', ' ', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',\n        'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'CTRL_LL', 'CTRL_ML', 'CTRL_DL', 'CTRL_BS'\n    ];\n    Decoder.LOWER_TABLE = [\n        'CTRL_PS', ' ', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',\n        'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'CTRL_US', 'CTRL_ML', 'CTRL_DL', 'CTRL_BS'\n    ];\n    Decoder.MIXED_TABLE = [\n        // Module parse failed: Octal literal in strict mode (50:29)\n        // so number string were scaped\n        'CTRL_PS', ' ', '\\\\1', '\\\\2', '\\\\3', '\\\\4', '\\\\5', '\\\\6', '\\\\7', '\\b', '\\t', '\\n',\n        '\\\\13', '\\f', '\\r', '\\\\33', '\\\\34', '\\\\35', '\\\\36', '\\\\37', '@', '\\\\', '^', '_',\n        '`', '|', '~', '\\\\177', 'CTRL_LL', 'CTRL_UL', 'CTRL_PL', 'CTRL_BS'\n    ];\n    Decoder.PUNCT_TABLE = [\n        '', '\\r', '\\r\\n', '. ', ', ', ': ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')',\n        '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '[', ']', '{', '}', 'CTRL_UL'\n    ];\n    Decoder.DIGIT_TABLE = [\n        'CTRL_PS', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ',', '.', 'CTRL_UL', 'CTRL_US'\n    ];\n\n    /*\n     * Copyright 2012 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common.detector {*/\n    /**\n     * General math-related and numeric utility functions.\n     */\n    class MathUtils {\n        constructor() { }\n        /**\n         * Ends up being a bit faster than {@link Math#round(float)}. This merely rounds its\n         * argument to the nearest int, where x.5 rounds up to x+1. Semantics of this shortcut\n         * differ slightly from {@link Math#round(float)} in that half rounds down for negative\n         * values. -2.5 rounds to -3, not -2. For purposes here it makes no difference.\n         *\n         * @param d real value to round\n         * @return nearest {@code int}\n         */\n        static round(d /*float*/) {\n            if (NaN === d)\n                return 0;\n            if (d <= Number.MIN_SAFE_INTEGER)\n                return Number.MIN_SAFE_INTEGER;\n            if (d >= Number.MAX_SAFE_INTEGER)\n                return Number.MAX_SAFE_INTEGER;\n            return /*(int) */ (d + (d < 0.0 ? -0.5 : 0.5)) | 0;\n        }\n        // TYPESCRIPTPORT: maybe remove round method and call directly Math.round, it looks like it doesn't make sense for js\n        /**\n         * @param aX point A x coordinate\n         * @param aY point A y coordinate\n         * @param bX point B x coordinate\n         * @param bY point B y coordinate\n         * @return Euclidean distance between points A and B\n         */\n        static distance(aX /*float|int*/, aY /*float|int*/, bX /*float|int*/, bY /*float|int*/) {\n            const xDiff = aX - bX;\n            const yDiff = aY - bY;\n            return /*(float) */ Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n        }\n        /**\n         * @param aX point A x coordinate\n         * @param aY point A y coordinate\n         * @param bX point B x coordinate\n         * @param bY point B y coordinate\n         * @return Euclidean distance between points A and B\n         */\n        // public static distance(aX: number /*int*/, aY: number /*int*/, bX: number /*int*/, bY: number /*int*/): float {\n        //   const xDiff = aX - bX\n        //   const yDiff = aY - bY\n        //   return (float) Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n        // }\n        /**\n         * @param array values to sum\n         * @return sum of values in array\n         */\n        static sum(array) {\n            let count = 0;\n            for (let i = 0, length = array.length; i !== length; i++) {\n                const a = array[i];\n                count += a;\n            }\n            return count;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Float class.\n     */\n    class Float {\n        /**\n         * SincTS has no difference between int and float, there's all numbers,\n         * this is used only to polyfill Java code.\n         */\n        static floatToIntBits(f) {\n            return f;\n        }\n    }\n    /**\n     * The float max value in JS is the number max value.\n     */\n    Float.MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a point of interest in an image containing a barcode. Typically, this\n     * would be the location of a finder pattern or the corner of the barcode, for example.</p>\n     *\n     * @author Sean Owen\n     */\n    class ResultPoint {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n        getX() {\n            return this.x;\n        }\n        getY() {\n            return this.y;\n        }\n        /*@Override*/\n        equals(other) {\n            if (other instanceof ResultPoint) {\n                const otherPoint = other;\n                return this.x === otherPoint.x && this.y === otherPoint.y;\n            }\n            return false;\n        }\n        /*@Override*/\n        hashCode() {\n            return 31 * Float.floatToIntBits(this.x) + Float.floatToIntBits(this.y);\n        }\n        /*@Override*/\n        toString() {\n            return '(' + this.x + ',' + this.y + ')';\n        }\n        /**\n         * Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC\n         * and BC is less than AC, and the angle between BC and BA is less than 180 degrees.\n         *\n         * @param patterns array of three {@code ResultPoint} to order\n         */\n        static orderBestPatterns(patterns) {\n            // Find distances between pattern centers\n            const zeroOneDistance = this.distance(patterns[0], patterns[1]);\n            const oneTwoDistance = this.distance(patterns[1], patterns[2]);\n            const zeroTwoDistance = this.distance(patterns[0], patterns[2]);\n            let pointA;\n            let pointB;\n            let pointC;\n            // Assume one closest to other two is B; A and C will just be guesses at first\n            if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {\n                pointB = patterns[0];\n                pointA = patterns[1];\n                pointC = patterns[2];\n            }\n            else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {\n                pointB = patterns[1];\n                pointA = patterns[0];\n                pointC = patterns[2];\n            }\n            else {\n                pointB = patterns[2];\n                pointA = patterns[0];\n                pointC = patterns[1];\n            }\n            // Use cross product to figure out whether A and C are correct or flipped.\n            // This asks whether BC x BA has a positive z component, which is the arrangement\n            // we want for A, B, C. If it's negative, then we've got it flipped around and\n            // should swap A and C.\n            if (this.crossProductZ(pointA, pointB, pointC) < 0.0) {\n                const temp = pointA;\n                pointA = pointC;\n                pointC = temp;\n            }\n            patterns[0] = pointA;\n            patterns[1] = pointB;\n            patterns[2] = pointC;\n        }\n        /**\n         * @param pattern1 first pattern\n         * @param pattern2 second pattern\n         * @return distance between two points\n         */\n        static distance(pattern1, pattern2) {\n            return MathUtils.distance(pattern1.x, pattern1.y, pattern2.x, pattern2.y);\n        }\n        /**\n         * Returns the z component of the cross product between vectors BC and BA.\n         */\n        static crossProductZ(pointA, pointB, pointC) {\n            const bX = pointB.x;\n            const bY = pointB.y;\n            return ((pointC.x - bX) * (pointA.y - bY)) - ((pointC.y - bY) * (pointA.x - bX));\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates the result of detecting a barcode in an image. This includes the raw\n     * matrix of black/white pixels corresponding to the barcode, and possibly points of interest\n     * in the image, like the location of finder patterns or corners of the barcode in the image.</p>\n     *\n     * @author Sean Owen\n     */\n    class DetectorResult {\n        constructor(bits, points) {\n            this.bits = bits;\n            this.points = points;\n        }\n        getBits() {\n            return this.bits;\n        }\n        getPoints() {\n            return this.points;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\n     * like the number of layers and whether it's compact.</p>\n     *\n     * @author Sean Owen\n     */\n    class AztecDetectorResult extends DetectorResult {\n        constructor(bits, points, compact, nbDatablocks, nbLayers) {\n            super(bits, points);\n            this.compact = compact;\n            this.nbDatablocks = nbDatablocks;\n            this.nbLayers = nbLayers;\n        }\n        getNbLayers() {\n            return this.nbLayers;\n        }\n        getNbDatablocks() {\n            return this.nbDatablocks;\n        }\n        isCompact() {\n            return this.compact;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>\n     * Detects a candidate barcode-like rectangular region within an image. It\n     * starts around the center of the image, increases the size of the candidate\n     * region until it finds a white rectangular region. By keeping track of the\n     * last black points it encountered, it determines the corners of the barcode.\n     * </p>\n     *\n     * @author David Olivier\n     */\n    class WhiteRectangleDetector {\n        // public constructor(private image: BitMatrix) /*throws NotFoundException*/ {\n        //   this(image, INIT_SIZE, image.getWidth() / 2, image.getHeight() / 2)\n        // }\n        /**\n         * @param image barcode image to find a rectangle in\n         * @param initSize initial size of search area around center\n         * @param x x position of search center\n         * @param y y position of search center\n         * @throws NotFoundException if image is too small to accommodate {@code initSize}\n         */\n        constructor(image, initSize /*int*/, x /*int*/, y /*int*/) {\n            this.image = image;\n            this.height = image.getHeight();\n            this.width = image.getWidth();\n            if (undefined === initSize || null === initSize) {\n                initSize = WhiteRectangleDetector.INIT_SIZE;\n            }\n            if (undefined === x || null === x) {\n                x = image.getWidth() / 2 | 0;\n            }\n            if (undefined === y || null === y) {\n                y = image.getHeight() / 2 | 0;\n            }\n            const halfsize = initSize / 2 | 0;\n            this.leftInit = x - halfsize;\n            this.rightInit = x + halfsize;\n            this.upInit = y - halfsize;\n            this.downInit = y + halfsize;\n            if (this.upInit < 0 || this.leftInit < 0 || this.downInit >= this.height || this.rightInit >= this.width) {\n                throw new NotFoundException();\n            }\n        }\n        /**\n         * <p>\n         * Detects a candidate barcode-like rectangular region within an image. It\n         * starts around the center of the image, increases the size of the candidate\n         * region until it finds a white rectangular region.\n         * </p>\n         *\n         * @return {@link ResultPoint}[] describing the corners of the rectangular\n         *         region. The first and last points are opposed on the diagonal, as\n         *         are the second and third. The first point will be the topmost\n         *         point and the last, the bottommost. The second point will be\n         *         leftmost and the third, the rightmost\n         * @throws NotFoundException if no Data Matrix Code can be found\n         */\n        detect() {\n            let left = this.leftInit;\n            let right = this.rightInit;\n            let up = this.upInit;\n            let down = this.downInit;\n            let sizeExceeded = false;\n            let aBlackPointFoundOnBorder = true;\n            let atLeastOneBlackPointFoundOnBorder = false;\n            let atLeastOneBlackPointFoundOnRight = false;\n            let atLeastOneBlackPointFoundOnBottom = false;\n            let atLeastOneBlackPointFoundOnLeft = false;\n            let atLeastOneBlackPointFoundOnTop = false;\n            const width = this.width;\n            const height = this.height;\n            while (aBlackPointFoundOnBorder) {\n                aBlackPointFoundOnBorder = false;\n                // .....\n                // .   |\n                // .....\n                let rightBorderNotWhite = true;\n                while ((rightBorderNotWhite || !atLeastOneBlackPointFoundOnRight) && right < width) {\n                    rightBorderNotWhite = this.containsBlackPoint(up, down, right, false);\n                    if (rightBorderNotWhite) {\n                        right++;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnRight = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnRight) {\n                        right++;\n                    }\n                }\n                if (right >= width) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .....\n                // .   .\n                // .___.\n                let bottomBorderNotWhite = true;\n                while ((bottomBorderNotWhite || !atLeastOneBlackPointFoundOnBottom) && down < height) {\n                    bottomBorderNotWhite = this.containsBlackPoint(left, right, down, true);\n                    if (bottomBorderNotWhite) {\n                        down++;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnBottom = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnBottom) {\n                        down++;\n                    }\n                }\n                if (down >= height) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .....\n                // |   .\n                // .....\n                let leftBorderNotWhite = true;\n                while ((leftBorderNotWhite || !atLeastOneBlackPointFoundOnLeft) && left >= 0) {\n                    leftBorderNotWhite = this.containsBlackPoint(up, down, left, false);\n                    if (leftBorderNotWhite) {\n                        left--;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnLeft = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnLeft) {\n                        left--;\n                    }\n                }\n                if (left < 0) {\n                    sizeExceeded = true;\n                    break;\n                }\n                // .___.\n                // .   .\n                // .....\n                let topBorderNotWhite = true;\n                while ((topBorderNotWhite || !atLeastOneBlackPointFoundOnTop) && up >= 0) {\n                    topBorderNotWhite = this.containsBlackPoint(left, right, up, true);\n                    if (topBorderNotWhite) {\n                        up--;\n                        aBlackPointFoundOnBorder = true;\n                        atLeastOneBlackPointFoundOnTop = true;\n                    }\n                    else if (!atLeastOneBlackPointFoundOnTop) {\n                        up--;\n                    }\n                }\n                if (up < 0) {\n                    sizeExceeded = true;\n                    break;\n                }\n                if (aBlackPointFoundOnBorder) {\n                    atLeastOneBlackPointFoundOnBorder = true;\n                }\n            }\n            if (!sizeExceeded && atLeastOneBlackPointFoundOnBorder) {\n                const maxSize = right - left;\n                let z = null;\n                for (let i = 1; z === null && i < maxSize; i++) {\n                    z = this.getBlackPointOnSegment(left, down - i, left + i, down);\n                }\n                if (z == null) {\n                    throw new NotFoundException();\n                }\n                let t = null;\n                // go down right\n                for (let i = 1; t === null && i < maxSize; i++) {\n                    t = this.getBlackPointOnSegment(left, up + i, left + i, up);\n                }\n                if (t == null) {\n                    throw new NotFoundException();\n                }\n                let x = null;\n                // go down left\n                for (let i = 1; x === null && i < maxSize; i++) {\n                    x = this.getBlackPointOnSegment(right, up + i, right - i, up);\n                }\n                if (x == null) {\n                    throw new NotFoundException();\n                }\n                let y = null;\n                // go up left\n                for (let i = 1; y === null && i < maxSize; i++) {\n                    y = this.getBlackPointOnSegment(right, down - i, right - i, down);\n                }\n                if (y == null) {\n                    throw new NotFoundException();\n                }\n                return this.centerEdges(y, z, x, t);\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        getBlackPointOnSegment(aX /*float*/, aY /*float*/, bX /*float*/, bY /*float*/) {\n            const dist = MathUtils.round(MathUtils.distance(aX, aY, bX, bY));\n            const xStep = (bX - aX) / dist;\n            const yStep = (bY - aY) / dist;\n            const image = this.image;\n            for (let i = 0; i < dist; i++) {\n                const x = MathUtils.round(aX + i * xStep);\n                const y = MathUtils.round(aY + i * yStep);\n                if (image.get(x, y)) {\n                    return new ResultPoint(x, y);\n                }\n            }\n            return null;\n        }\n        /**\n         * recenters the points of a constant distance towards the center\n         *\n         * @param y bottom most point\n         * @param z left most point\n         * @param x right most point\n         * @param t top most point\n         * @return {@link ResultPoint}[] describing the corners of the rectangular\n         *         region. The first and last points are opposed on the diagonal, as\n         *         are the second and third. The first point will be the topmost\n         *         point and the last, the bottommost. The second point will be\n         *         leftmost and the third, the rightmost\n         */\n        centerEdges(y, z, x, t) {\n            //\n            //       t            t\n            //  z                      x\n            //        x    OR    z\n            //   y                    y\n            //\n            const yi = y.getX();\n            const yj = y.getY();\n            const zi = z.getX();\n            const zj = z.getY();\n            const xi = x.getX();\n            const xj = x.getY();\n            const ti = t.getX();\n            const tj = t.getY();\n            const CORR = WhiteRectangleDetector.CORR;\n            if (yi < this.width / 2.0) {\n                return [\n                    new ResultPoint(ti - CORR, tj + CORR),\n                    new ResultPoint(zi + CORR, zj + CORR),\n                    new ResultPoint(xi - CORR, xj - CORR),\n                    new ResultPoint(yi + CORR, yj - CORR)\n                ];\n            }\n            else {\n                return [\n                    new ResultPoint(ti + CORR, tj + CORR),\n                    new ResultPoint(zi + CORR, zj - CORR),\n                    new ResultPoint(xi - CORR, xj + CORR),\n                    new ResultPoint(yi - CORR, yj - CORR)\n                ];\n            }\n        }\n        /**\n         * Determines whether a segment contains a black point\n         *\n         * @param a          min value of the scanned coordinate\n         * @param b          max value of the scanned coordinate\n         * @param fixed      value of fixed coordinate\n         * @param horizontal set to true if scan must be horizontal, false if vertical\n         * @return true if a black point has been found, else false.\n         */\n        containsBlackPoint(a /*int*/, b /*int*/, fixed /*int*/, horizontal) {\n            const image = this.image;\n            if (horizontal) {\n                for (let x = a; x <= b; x++) {\n                    if (image.get(x, fixed)) {\n                        return true;\n                    }\n                }\n            }\n            else {\n                for (let y = a; y <= b; y++) {\n                    if (image.get(fixed, y)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n    }\n    WhiteRectangleDetector.INIT_SIZE = 10;\n    WhiteRectangleDetector.CORR = 1;\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Implementations of this class can, given locations of finder patterns for a QR code in an\n     * image, sample the right points in the image to reconstruct the QR code, accounting for\n     * perspective distortion. It is abstracted since it is relatively expensive and should be allowed\n     * to take advantage of platform-specific optimized implementations, like Sun's Java Advanced\n     * Imaging library, but which may not be available in other environments such as J2ME, and vice\n     * versa.\n     *\n     * The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}\n     * with an instance of a class which implements this interface.\n     *\n     * @author Sean Owen\n     */\n    class GridSampler {\n        /**\n         * <p>Checks a set of points that have been transformed to sample points on an image against\n         * the image's dimensions to see if the point are even within the image.</p>\n         *\n         * <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be\n         * barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder\n         * patterns in an image where the QR Code runs all the way to the image border.</p>\n         *\n         * <p>For efficiency, the method will check points from either end of the line until one is found\n         * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n         *\n         * @param image image into which the points should map\n         * @param points actual points in x1,y1,...,xn,yn form\n         * @throws NotFoundException if an endpoint is lies outside the image boundaries\n         */\n        static checkAndNudgePoints(image, points) {\n            const width = image.getWidth();\n            const height = image.getHeight();\n            // Check and nudge points from start until we see some that are OK:\n            let nudged = true;\n            for (let offset = 0; offset < points.length && nudged; offset += 2) {\n                const x = Math.floor(points[offset]);\n                const y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw new NotFoundException();\n                }\n                nudged = false;\n                if (x === -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x === width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y === -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y === height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n            // Check and nudge points from end:\n            nudged = true;\n            for (let offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n                const x = Math.floor(points[offset]);\n                const y = Math.floor(points[offset + 1]);\n                if (x < -1 || x > width || y < -1 || y > height) {\n                    throw new NotFoundException();\n                }\n                nudged = false;\n                if (x === -1) {\n                    points[offset] = 0.0;\n                    nudged = true;\n                }\n                else if (x === width) {\n                    points[offset] = width - 1;\n                    nudged = true;\n                }\n                if (y === -1) {\n                    points[offset + 1] = 0.0;\n                    nudged = true;\n                }\n                else if (y === height) {\n                    points[offset + 1] = height - 1;\n                    nudged = true;\n                }\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.common {*/\n    /**\n     * <p>This class implements a perspective transform in two dimensions. Given four source and four\n     * destination points, it will compute the transformation implied between them. The code is based\n     * directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56.</p>\n     *\n     * @author Sean Owen\n     */\n    class PerspectiveTransform {\n        constructor(a11 /*float*/, a21 /*float*/, a31 /*float*/, a12 /*float*/, a22 /*float*/, a32 /*float*/, a13 /*float*/, a23 /*float*/, a33 /*float*/) {\n            this.a11 = a11;\n            this.a21 = a21;\n            this.a31 = a31;\n            this.a12 = a12;\n            this.a22 = a22;\n            this.a32 = a32;\n            this.a13 = a13;\n            this.a23 = a23;\n            this.a33 = a33;\n        }\n        static quadrilateralToQuadrilateral(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/, x0p /*float*/, y0p /*float*/, x1p /*float*/, y1p /*float*/, x2p /*float*/, y2p /*float*/, x3p /*float*/, y3p /*float*/) {\n            const qToS = PerspectiveTransform.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\n            const sToQ = PerspectiveTransform.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\n            return sToQ.times(qToS);\n        }\n        transformPoints(points) {\n            const max = points.length;\n            const a11 = this.a11;\n            const a12 = this.a12;\n            const a13 = this.a13;\n            const a21 = this.a21;\n            const a22 = this.a22;\n            const a23 = this.a23;\n            const a31 = this.a31;\n            const a32 = this.a32;\n            const a33 = this.a33;\n            for (let i = 0; i < max; i += 2) {\n                const x = points[i];\n                const y = points[i + 1];\n                const denominator = a13 * x + a23 * y + a33;\n                points[i] = (a11 * x + a21 * y + a31) / denominator;\n                points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\n            }\n        }\n        transformPointsWithValues(xValues, yValues) {\n            const a11 = this.a11;\n            const a12 = this.a12;\n            const a13 = this.a13;\n            const a21 = this.a21;\n            const a22 = this.a22;\n            const a23 = this.a23;\n            const a31 = this.a31;\n            const a32 = this.a32;\n            const a33 = this.a33;\n            const n = xValues.length;\n            for (let i = 0; i < n; i++) {\n                const x = xValues[i];\n                const y = yValues[i];\n                const denominator = a13 * x + a23 * y + a33;\n                xValues[i] = (a11 * x + a21 * y + a31) / denominator;\n                yValues[i] = (a12 * x + a22 * y + a32) / denominator;\n            }\n        }\n        static squareToQuadrilateral(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/) {\n            const dx3 = x0 - x1 + x2 - x3;\n            const dy3 = y0 - y1 + y2 - y3;\n            if (dx3 === 0.0 && dy3 === 0.0) {\n                // Affine\n                return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\n            }\n            else {\n                const dx1 = x1 - x2;\n                const dx2 = x3 - x2;\n                const dy1 = y1 - y2;\n                const dy2 = y3 - y2;\n                const denominator = dx1 * dy2 - dx2 * dy1;\n                const a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n                const a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n                return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\n            }\n        }\n        static quadrilateralToSquare(x0 /*float*/, y0 /*float*/, x1 /*float*/, y1 /*float*/, x2 /*float*/, y2 /*float*/, x3 /*float*/, y3 /*float*/) {\n            // Here, the adjoint serves as the inverse:\n            return PerspectiveTransform.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3).buildAdjoint();\n        }\n        buildAdjoint() {\n            // Adjoint is the transpose of the cofactor matrix:\n            return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\n        }\n        times(other) {\n            return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 + this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Sean Owen\n     */\n    class DefaultGridSampler extends GridSampler {\n        /*@Override*/\n        sampleGrid(image, dimensionX /*int*/, dimensionY /*int*/, p1ToX /*float*/, p1ToY /*float*/, p2ToX /*float*/, p2ToY /*float*/, p3ToX /*float*/, p3ToY /*float*/, p4ToX /*float*/, p4ToY /*float*/, p1FromX /*float*/, p1FromY /*float*/, p2FromX /*float*/, p2FromY /*float*/, p3FromX /*float*/, p3FromY /*float*/, p4FromX /*float*/, p4FromY /*float*/) {\n            const transform = PerspectiveTransform.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n            return this.sampleGridWithTransform(image, dimensionX, dimensionY, transform);\n        }\n        /*@Override*/\n        sampleGridWithTransform(image, dimensionX /*int*/, dimensionY /*int*/, transform) {\n            if (dimensionX <= 0 || dimensionY <= 0) {\n                throw new NotFoundException();\n            }\n            const bits = new BitMatrix(dimensionX, dimensionY);\n            const points = new Float32Array(2 * dimensionX);\n            for (let y = 0; y < dimensionY; y++) {\n                const max = points.length;\n                const iValue = y + 0.5;\n                for (let x = 0; x < max; x += 2) {\n                    points[x] = (x / 2) + 0.5;\n                    points[x + 1] = iValue;\n                }\n                transform.transformPoints(points);\n                // Quick check to see if points transformed to something inside the image\n                // sufficient to check the endpoints\n                GridSampler.checkAndNudgePoints(image, points);\n                try {\n                    for (let x = 0; x < max; x += 2) {\n                        if (image.get(Math.floor(points[x]), Math.floor(points[x + 1]))) {\n                            // Black(-ish) pixel\n                            bits.set(x / 2, y);\n                        }\n                    }\n                }\n                catch (aioobe /*: ArrayIndexOutOfBoundsException*/) {\n                    // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n                    // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n                    // whose endpoints are in bounds, but others are not. There is probably some mathematical\n                    // way to detect this about the transformation that I don't know yet.\n                    // This results in an ugly runtime exception despite our clever checks above -- can't have\n                    // that. We could check each point's coordinates but that feels duplicative. We settle for\n                    // catching and wrapping ArrayIndexOutOfBoundsException.\n                    throw new NotFoundException();\n                }\n            }\n            return bits;\n        }\n    }\n\n    class GridSamplerInstance {\n        /**\n         * Sets the implementation of GridSampler used by the library. One global\n         * instance is stored, which may sound problematic. But, the implementation provided\n         * ought to be appropriate for the entire platform, and all uses of this library\n         * in the whole lifetime of the JVM. For instance, an Android activity can swap in\n         * an implementation that takes advantage of native platform libraries.\n         *\n         * @param newGridSampler The platform-specific object to install.\n         */\n        static setGridSampler(newGridSampler) {\n            GridSamplerInstance.gridSampler = newGridSampler;\n        }\n        /**\n         * @return the current implementation of GridSampler\n         */\n        static getInstance() {\n            return GridSamplerInstance.gridSampler;\n        }\n    }\n    GridSamplerInstance.gridSampler = new DefaultGridSampler();\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class Point {\n        constructor(x, y) {\n            this.x = x;\n            this.y = y;\n        }\n        toResultPoint() {\n            return new ResultPoint(this.getX(), this.getY());\n        }\n        getX() {\n            return this.x;\n        }\n        getY() {\n            return this.y;\n        }\n    }\n    /**\n     * Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code\n     * is rotated or skewed, or partially obscured.\n     *\n     * @author David Olivier\n     * @author Frank Yellin\n     */\n    class Detector {\n        constructor(image) {\n            this.EXPECTED_CORNER_BITS = new Int32Array([\n                0xee0,\n                0x1dc,\n                0x83b,\n                0x707,\n            ]);\n            this.image = image;\n        }\n        detect() {\n            return this.detectMirror(false);\n        }\n        /**\n         * Detects an Aztec Code in an image.\n         *\n         * @param isMirror if true, image is a mirror-image of original\n         * @return {@link AztecDetectorResult} encapsulating results of detecting an Aztec Code\n         * @throws NotFoundException if no Aztec Code can be found\n         */\n        detectMirror(isMirror) {\n            // 1. Get the center of the aztec matrix\n            let pCenter = this.getMatrixCenter();\n            // 2. Get the center points of the four diagonal points just outside the bull's eye\n            //  [topRight, bottomRight, bottomLeft, topLeft]\n            let bullsEyeCorners = this.getBullsEyeCorners(pCenter);\n            if (isMirror) {\n                let temp = bullsEyeCorners[0];\n                bullsEyeCorners[0] = bullsEyeCorners[2];\n                bullsEyeCorners[2] = temp;\n            }\n            // 3. Get the size of the matrix and other parameters from the bull's eye\n            this.extractParameters(bullsEyeCorners);\n            // 4. Sample the grid\n            let bits = this.sampleGrid(this.image, bullsEyeCorners[this.shift % 4], bullsEyeCorners[(this.shift + 1) % 4], bullsEyeCorners[(this.shift + 2) % 4], bullsEyeCorners[(this.shift + 3) % 4]);\n            // 5. Get the corners of the matrix.\n            let corners = this.getMatrixCornerPoints(bullsEyeCorners);\n            return new AztecDetectorResult(bits, corners, this.compact, this.nbDataBlocks, this.nbLayers);\n        }\n        /**\n         * Extracts the number of data layers and data blocks from the layer around the bull's eye.\n         *\n         * @param bullsEyeCorners the array of bull's eye corners\n         * @throws NotFoundException in case of too many errors or invalid parameters\n         */\n        extractParameters(bullsEyeCorners) {\n            if (!this.isValidPoint(bullsEyeCorners[0]) || !this.isValidPoint(bullsEyeCorners[1]) ||\n                !this.isValidPoint(bullsEyeCorners[2]) || !this.isValidPoint(bullsEyeCorners[3])) {\n                throw new NotFoundException();\n            }\n            let length = 2 * this.nbCenterLayers;\n            // Get the bits around the bull's eye\n            let sides = new Int32Array([\n                this.sampleLine(bullsEyeCorners[0], bullsEyeCorners[1], length),\n                this.sampleLine(bullsEyeCorners[1], bullsEyeCorners[2], length),\n                this.sampleLine(bullsEyeCorners[2], bullsEyeCorners[3], length),\n                this.sampleLine(bullsEyeCorners[3], bullsEyeCorners[0], length) // Top\n            ]);\n            // bullsEyeCorners[shift] is the corner of the bulls'eye that has three\n            // orientation marks.\n            // sides[shift] is the row/column that goes from the corner with three\n            // orientation marks to the corner with two.\n            this.shift = this.getRotation(sides, length);\n            // Flatten the parameter bits into a single 28- or 40-bit long\n            let parameterData = 0;\n            for (let i = 0; i < 4; i++) {\n                let side = sides[(this.shift + i) % 4];\n                if (this.compact) {\n                    // Each side of the form ..XXXXXXX. where Xs are parameter data\n                    parameterData <<= 7;\n                    parameterData += (side >> 1) & 0x7F;\n                }\n                else {\n                    // Each side of the form ..XXXXX.XXXXX. where Xs are parameter data\n                    parameterData <<= 10;\n                    parameterData += ((side >> 2) & (0x1f << 5)) + ((side >> 1) & 0x1F);\n                }\n            }\n            // Corrects parameter data using RS.  Returns just the data portion\n            // without the error correction.\n            let correctedData = this.getCorrectedParameterData(parameterData, this.compact);\n            if (this.compact) {\n                // 8 bits:  2 bits layers and 6 bits data blocks\n                this.nbLayers = (correctedData >> 6) + 1;\n                this.nbDataBlocks = (correctedData & 0x3F) + 1;\n            }\n            else {\n                // 16 bits:  5 bits layers and 11 bits data blocks\n                this.nbLayers = (correctedData >> 11) + 1;\n                this.nbDataBlocks = (correctedData & 0x7FF) + 1;\n            }\n        }\n        getRotation(sides, length) {\n            // In a normal pattern, we expect to See\n            //   **    .*             D       A\n            //   *      *\n            //\n            //   .      *\n            //   ..    ..             C       B\n            //\n            // Grab the 3 bits from each of the sides the form the locator pattern and concatenate\n            // into a 12-bit integer.  Start with the bit at A\n            let cornerBits = 0;\n            sides.forEach((side, idx, arr) => {\n                // XX......X where X's are orientation marks\n                let t = ((side >> (length - 2)) << 1) + (side & 1);\n                cornerBits = (cornerBits << 3) + t;\n            });\n            // for (var side in sides) {\n            //     // XX......X where X's are orientation marks\n            //     var t = ((side >> (length - 2)) << 1) + (side & 1);\n            //     cornerBits = (cornerBits << 3) + t;\n            // }\n            // Mov the bottom bit to the top, so that the three bits of the locator pattern at A are\n            // together.  cornerBits is now:\n            //  3 orientation bits at A || 3 orientation bits at B || ... || 3 orientation bits at D\n            cornerBits = ((cornerBits & 1) << 11) + (cornerBits >> 1);\n            // The result shift indicates which element of BullsEyeCorners[] goes into the top-left\n            // corner. Since the four rotation values have a Hamming distance of 8, we\n            // can easily tolerate two errors.\n            for (let shift = 0; shift < 4; shift++) {\n                if (Integer.bitCount(cornerBits ^ this.EXPECTED_CORNER_BITS[shift]) <= 2) {\n                    return shift;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Corrects the parameter bits using Reed-Solomon algorithm.\n         *\n         * @param parameterData parameter bits\n         * @param compact true if this is a compact Aztec code\n         * @throws NotFoundException if the array contains too many errors\n         */\n        getCorrectedParameterData(parameterData, compact) {\n            let numCodewords;\n            let numDataCodewords;\n            if (compact) {\n                numCodewords = 7;\n                numDataCodewords = 2;\n            }\n            else {\n                numCodewords = 10;\n                numDataCodewords = 4;\n            }\n            let numECCodewords = numCodewords - numDataCodewords;\n            let parameterWords = new Int32Array(numCodewords);\n            for (let i = numCodewords - 1; i >= 0; --i) {\n                parameterWords[i] = parameterData & 0xF;\n                parameterData >>= 4;\n            }\n            try {\n                let rsDecoder = new ReedSolomonDecoder(GenericGF.AZTEC_PARAM);\n                rsDecoder.decode(parameterWords, numECCodewords);\n            }\n            catch (ignored) {\n                throw new NotFoundException();\n            }\n            // Toss the error correction.  Just return the data as an integer\n            let result = 0;\n            for (let i = 0; i < numDataCodewords; i++) {\n                result = (result << 4) + parameterWords[i];\n            }\n            return result;\n        }\n        /**\n         * Finds the corners of a bull-eye centered on the passed point.\n         * This returns the centers of the diagonal points just outside the bull's eye\n         * Returns [topRight, bottomRight, bottomLeft, topLeft]\n         *\n         * @param pCenter Center point\n         * @return The corners of the bull-eye\n         * @throws NotFoundException If no valid bull-eye can be found\n         */\n        getBullsEyeCorners(pCenter) {\n            let pina = pCenter;\n            let pinb = pCenter;\n            let pinc = pCenter;\n            let pind = pCenter;\n            let color = true;\n            for (this.nbCenterLayers = 1; this.nbCenterLayers < 9; this.nbCenterLayers++) {\n                let pouta = this.getFirstDifferent(pina, color, 1, -1);\n                let poutb = this.getFirstDifferent(pinb, color, 1, 1);\n                let poutc = this.getFirstDifferent(pinc, color, -1, 1);\n                let poutd = this.getFirstDifferent(pind, color, -1, -1);\n                // d      a\n                //\n                // c      b\n                if (this.nbCenterLayers > 2) {\n                    let q = (this.distancePoint(poutd, pouta) * this.nbCenterLayers) / (this.distancePoint(pind, pina) * (this.nbCenterLayers + 2));\n                    if (q < 0.75 || q > 1.25 || !this.isWhiteOrBlackRectangle(pouta, poutb, poutc, poutd)) {\n                        break;\n                    }\n                }\n                pina = pouta;\n                pinb = poutb;\n                pinc = poutc;\n                pind = poutd;\n                color = !color;\n            }\n            if (this.nbCenterLayers !== 5 && this.nbCenterLayers !== 7) {\n                throw new NotFoundException();\n            }\n            this.compact = this.nbCenterLayers === 5;\n            // Expand the square by .5 pixel in each direction so that we're on the border\n            // between the white square and the black square\n            let pinax = new ResultPoint(pina.getX() + 0.5, pina.getY() - 0.5);\n            let pinbx = new ResultPoint(pinb.getX() + 0.5, pinb.getY() + 0.5);\n            let pincx = new ResultPoint(pinc.getX() - 0.5, pinc.getY() + 0.5);\n            let pindx = new ResultPoint(pind.getX() - 0.5, pind.getY() - 0.5);\n            // Expand the square so that its corners are the centers of the points\n            // just outside the bull's eye.\n            return this.expandSquare([pinax, pinbx, pincx, pindx], 2 * this.nbCenterLayers - 3, 2 * this.nbCenterLayers);\n        }\n        /**\n         * Finds a candidate center point of an Aztec code from an image\n         *\n         * @return the center point\n         */\n        getMatrixCenter() {\n            let pointA;\n            let pointB;\n            let pointC;\n            let pointD;\n            // Get a white rectangle that can be the border of the matrix in center bull's eye or\n            try {\n                let cornerPoints = new WhiteRectangleDetector(this.image).detect();\n                pointA = cornerPoints[0];\n                pointB = cornerPoints[1];\n                pointC = cornerPoints[2];\n                pointD = cornerPoints[3];\n            }\n            catch (e) {\n                // This exception can be in case the initial rectangle is white\n                // In that case, surely in the bull's eye, we try to expand the rectangle.\n                let cx = this.image.getWidth() / 2;\n                let cy = this.image.getHeight() / 2;\n                pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n                pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n                pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n                pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n            }\n            // Compute the center of the rectangle\n            let cx = MathUtils.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n            let cy = MathUtils.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n            // Redetermine the white rectangle starting from previously computed center.\n            // This will ensure that we end up with a white rectangle in center bull's eye\n            // in order to compute a more accurate center.\n            try {\n                let cornerPoints = new WhiteRectangleDetector(this.image, 15, cx, cy).detect();\n                pointA = cornerPoints[0];\n                pointB = cornerPoints[1];\n                pointC = cornerPoints[2];\n                pointD = cornerPoints[3];\n            }\n            catch (e) {\n                // This exception can be in case the initial rectangle is white\n                // In that case we try to expand the rectangle.\n                pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n                pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n                pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n                pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n            }\n            // Recompute the center of the rectangle\n            cx = MathUtils.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n            cy = MathUtils.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n            return new Point(cx, cy);\n        }\n        /**\n         * Gets the Aztec code corners from the bull's eye corners and the parameters.\n         *\n         * @param bullsEyeCorners the array of bull's eye corners\n         * @return the array of aztec code corners\n         */\n        getMatrixCornerPoints(bullsEyeCorners) {\n            return this.expandSquare(bullsEyeCorners, 2 * this.nbCenterLayers, this.getDimension());\n        }\n        /**\n         * Creates a BitMatrix by sampling the provided image.\n         * topLeft, topRight, bottomRight, and bottomLeft are the centers of the squares on the\n         * diagonal just outside the bull's eye.\n         */\n        sampleGrid(image, topLeft, topRight, bottomRight, bottomLeft) {\n            let sampler = GridSamplerInstance.getInstance();\n            let dimension = this.getDimension();\n            let low = dimension / 2 - this.nbCenterLayers;\n            let high = dimension / 2 + this.nbCenterLayers;\n            return sampler.sampleGrid(image, dimension, dimension, low, low, // topleft\n            high, low, // topright\n            high, high, // bottomright\n            low, high, // bottomleft\n            topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n        }\n        /**\n         * Samples a line.\n         *\n         * @param p1   start point (inclusive)\n         * @param p2   end point (exclusive)\n         * @param size number of bits\n         * @return the array of bits as an int (first bit is high-order bit of result)\n         */\n        sampleLine(p1, p2, size) {\n            let result = 0;\n            let d = this.distanceResultPoint(p1, p2);\n            let moduleSize = d / size;\n            let px = p1.getX();\n            let py = p1.getY();\n            let dx = moduleSize * (p2.getX() - p1.getX()) / d;\n            let dy = moduleSize * (p2.getY() - p1.getY()) / d;\n            for (let i = 0; i < size; i++) {\n                if (this.image.get(MathUtils.round(px + i * dx), MathUtils.round(py + i * dy))) {\n                    result |= 1 << (size - i - 1);\n                }\n            }\n            return result;\n        }\n        /**\n         * @return true if the border of the rectangle passed in parameter is compound of white points only\n         *         or black points only\n         */\n        isWhiteOrBlackRectangle(p1, p2, p3, p4) {\n            let corr = 3;\n            p1 = new Point(p1.getX() - corr, p1.getY() + corr);\n            p2 = new Point(p2.getX() - corr, p2.getY() - corr);\n            p3 = new Point(p3.getX() + corr, p3.getY() - corr);\n            p4 = new Point(p4.getX() + corr, p4.getY() + corr);\n            let cInit = this.getColor(p4, p1);\n            if (cInit === 0) {\n                return false;\n            }\n            let c = this.getColor(p1, p2);\n            if (c !== cInit) {\n                return false;\n            }\n            c = this.getColor(p2, p3);\n            if (c !== cInit) {\n                return false;\n            }\n            c = this.getColor(p3, p4);\n            return c === cInit;\n        }\n        /**\n         * Gets the color of a segment\n         *\n         * @return 1 if segment more than 90% black, -1 if segment is more than 90% white, 0 else\n         */\n        getColor(p1, p2) {\n            let d = this.distancePoint(p1, p2);\n            let dx = (p2.getX() - p1.getX()) / d;\n            let dy = (p2.getY() - p1.getY()) / d;\n            let error = 0;\n            let px = p1.getX();\n            let py = p1.getY();\n            let colorModel = this.image.get(p1.getX(), p1.getY());\n            let iMax = Math.ceil(d);\n            for (let i = 0; i < iMax; i++) {\n                px += dx;\n                py += dy;\n                if (this.image.get(MathUtils.round(px), MathUtils.round(py)) !== colorModel) {\n                    error++;\n                }\n            }\n            let errRatio = error / d;\n            if (errRatio > 0.1 && errRatio < 0.9) {\n                return 0;\n            }\n            return (errRatio <= 0.1) === colorModel ? 1 : -1;\n        }\n        /**\n         * Gets the coordinate of the first point with a different color in the given direction\n         */\n        getFirstDifferent(init, color, dx, dy) {\n            let x = init.getX() + dx;\n            let y = init.getY() + dy;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                x += dx;\n                y += dy;\n            }\n            x -= dx;\n            y -= dy;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                x += dx;\n            }\n            x -= dx;\n            while (this.isValid(x, y) && this.image.get(x, y) === color) {\n                y += dy;\n            }\n            y -= dy;\n            return new Point(x, y);\n        }\n        /**\n         * Expand the square represented by the corner points by pushing out equally in all directions\n         *\n         * @param cornerPoints the corners of the square, which has the bull's eye at its center\n         * @param oldSide the original length of the side of the square in the target bit matrix\n         * @param newSide the new length of the size of the square in the target bit matrix\n         * @return the corners of the expanded square\n         */\n        expandSquare(cornerPoints, oldSide, newSide) {\n            let ratio = newSide / (2.0 * oldSide);\n            let dx = cornerPoints[0].getX() - cornerPoints[2].getX();\n            let dy = cornerPoints[0].getY() - cornerPoints[2].getY();\n            let centerx = (cornerPoints[0].getX() + cornerPoints[2].getX()) / 2.0;\n            let centery = (cornerPoints[0].getY() + cornerPoints[2].getY()) / 2.0;\n            let result0 = new ResultPoint(centerx + ratio * dx, centery + ratio * dy);\n            let result2 = new ResultPoint(centerx - ratio * dx, centery - ratio * dy);\n            dx = cornerPoints[1].getX() - cornerPoints[3].getX();\n            dy = cornerPoints[1].getY() - cornerPoints[3].getY();\n            centerx = (cornerPoints[1].getX() + cornerPoints[3].getX()) / 2.0;\n            centery = (cornerPoints[1].getY() + cornerPoints[3].getY()) / 2.0;\n            let result1 = new ResultPoint(centerx + ratio * dx, centery + ratio * dy);\n            let result3 = new ResultPoint(centerx - ratio * dx, centery - ratio * dy);\n            let results = [result0, result1, result2, result3];\n            return results;\n        }\n        isValid(x, y) {\n            return x >= 0 && x < this.image.getWidth() && y > 0 && y < this.image.getHeight();\n        }\n        isValidPoint(point) {\n            let x = MathUtils.round(point.getX());\n            let y = MathUtils.round(point.getY());\n            return this.isValid(x, y);\n        }\n        distancePoint(a, b) {\n            return MathUtils.distance(a.getX(), a.getY(), b.getX(), b.getY());\n        }\n        distanceResultPoint(a, b) {\n            return MathUtils.distance(a.getX(), a.getY(), b.getX(), b.getY());\n        }\n        getDimension() {\n            if (this.compact) {\n                return 4 * this.nbLayers + 11;\n            }\n            if (this.nbLayers <= 4) {\n                return 4 * this.nbLayers + 15;\n            }\n            return 4 * this.nbLayers + 2 * (Integer.truncDivision((this.nbLayers - 4), 8) + 1) + 15;\n        }\n    }\n\n    /*\n     * Copyright 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * This implementation can detect and decode Aztec codes in an image.\n     *\n     * @author David Olivier\n     */\n    class AztecReader {\n        /**\n         * Locates and decodes a Data Matrix code in an image.\n         *\n         * @return a String representing the content encoded by the Data Matrix code\n         * @throws NotFoundException if a Data Matrix code cannot be found\n         * @throws FormatException if a Data Matrix code cannot be decoded\n         */\n        decode(image, hints = null) {\n            let exception = null;\n            let detector = new Detector(image.getBlackMatrix());\n            let points = null;\n            let decoderResult = null;\n            try {\n                let detectorResult = detector.detectMirror(false);\n                points = detectorResult.getPoints();\n                this.reportFoundResultPoints(hints, points);\n                decoderResult = new Decoder().decode(detectorResult);\n            }\n            catch (e) {\n                exception = e;\n            }\n            if (decoderResult == null) {\n                try {\n                    let detectorResult = detector.detectMirror(true);\n                    points = detectorResult.getPoints();\n                    this.reportFoundResultPoints(hints, points);\n                    decoderResult = new Decoder().decode(detectorResult);\n                }\n                catch (e) {\n                    if (exception != null) {\n                        throw exception;\n                    }\n                    throw e;\n                }\n            }\n            let result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), decoderResult.getNumBits(), points, BarcodeFormat$1.AZTEC, System.currentTimeMillis());\n            let byteSegments = decoderResult.getByteSegments();\n            if (byteSegments != null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            let ecLevel = decoderResult.getECLevel();\n            if (ecLevel != null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            return result;\n        }\n        reportFoundResultPoints(hints, points) {\n            if (hints != null) {\n                let rpcb = hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                if (rpcb != null) {\n                    points.forEach((point, idx, arr) => {\n                        rpcb.foundPossibleResultPoint(point);\n                    });\n                }\n            }\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n    }\n\n    /**\n     * Aztec Code reader to use from browser.\n     *\n     * @class BrowserAztecCodeReader\n     * @extends {BrowserCodeReader}\n     */\n    class BrowserAztecCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserAztecCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         *\n         * @memberOf BrowserAztecCodeReader\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new AztecReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Encapsulates functionality and implementation that is common to all families\n     * of one-dimensional barcodes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     */\n    class OneDReader {\n        /*\n        @Override\n        public Result decode(BinaryBitmap image) throws NotFoundException, FormatException {\n          return decode(image, null);\n        }\n        */\n        // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n        // @Override\n        decode(image, hints) {\n            try {\n                return this.doDecode(image, hints);\n            }\n            catch (nfe) {\n                const tryHarder = hints && (hints.get(DecodeHintType$1.TRY_HARDER) === true);\n                if (tryHarder && image.isRotateSupported()) {\n                    const rotatedImage = image.rotateCounterClockwise();\n                    const result = this.doDecode(rotatedImage, hints);\n                    // Record that we found it rotated 90 degrees CCW / 270 degrees CW\n                    const metadata = result.getResultMetadata();\n                    let orientation = 270;\n                    if (metadata !== null && (metadata.get(ResultMetadataType$1.ORIENTATION) === true)) {\n                        // But if we found it reversed in doDecode(), add in that result here:\n                        orientation = (orientation + metadata.get(ResultMetadataType$1.ORIENTATION) % 360);\n                    }\n                    result.putMetadata(ResultMetadataType$1.ORIENTATION, orientation);\n                    // Update result points\n                    const points = result.getResultPoints();\n                    if (points !== null) {\n                        const height = rotatedImage.getHeight();\n                        for (let i = 0; i < points.length; i++) {\n                            points[i] = new ResultPoint(height - points[i].getY() - 1, points[i].getX());\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    throw new NotFoundException();\n                }\n            }\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n        /**\n         * We're going to examine rows from the middle outward, searching alternately above and below the\n         * middle, and farther out each time. rowStep is the number of rows between each successive\n         * attempt above and below the middle. So we'd scan row middle, then middle - rowStep, then\n         * middle + rowStep, then middle - (2 * rowStep), etc.\n         * rowStep is bigger as the image is taller, but is always at least 1. We've somewhat arbitrarily\n         * decided that moving up and down by about 1/16 of the image is pretty good; we try more of the\n         * image if \"trying harder\".\n         *\n         * @param image The image to decode\n         * @param hints Any hints that were requested\n         * @return The contents of the decoded barcode\n         * @throws NotFoundException Any spontaneous errors which occur\n         */\n        doDecode(image, hints) {\n            const width = image.getWidth();\n            const height = image.getHeight();\n            let row = new BitArray(width);\n            const tryHarder = hints && (hints.get(DecodeHintType$1.TRY_HARDER) === true);\n            const rowStep = Math.max(1, height >> (tryHarder ? 8 : 5));\n            let maxLines;\n            if (tryHarder) {\n                maxLines = height; // Look at the whole image, not just the center\n            }\n            else {\n                maxLines = 15; // 15 rows spaced 1/32 apart is roughly the middle half of the image\n            }\n            const middle = Math.trunc(height / 2);\n            for (let x = 0; x < maxLines; x++) {\n                // Scanning from the middle out. Determine which row we're looking at next:\n                const rowStepsAboveOrBelow = Math.trunc((x + 1) / 2);\n                const isAbove = (x & 0x01) === 0; // i.e. is x even?\n                const rowNumber = middle + rowStep * (isAbove ? rowStepsAboveOrBelow : -rowStepsAboveOrBelow);\n                if (rowNumber < 0 || rowNumber >= height) {\n                    // Oops, if we run off the top or bottom, stop\n                    break;\n                }\n                // Estimate black point for this row and load it:\n                try {\n                    row = image.getBlackRow(rowNumber, row);\n                }\n                catch (ignored) {\n                    continue;\n                }\n                // While we have the image data in a BitArray, it's fairly cheap to reverse it in place to\n                // handle decoding upside down barcodes.\n                for (let attempt = 0; attempt < 2; attempt++) {\n                    if (attempt === 1) { // trying again?\n                        row.reverse(); // reverse the row and continue\n                        // This means we will only ever draw result points *once* in the life of this method\n                        // since we want to avoid drawing the wrong points after flipping the row, and,\n                        // don't want to clutter with noise from every single row scan -- just the scans\n                        // that start on the center line.\n                        if (hints && (hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK) === true)) {\n                            const newHints = new Map();\n                            hints.forEach((hint, key) => newHints.set(key, hint));\n                            newHints.delete(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                            hints = newHints;\n                        }\n                    }\n                    try {\n                        // Look for a barcode\n                        const result = this.decodeRow(rowNumber, row, hints);\n                        // We found our barcode\n                        if (attempt === 1) {\n                            // But it was upside down, so note that\n                            result.putMetadata(ResultMetadataType$1.ORIENTATION, 180);\n                            // And remember to flip the result points horizontally.\n                            const points = result.getResultPoints();\n                            if (points !== null) {\n                                points[0] = new ResultPoint(width - points[0].getX() - 1, points[0].getY());\n                                points[1] = new ResultPoint(width - points[1].getX() - 1, points[1].getY());\n                            }\n                        }\n                        return result;\n                    }\n                    catch (re) {\n                        // continue -- just couldn't decode this row\n                    }\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Records the size of successive runs of white and black pixels in a row, starting at a given point.\n         * The values are recorded in the given array, and the number of runs recorded is equal to the size\n         * of the array. If the row starts on a white pixel at the given start point, then the first count\n         * recorded is the run of white pixels starting from that point; likewise it is the count of a run\n         * of black pixels if the row begin on a black pixels at that point.\n         *\n         * @param row row to count from\n         * @param start offset into row to start at\n         * @param counters array into which to record counts\n         * @throws NotFoundException if counters cannot be filled entirely from row before running out\n         *  of pixels\n         */\n        static recordPattern(row, start, counters) {\n            const numCounters = counters.length;\n            for (let index = 0; index < numCounters; index++)\n                counters[index] = 0;\n            const end = row.getSize();\n            if (start >= end) {\n                throw new NotFoundException();\n            }\n            let isWhite = !row.get(start);\n            let counterPosition = 0;\n            let i = start;\n            while (i < end) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (++counterPosition === numCounters) {\n                        break;\n                    }\n                    else {\n                        counters[counterPosition] = 1;\n                        isWhite = !isWhite;\n                    }\n                }\n                i++;\n            }\n            // If we read fully the last section of pixels and filled up our counters -- or filled\n            // the last counter but ran off the side of the image, OK. Otherwise, a problem.\n            if (!(counterPosition === numCounters || (counterPosition === numCounters - 1 && i === end))) {\n                throw new NotFoundException();\n            }\n        }\n        static recordPatternInReverse(row, start, counters) {\n            // This could be more efficient I guess\n            let numTransitionsLeft = counters.length;\n            let last = row.get(start);\n            while (start > 0 && numTransitionsLeft >= 0) {\n                if (row.get(--start) !== last) {\n                    numTransitionsLeft--;\n                    last = !last;\n                }\n            }\n            if (numTransitionsLeft >= 0) {\n                throw new NotFoundException();\n            }\n            OneDReader.recordPattern(row, start + 1, counters);\n        }\n        /**\n         * Determines how closely a set of observed counts of runs of black/white values matches a given\n         * target pattern. This is reported as the ratio of the total variance from the expected pattern\n         * proportions across all pattern elements, to the length of the pattern.\n         *\n         * @param counters observed counters\n         * @param pattern expected pattern\n         * @param maxIndividualVariance The most any counter can differ before we give up\n         * @return ratio of total variance between counters and pattern compared to total pattern size\n         */\n        static patternMatchVariance(counters, pattern, maxIndividualVariance) {\n            const numCounters = counters.length;\n            let total = 0;\n            let patternLength = 0;\n            for (let i = 0; i < numCounters; i++) {\n                total += counters[i];\n                patternLength += pattern[i];\n            }\n            if (total < patternLength) {\n                // If we don't even have one pixel per unit of bar width, assume this is too small\n                // to reliably match, so fail:\n                return Number.POSITIVE_INFINITY;\n            }\n            const unitBarWidth = total / patternLength;\n            maxIndividualVariance *= unitBarWidth;\n            let totalVariance = 0.0;\n            for (let x = 0; x < numCounters; x++) {\n                const counter = counters[x];\n                const scaledPattern = pattern[x] * unitBarWidth;\n                const variance = counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;\n                if (variance > maxIndividualVariance) {\n                    return Number.POSITIVE_INFINITY;\n                }\n                totalVariance += variance;\n            }\n            return totalVariance / total;\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Decodes Code 128 barcodes.</p>\n     *\n     * @author Sean Owen\n     */\n    class Code128Reader extends OneDReader {\n        static findStartPattern(row) {\n            const width = row.getSize();\n            const rowOffset = row.getNextSet(0);\n            let counterPosition = 0;\n            let counters = Int32Array.from([0, 0, 0, 0, 0, 0]);\n            let patternStart = rowOffset;\n            let isWhite = false;\n            const patternLength = 6;\n            for (let i = rowOffset; i < width; i++) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === (patternLength - 1)) {\n                        let bestVariance = Code128Reader.MAX_AVG_VARIANCE;\n                        let bestMatch = -1;\n                        for (let startCode = Code128Reader.CODE_START_A; startCode <= Code128Reader.CODE_START_C; startCode++) {\n                            const variance = OneDReader.patternMatchVariance(counters, Code128Reader.CODE_PATTERNS[startCode], Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n                            if (variance < bestVariance) {\n                                bestVariance = variance;\n                                bestMatch = startCode;\n                            }\n                        }\n                        // Look for whitespace before start pattern, >= 50% of width of start pattern\n                        if (bestMatch >= 0 &&\n                            row.isRange(Math.max(0, patternStart - (i - patternStart) / 2), patternStart, false)) {\n                            return Int32Array.from([patternStart, i, bestMatch]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters = counters.slice(2, counters.length - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static decodeCode(row, counters, rowOffset) {\n            OneDReader.recordPattern(row, rowOffset, counters);\n            let bestVariance = Code128Reader.MAX_AVG_VARIANCE; // worst variance we'll accept\n            let bestMatch = -1;\n            for (let d = 0; d < Code128Reader.CODE_PATTERNS.length; d++) {\n                const pattern = Code128Reader.CODE_PATTERNS[d];\n                const variance = this.patternMatchVariance(counters, pattern, Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = d;\n                }\n            }\n            // TODO We're overlooking the fact that the STOP pattern has 7 values, not 6.\n            if (bestMatch >= 0) {\n                return bestMatch;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        decodeRow(rowNumber, row, hints) {\n            const convertFNC1 = hints && (hints.get(DecodeHintType$1.ASSUME_GS1) === true);\n            const startPatternInfo = Code128Reader.findStartPattern(row);\n            const startCode = startPatternInfo[2];\n            let currentRawCodesIndex = 0;\n            const rawCodes = new Uint8Array(20);\n            rawCodes[currentRawCodesIndex++] = startCode;\n            let codeSet;\n            switch (startCode) {\n                case Code128Reader.CODE_START_A:\n                    codeSet = Code128Reader.CODE_CODE_A;\n                    break;\n                case Code128Reader.CODE_START_B:\n                    codeSet = Code128Reader.CODE_CODE_B;\n                    break;\n                case Code128Reader.CODE_START_C:\n                    codeSet = Code128Reader.CODE_CODE_C;\n                    break;\n                default:\n                    throw new FormatException();\n            }\n            let done = false;\n            let isNextShifted = false;\n            let result = '';\n            let lastStart = startPatternInfo[0];\n            let nextStart = startPatternInfo[1];\n            const counters = Int32Array.from([0, 0, 0, 0, 0, 0]);\n            let lastCode = 0;\n            let code = 0;\n            let checksumTotal = startCode;\n            let multiplier = 0;\n            let lastCharacterWasPrintable = true;\n            let upperMode = false;\n            let shiftUpperMode = false;\n            while (!done) {\n                const unshift = isNextShifted;\n                isNextShifted = false;\n                // Save off last code\n                lastCode = code;\n                // Decode another code from image\n                code = Code128Reader.decodeCode(row, counters, nextStart);\n                rawCodes[currentRawCodesIndex++] = code;\n                // Remember whether the last code was printable or not (excluding CODE_STOP)\n                if (code !== Code128Reader.CODE_STOP) {\n                    lastCharacterWasPrintable = true;\n                }\n                // Add to checksum computation (if not CODE_STOP of course)\n                if (code !== Code128Reader.CODE_STOP) {\n                    multiplier++;\n                    checksumTotal += multiplier * code;\n                }\n                // Advance to where the next code will to start\n                lastStart = nextStart;\n                nextStart += counters.reduce((previous, current) => previous + current, 0);\n                // Take care of illegal start codes\n                switch (code) {\n                    case Code128Reader.CODE_START_A:\n                    case Code128Reader.CODE_START_B:\n                    case Code128Reader.CODE_START_C:\n                        throw new FormatException();\n                }\n                switch (codeSet) {\n                    case Code128Reader.CODE_CODE_A:\n                        if (code < 64) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code));\n                            }\n                            else {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code + 128));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else if (code < 96) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((code - 64));\n                            }\n                            else {\n                                result += String.fromCharCode((code + 64));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else {\n                            // Don't let CODE_STOP, which always appears, affect whether whether we think the last\n                            // code was printable or not.\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_FNC_2:\n                                case Code128Reader.CODE_FNC_3:\n                                    // do nothing?\n                                    break;\n                                case Code128Reader.CODE_FNC_4_A:\n                                    if (!upperMode && shiftUpperMode) {\n                                        upperMode = true;\n                                        shiftUpperMode = false;\n                                    }\n                                    else if (upperMode && shiftUpperMode) {\n                                        upperMode = false;\n                                        shiftUpperMode = false;\n                                    }\n                                    else {\n                                        shiftUpperMode = true;\n                                    }\n                                    break;\n                                case Code128Reader.CODE_SHIFT:\n                                    isNextShifted = true;\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_CODE_B:\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_CODE_C:\n                                    codeSet = Code128Reader.CODE_CODE_C;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Code128Reader.CODE_CODE_B:\n                        if (code < 96) {\n                            if (shiftUpperMode === upperMode) {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code));\n                            }\n                            else {\n                                result += String.fromCharCode((' '.charCodeAt(0) + code + 128));\n                            }\n                            shiftUpperMode = false;\n                        }\n                        else {\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_FNC_2:\n                                case Code128Reader.CODE_FNC_3:\n                                    // do nothing?\n                                    break;\n                                case Code128Reader.CODE_FNC_4_B:\n                                    if (!upperMode && shiftUpperMode) {\n                                        upperMode = true;\n                                        shiftUpperMode = false;\n                                    }\n                                    else if (upperMode && shiftUpperMode) {\n                                        upperMode = false;\n                                        shiftUpperMode = false;\n                                    }\n                                    else {\n                                        shiftUpperMode = true;\n                                    }\n                                    break;\n                                case Code128Reader.CODE_SHIFT:\n                                    isNextShifted = true;\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_A:\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_C:\n                                    codeSet = Code128Reader.CODE_CODE_C;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Code128Reader.CODE_CODE_C:\n                        if (code < 100) {\n                            if (code < 10) {\n                                result += '0';\n                            }\n                            result += code;\n                        }\n                        else {\n                            if (code !== Code128Reader.CODE_STOP) {\n                                lastCharacterWasPrintable = false;\n                            }\n                            switch (code) {\n                                case Code128Reader.CODE_FNC_1:\n                                    if (convertFNC1) {\n                                        if (result.length === 0) {\n                                            // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                                            // is FNC1 then this is GS1-128. We add the symbology identifier.\n                                            result += ']C1';\n                                        }\n                                        else {\n                                            // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                                            result += String.fromCharCode(29);\n                                        }\n                                    }\n                                    break;\n                                case Code128Reader.CODE_CODE_A:\n                                    codeSet = Code128Reader.CODE_CODE_A;\n                                    break;\n                                case Code128Reader.CODE_CODE_B:\n                                    codeSet = Code128Reader.CODE_CODE_B;\n                                    break;\n                                case Code128Reader.CODE_STOP:\n                                    done = true;\n                                    break;\n                            }\n                        }\n                        break;\n                }\n                // Unshift back to another code set if we were shifted\n                if (unshift) {\n                    codeSet = codeSet === Code128Reader.CODE_CODE_A ? Code128Reader.CODE_CODE_B : Code128Reader.CODE_CODE_A;\n                }\n            }\n            const lastPatternSize = nextStart - lastStart;\n            // Check for ample whitespace following pattern, but, to do this we first need to remember that\n            // we fudged decoding CODE_STOP since it actually has 7 bars, not 6. There is a black bar left\n            // to read off. Would be slightly better to properly read. Here we just skip it:\n            nextStart = row.getNextUnset(nextStart);\n            if (!row.isRange(nextStart, Math.min(row.getSize(), nextStart + (nextStart - lastStart) / 2), false)) {\n                throw new NotFoundException();\n            }\n            // Pull out from sum the value of the penultimate check code\n            checksumTotal -= multiplier * lastCode;\n            // lastCode is the checksum then:\n            if (checksumTotal % 103 !== lastCode) {\n                throw new ChecksumException();\n            }\n            // Need to pull out the check digits from string\n            const resultLength = result.length;\n            if (resultLength === 0) {\n                // false positive\n                throw new NotFoundException();\n            }\n            // Only bother if the result had at least one character, and if the checksum digit happened to\n            // be a printable character. If it was just interpreted as a control code, nothing to remove.\n            if (resultLength > 0 && lastCharacterWasPrintable) {\n                if (codeSet === Code128Reader.CODE_CODE_C) {\n                    result = result.substring(0, resultLength - 2);\n                }\n                else {\n                    result = result.substring(0, resultLength - 1);\n                }\n            }\n            const left = (startPatternInfo[1] + startPatternInfo[0]) / 2.0;\n            const right = lastStart + lastPatternSize / 2.0;\n            const rawCodesSize = rawCodes.length;\n            const rawBytes = new Uint8Array(rawCodesSize);\n            for (let i = 0; i < rawCodesSize; i++) {\n                rawBytes[i] = rawCodes[i];\n            }\n            const points = [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)];\n            return new Result(result, rawBytes, 0, points, BarcodeFormat$1.CODE_128, new Date().getTime());\n        }\n    }\n    Code128Reader.CODE_PATTERNS = [\n        Int32Array.from([2, 1, 2, 2, 2, 2]),\n        Int32Array.from([2, 2, 2, 1, 2, 2]),\n        Int32Array.from([2, 2, 2, 2, 2, 1]),\n        Int32Array.from([1, 2, 1, 2, 2, 3]),\n        Int32Array.from([1, 2, 1, 3, 2, 2]),\n        Int32Array.from([1, 3, 1, 2, 2, 2]),\n        Int32Array.from([1, 2, 2, 2, 1, 3]),\n        Int32Array.from([1, 2, 2, 3, 1, 2]),\n        Int32Array.from([1, 3, 2, 2, 1, 2]),\n        Int32Array.from([2, 2, 1, 2, 1, 3]),\n        Int32Array.from([2, 2, 1, 3, 1, 2]),\n        Int32Array.from([2, 3, 1, 2, 1, 2]),\n        Int32Array.from([1, 1, 2, 2, 3, 2]),\n        Int32Array.from([1, 2, 2, 1, 3, 2]),\n        Int32Array.from([1, 2, 2, 2, 3, 1]),\n        Int32Array.from([1, 1, 3, 2, 2, 2]),\n        Int32Array.from([1, 2, 3, 1, 2, 2]),\n        Int32Array.from([1, 2, 3, 2, 2, 1]),\n        Int32Array.from([2, 2, 3, 2, 1, 1]),\n        Int32Array.from([2, 2, 1, 1, 3, 2]),\n        Int32Array.from([2, 2, 1, 2, 3, 1]),\n        Int32Array.from([2, 1, 3, 2, 1, 2]),\n        Int32Array.from([2, 2, 3, 1, 1, 2]),\n        Int32Array.from([3, 1, 2, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 2, 2, 2]),\n        Int32Array.from([3, 2, 1, 1, 2, 2]),\n        Int32Array.from([3, 2, 1, 2, 2, 1]),\n        Int32Array.from([3, 1, 2, 2, 1, 2]),\n        Int32Array.from([3, 2, 2, 1, 1, 2]),\n        Int32Array.from([3, 2, 2, 2, 1, 1]),\n        Int32Array.from([2, 1, 2, 1, 2, 3]),\n        Int32Array.from([2, 1, 2, 3, 2, 1]),\n        Int32Array.from([2, 3, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 1, 3, 2, 3]),\n        Int32Array.from([1, 3, 1, 1, 2, 3]),\n        Int32Array.from([1, 3, 1, 3, 2, 1]),\n        Int32Array.from([1, 1, 2, 3, 1, 3]),\n        Int32Array.from([1, 3, 2, 1, 1, 3]),\n        Int32Array.from([1, 3, 2, 3, 1, 1]),\n        Int32Array.from([2, 1, 1, 3, 1, 3]),\n        Int32Array.from([2, 3, 1, 1, 1, 3]),\n        Int32Array.from([2, 3, 1, 3, 1, 1]),\n        Int32Array.from([1, 1, 2, 1, 3, 3]),\n        Int32Array.from([1, 1, 2, 3, 3, 1]),\n        Int32Array.from([1, 3, 2, 1, 3, 1]),\n        Int32Array.from([1, 1, 3, 1, 2, 3]),\n        Int32Array.from([1, 1, 3, 3, 2, 1]),\n        Int32Array.from([1, 3, 3, 1, 2, 1]),\n        Int32Array.from([3, 1, 3, 1, 2, 1]),\n        Int32Array.from([2, 1, 1, 3, 3, 1]),\n        Int32Array.from([2, 3, 1, 1, 3, 1]),\n        Int32Array.from([2, 1, 3, 1, 1, 3]),\n        Int32Array.from([2, 1, 3, 3, 1, 1]),\n        Int32Array.from([2, 1, 3, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 2, 3]),\n        Int32Array.from([3, 1, 1, 3, 2, 1]),\n        Int32Array.from([3, 3, 1, 1, 2, 1]),\n        Int32Array.from([3, 1, 2, 1, 1, 3]),\n        Int32Array.from([3, 1, 2, 3, 1, 1]),\n        Int32Array.from([3, 3, 2, 1, 1, 1]),\n        Int32Array.from([3, 1, 4, 1, 1, 1]),\n        Int32Array.from([2, 2, 1, 4, 1, 1]),\n        Int32Array.from([4, 3, 1, 1, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 2, 4]),\n        Int32Array.from([1, 1, 1, 4, 2, 2]),\n        Int32Array.from([1, 2, 1, 1, 2, 4]),\n        Int32Array.from([1, 2, 1, 4, 2, 1]),\n        Int32Array.from([1, 4, 1, 1, 2, 2]),\n        Int32Array.from([1, 4, 1, 2, 2, 1]),\n        Int32Array.from([1, 1, 2, 2, 1, 4]),\n        Int32Array.from([1, 1, 2, 4, 1, 2]),\n        Int32Array.from([1, 2, 2, 1, 1, 4]),\n        Int32Array.from([1, 2, 2, 4, 1, 1]),\n        Int32Array.from([1, 4, 2, 1, 1, 2]),\n        Int32Array.from([1, 4, 2, 2, 1, 1]),\n        Int32Array.from([2, 4, 1, 2, 1, 1]),\n        Int32Array.from([2, 2, 1, 1, 1, 4]),\n        Int32Array.from([4, 1, 3, 1, 1, 1]),\n        Int32Array.from([2, 4, 1, 1, 1, 2]),\n        Int32Array.from([1, 3, 4, 1, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 4, 2]),\n        Int32Array.from([1, 2, 1, 1, 4, 2]),\n        Int32Array.from([1, 2, 1, 2, 4, 1]),\n        Int32Array.from([1, 1, 4, 2, 1, 2]),\n        Int32Array.from([1, 2, 4, 1, 1, 2]),\n        Int32Array.from([1, 2, 4, 2, 1, 1]),\n        Int32Array.from([4, 1, 1, 2, 1, 2]),\n        Int32Array.from([4, 2, 1, 1, 1, 2]),\n        Int32Array.from([4, 2, 1, 2, 1, 1]),\n        Int32Array.from([2, 1, 2, 1, 4, 1]),\n        Int32Array.from([2, 1, 4, 1, 2, 1]),\n        Int32Array.from([4, 1, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 1, 1, 4, 3]),\n        Int32Array.from([1, 1, 1, 3, 4, 1]),\n        Int32Array.from([1, 3, 1, 1, 4, 1]),\n        Int32Array.from([1, 1, 4, 1, 1, 3]),\n        Int32Array.from([1, 1, 4, 3, 1, 1]),\n        Int32Array.from([4, 1, 1, 1, 1, 3]),\n        Int32Array.from([4, 1, 1, 3, 1, 1]),\n        Int32Array.from([1, 1, 3, 1, 4, 1]),\n        Int32Array.from([1, 1, 4, 1, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 4, 1]),\n        Int32Array.from([4, 1, 1, 1, 3, 1]),\n        Int32Array.from([2, 1, 1, 4, 1, 2]),\n        Int32Array.from([2, 1, 1, 2, 1, 4]),\n        Int32Array.from([2, 1, 1, 2, 3, 2]),\n        Int32Array.from([2, 3, 3, 1, 1, 1, 2]),\n    ];\n    Code128Reader.MAX_AVG_VARIANCE = 0.25;\n    Code128Reader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n    Code128Reader.CODE_SHIFT = 98;\n    Code128Reader.CODE_CODE_C = 99;\n    Code128Reader.CODE_CODE_B = 100;\n    Code128Reader.CODE_CODE_A = 101;\n    Code128Reader.CODE_FNC_1 = 102;\n    Code128Reader.CODE_FNC_2 = 97;\n    Code128Reader.CODE_FNC_3 = 96;\n    Code128Reader.CODE_FNC_4_A = 101;\n    Code128Reader.CODE_FNC_4_B = 100;\n    Code128Reader.CODE_START_A = 103;\n    Code128Reader.CODE_START_B = 104;\n    Code128Reader.CODE_START_C = 105;\n    Code128Reader.CODE_STOP = 106;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Decodes Code 39 barcodes. Supports \"Full ASCII Code 39\" if USE_CODE_39_EXTENDED_MODE is set.</p>\n     *\n     * @author Sean Owen\n     * @see Code93Reader\n     */\n    class Code39Reader extends OneDReader {\n        /**\n         * Creates a reader that assumes all encoded data is data, and does not treat the final\n         * character as a check digit. It will not decoded \"extended Code 39\" sequences.\n         */\n        // public Code39Reader() {\n        //   this(false);\n        // }\n        /**\n         * Creates a reader that can be configured to check the last character as a check digit.\n         * It will not decoded \"extended Code 39\" sequences.\n         *\n         * @param usingCheckDigit if true, treat the last data character as a check digit, not\n         * data, and verify that the checksum passes.\n         */\n        // public Code39Reader(boolean usingCheckDigit) {\n        //   this(usingCheckDigit, false);\n        // }\n        /**\n         * Creates a reader that can be configured to check the last character as a check digit,\n         * or optionally attempt to decode \"extended Code 39\" sequences that are used to encode\n         * the full ASCII character set.\n         *\n         * @param usingCheckDigit if true, treat the last data character as a check digit, not\n         * data, and verify that the checksum passes.\n         * @param extendedMode if true, will attempt to decode extended Code 39 sequences in the\n         * text.\n         */\n        constructor(usingCheckDigit = false, extendedMode = false) {\n            super();\n            this.usingCheckDigit = usingCheckDigit;\n            this.extendedMode = extendedMode;\n            this.decodeRowResult = '';\n            this.counters = new Int32Array(9);\n        }\n        decodeRow(rowNumber, row, hints) {\n            let theCounters = this.counters;\n            theCounters.fill(0);\n            this.decodeRowResult = '';\n            let start = Code39Reader.findAsteriskPattern(row, theCounters);\n            // Read off white space\n            let nextStart = row.getNextSet(start[1]);\n            let end = row.getSize();\n            let decodedChar;\n            let lastStart;\n            do {\n                Code39Reader.recordPattern(row, nextStart, theCounters);\n                let pattern = Code39Reader.toNarrowWidePattern(theCounters);\n                if (pattern < 0) {\n                    throw new NotFoundException();\n                }\n                decodedChar = Code39Reader.patternToChar(pattern);\n                this.decodeRowResult += decodedChar;\n                lastStart = nextStart;\n                for (let counter of theCounters) {\n                    nextStart += counter;\n                }\n                // Read off white space\n                nextStart = row.getNextSet(nextStart);\n            } while (decodedChar !== '*');\n            this.decodeRowResult = this.decodeRowResult.substring(0, this.decodeRowResult.length - 1); // remove asterisk\n            // Look for whitespace after pattern:\n            let lastPatternSize = 0;\n            for (let counter of theCounters) {\n                lastPatternSize += counter;\n            }\n            let whiteSpaceAfterEnd = nextStart - lastStart - lastPatternSize;\n            // If 50% of last pattern size, following last pattern, is not whitespace, fail\n            // (but if it's whitespace to the very end of the image, that's OK)\n            if (nextStart !== end && (whiteSpaceAfterEnd * 2) < lastPatternSize) {\n                throw new NotFoundException();\n            }\n            if (this.usingCheckDigit) {\n                let max = this.decodeRowResult.length - 1;\n                let total = 0;\n                for (let i = 0; i < max; i++) {\n                    total += Code39Reader.ALPHABET_STRING.indexOf(this.decodeRowResult.charAt(i));\n                }\n                if (this.decodeRowResult.charAt(max) !== Code39Reader.ALPHABET_STRING.charAt(total % 43)) {\n                    throw new ChecksumException();\n                }\n                this.decodeRowResult = this.decodeRowResult.substring(0, max);\n            }\n            if (this.decodeRowResult.length === 0) {\n                // false positive\n                throw new NotFoundException();\n            }\n            let resultString;\n            if (this.extendedMode) {\n                resultString = Code39Reader.decodeExtended(this.decodeRowResult);\n            }\n            else {\n                resultString = this.decodeRowResult;\n            }\n            let left = (start[1] + start[0]) / 2.0;\n            let right = lastStart + lastPatternSize / 2.0;\n            return new Result(resultString, null, 0, [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)], BarcodeFormat$1.CODE_39, new Date().getTime());\n        }\n        static findAsteriskPattern(row, counters) {\n            let width = row.getSize();\n            let rowOffset = row.getNextSet(0);\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            let isWhite = false;\n            let patternLength = counters.length;\n            for (let i = rowOffset; i < width; i++) {\n                if (row.get(i) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        // Look for whitespace before start pattern, >= 50% of width of start pattern\n                        if (this.toNarrowWidePattern(counters) === Code39Reader.ASTERISK_ENCODING &&\n                            row.isRange(Math.max(0, patternStart - Math.floor((i - patternStart) / 2)), patternStart, false)) {\n                            return [patternStart, i];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters.copyWithin(0, 2, 2 + counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        // For efficiency, returns -1 on failure. Not throwing here saved as many as 700 exceptions\n        // per image when using some of our blackbox images.\n        static toNarrowWidePattern(counters) {\n            let numCounters = counters.length;\n            let maxNarrowCounter = 0;\n            let wideCounters;\n            do {\n                let minCounter = 0x7fffffff;\n                for (let counter of counters) {\n                    if (counter < minCounter && counter > maxNarrowCounter) {\n                        minCounter = counter;\n                    }\n                }\n                maxNarrowCounter = minCounter;\n                wideCounters = 0;\n                let totalWideCountersWidth = 0;\n                let pattern = 0;\n                for (let i = 0; i < numCounters; i++) {\n                    let counter = counters[i];\n                    if (counter > maxNarrowCounter) {\n                        pattern |= 1 << (numCounters - 1 - i);\n                        wideCounters++;\n                        totalWideCountersWidth += counter;\n                    }\n                }\n                if (wideCounters === 3) {\n                    // Found 3 wide counters, but are they close enough in width?\n                    // We can perform a cheap, conservative check to see if any individual\n                    // counter is more than 1.5 times the average:\n                    for (let i = 0; i < numCounters && wideCounters > 0; i++) {\n                        let counter = counters[i];\n                        if (counter > maxNarrowCounter) {\n                            wideCounters--;\n                            // totalWideCountersWidth = 3 * average, so this checks if counter >= 3/2 * average\n                            if ((counter * 2) >= totalWideCountersWidth) {\n                                return -1;\n                            }\n                        }\n                    }\n                    return pattern;\n                }\n            } while (wideCounters > 3);\n            return -1;\n        }\n        static patternToChar(pattern) {\n            for (let i = 0; i < Code39Reader.CHARACTER_ENCODINGS.length; i++) {\n                if (Code39Reader.CHARACTER_ENCODINGS[i] === pattern) {\n                    return Code39Reader.ALPHABET_STRING.charAt(i);\n                }\n            }\n            if (pattern === Code39Reader.ASTERISK_ENCODING) {\n                return '*';\n            }\n            throw new NotFoundException();\n        }\n        static decodeExtended(encoded) {\n            let length = encoded.length;\n            let decoded = '';\n            for (let i = 0; i < length; i++) {\n                let c = encoded.charAt(i);\n                if (c === '+' || c === '$' || c === '%' || c === '/') {\n                    let next = encoded.charAt(i + 1);\n                    let decodedChar = '\\0';\n                    switch (c) {\n                        case '+':\n                            // +A to +Z map to a to z\n                            if (next >= 'A' && next <= 'Z') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 32);\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '$':\n                            // $A to $Z map to control codes SH to SB\n                            if (next >= 'A' && next <= 'Z') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 64);\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '%':\n                            // %A to %E map to control codes ESC to US\n                            if (next >= 'A' && next <= 'E') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 38);\n                            }\n                            else if (next >= 'F' && next <= 'J') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 11);\n                            }\n                            else if (next >= 'K' && next <= 'O') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 16);\n                            }\n                            else if (next >= 'P' && next <= 'T') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) + 43);\n                            }\n                            else if (next === 'U') {\n                                decodedChar = '\\0';\n                            }\n                            else if (next === 'V') {\n                                decodedChar = '@';\n                            }\n                            else if (next === 'W') {\n                                decodedChar = '`';\n                            }\n                            else if (next === 'X' || next === 'Y' || next === 'Z') {\n                                decodedChar = '\\x7f';\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case '/':\n                            // /A to /O map to ! to , and /Z maps to :\n                            if (next >= 'A' && next <= 'O') {\n                                decodedChar = String.fromCharCode(next.charCodeAt(0) - 32);\n                            }\n                            else if (next === 'Z') {\n                                decodedChar = ':';\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                    decoded += decodedChar;\n                    // bump up i again since we read two characters\n                    i++;\n                }\n                else {\n                    decoded += c;\n                }\n            }\n            return decoded;\n        }\n    }\n    Code39Reader.ALPHABET_STRING = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%';\n    /**\n     * These represent the encodings of characters, as patterns of wide and narrow bars.\n     * The 9 least-significant bits of each int correspond to the pattern of wide and narrow,\n     * with 1s representing \"wide\" and 0s representing narrow.\n     */\n    Code39Reader.CHARACTER_ENCODINGS = [\n        0x034, 0x121, 0x061, 0x160, 0x031, 0x130, 0x070, 0x025, 0x124, 0x064,\n        0x109, 0x049, 0x148, 0x019, 0x118, 0x058, 0x00D, 0x10C, 0x04C, 0x01C,\n        0x103, 0x043, 0x142, 0x013, 0x112, 0x052, 0x007, 0x106, 0x046, 0x016,\n        0x181, 0x0C1, 0x1C0, 0x091, 0x190, 0x0D0, 0x085, 0x184, 0x0C4, 0x0A8,\n        0x0A2, 0x08A, 0x02A // /-%\n    ];\n    Code39Reader.ASTERISK_ENCODING = 0x094;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Decodes ITF barcodes.</p>\n     *\n     * @author Tjieco\n     */\n    class ITFReader extends OneDReader {\n        constructor() {\n            // private static W = 3; // Pixel width of a 3x wide line\n            // private static w = 2; // Pixel width of a 2x wide line\n            // private static N = 1; // Pixed width of a narrow line\n            super(...arguments);\n            // Stores the actual narrow line width of the image being decoded.\n            this.narrowLineWidth = -1;\n        }\n        // See ITFWriter.PATTERNS\n        /*\n      \n        /!**\n         * Patterns of Wide / Narrow lines to indicate each digit\n         *!/\n        */\n        decodeRow(rowNumber, row, hints) {\n            // Find out where the Middle section (payload) starts & ends\n            let startRange = this.decodeStart(row);\n            let endRange = this.decodeEnd(row);\n            let result = new StringBuilder();\n            ITFReader.decodeMiddle(row, startRange[1], endRange[0], result);\n            let resultString = result.toString();\n            let allowedLengths = null;\n            if (hints != null) {\n                allowedLengths = hints.get(DecodeHintType$1.ALLOWED_LENGTHS);\n            }\n            if (allowedLengths == null) {\n                allowedLengths = ITFReader.DEFAULT_ALLOWED_LENGTHS;\n            }\n            // To avoid false positives with 2D barcodes (and other patterns), make\n            // an assumption that the decoded string must be a 'standard' length if it's short\n            let length = resultString.length;\n            let lengthOK = false;\n            let maxAllowedLength = 0;\n            for (let value of allowedLengths) {\n                if (length === value) {\n                    lengthOK = true;\n                    break;\n                }\n                if (value > maxAllowedLength) {\n                    maxAllowedLength = value;\n                }\n            }\n            if (!lengthOK && length > maxAllowedLength) {\n                lengthOK = true;\n            }\n            if (!lengthOK) {\n                throw new FormatException();\n            }\n            const points = [new ResultPoint(startRange[1], rowNumber), new ResultPoint(endRange[0], rowNumber)];\n            let resultReturn = new Result(resultString, null, // no natural byte representation for these barcodes\n            0, points, BarcodeFormat$1.ITF, new Date().getTime());\n            return resultReturn;\n        }\n        /*\n        /!**\n         * @param row          row of black/white values to search\n         * @param payloadStart offset of start pattern\n         * @param resultString {@link StringBuilder} to append decoded chars to\n         * @throws NotFoundException if decoding could not complete successfully\n         *!/*/\n        static decodeMiddle(row, payloadStart, payloadEnd, resultString) {\n            // Digits are interleaved in pairs - 5 black lines for one digit, and the\n            // 5\n            // interleaved white lines for the second digit.\n            // Therefore, need to scan 10 lines and then\n            // split these into two arrays\n            let counterDigitPair = new Int32Array(10); // 10\n            let counterBlack = new Int32Array(5); // 5\n            let counterWhite = new Int32Array(5); // 5\n            counterDigitPair.fill(0);\n            counterBlack.fill(0);\n            counterWhite.fill(0);\n            while (payloadStart < payloadEnd) {\n                // Get 10 runs of black/white.\n                OneDReader.recordPattern(row, payloadStart, counterDigitPair);\n                // Split them into each array\n                for (let k = 0; k < 5; k++) {\n                    let twoK = 2 * k;\n                    counterBlack[k] = counterDigitPair[twoK];\n                    counterWhite[k] = counterDigitPair[twoK + 1];\n                }\n                let bestMatch = ITFReader.decodeDigit(counterBlack);\n                resultString.append(bestMatch.toString());\n                bestMatch = this.decodeDigit(counterWhite);\n                resultString.append(bestMatch.toString());\n                counterDigitPair.forEach(function (counterDigit) {\n                    payloadStart += counterDigit;\n                });\n            }\n        }\n        /*/!**\n         * Identify where the start of the middle / payload section starts.\n         *\n         * @param row row of black/white values to search\n         * @return Array, containing index of start of 'start block' and end of\n         *         'start block'\n         *!/*/\n        decodeStart(row) {\n            let endStart = ITFReader.skipWhiteSpace(row);\n            let startPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.START_PATTERN);\n            // Determine the width of a narrow line in pixels. We can do this by\n            // getting the width of the start pattern and dividing by 4 because its\n            // made up of 4 narrow lines.\n            this.narrowLineWidth = (startPattern[1] - startPattern[0]) / 4;\n            this.validateQuietZone(row, startPattern[0]);\n            return startPattern;\n        }\n        /*/!**\n         * The start & end patterns must be pre/post fixed by a quiet zone. This\n         * zone must be at least 10 times the width of a narrow line.  Scan back until\n         * we either get to the start of the barcode or match the necessary number of\n         * quiet zone pixels.\n         *\n         * Note: Its assumed the row is reversed when using this method to find\n         * quiet zone after the end pattern.\n         *\n         * ref: http://www.barcode-1.net/i25code.html\n         *\n         * @param row bit array representing the scanned barcode.\n         * @param startPattern index into row of the start or end pattern.\n         * @throws NotFoundException if the quiet zone cannot be found\n         *!/*/\n        validateQuietZone(row, startPattern) {\n            let quietCount = this.narrowLineWidth * 10; // expect to find this many pixels of quiet zone\n            // if there are not so many pixel at all let's try as many as possible\n            quietCount = quietCount < startPattern ? quietCount : startPattern;\n            for (let i = startPattern - 1; quietCount > 0 && i >= 0; i--) {\n                if (row.get(i)) {\n                    break;\n                }\n                quietCount--;\n            }\n            if (quietCount !== 0) {\n                // Unable to find the necessary number of quiet zone pixels.\n                throw new NotFoundException();\n            }\n        }\n        /*\n        /!**\n         * Skip all whitespace until we get to the first black line.\n         *\n         * @param row row of black/white values to search\n         * @return index of the first black line.\n         * @throws NotFoundException Throws exception if no black lines are found in the row\n         *!/*/\n        static skipWhiteSpace(row) {\n            const width = row.getSize();\n            const endStart = row.getNextSet(0);\n            if (endStart === width) {\n                throw new NotFoundException();\n            }\n            return endStart;\n        }\n        /*/!**\n         * Identify where the end of the middle / payload section ends.\n         *\n         * @param row row of black/white values to search\n         * @return Array, containing index of start of 'end block' and end of 'end\n         *         block'\n         *!/*/\n        decodeEnd(row) {\n            // For convenience, reverse the row and then\n            // search from 'the start' for the end block\n            row.reverse();\n            try {\n                let endStart = ITFReader.skipWhiteSpace(row);\n                let endPattern;\n                try {\n                    endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[0]);\n                }\n                catch (error) {\n                    if (error instanceof NotFoundException) {\n                        endPattern = ITFReader.findGuardPattern(row, endStart, ITFReader.END_PATTERN_REVERSED[1]);\n                    }\n                }\n                // The start & end patterns must be pre/post fixed by a quiet zone. This\n                // zone must be at least 10 times the width of a narrow line.\n                // ref: http://www.barcode-1.net/i25code.html\n                this.validateQuietZone(row, endPattern[0]);\n                // Now recalculate the indices of where the 'endblock' starts & stops to\n                // accommodate\n                // the reversed nature of the search\n                let temp = endPattern[0];\n                endPattern[0] = row.getSize() - endPattern[1];\n                endPattern[1] = row.getSize() - temp;\n                return endPattern;\n            }\n            finally {\n                // Put the row back the right way.\n                row.reverse();\n            }\n        }\n        /*\n        /!**\n         * @param row       row of black/white values to search\n         * @param rowOffset position to start search\n         * @param pattern   pattern of counts of number of black and white pixels that are\n         *                  being searched for as a pattern\n         * @return start/end horizontal offset of guard pattern, as an array of two\n         *         ints\n         * @throws NotFoundException if pattern is not found\n         *!/*/\n        static findGuardPattern(row, rowOffset, pattern) {\n            let patternLength = pattern.length;\n            let counters = new Int32Array(patternLength);\n            let width = row.getSize();\n            let isWhite = false;\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            counters.fill(0);\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (OneDReader.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE) < ITFReader.MAX_AVG_VARIANCE) {\n                            return [patternStart, x];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        System.arraycopy(counters, 2, counters, 0, counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /*/!**\n         * Attempts to decode a sequence of ITF black/white lines into single\n         * digit.\n         *\n         * @param counters the counts of runs of observed black/white/black/... values\n         * @return The decoded digit\n         * @throws NotFoundException if digit cannot be decoded\n         *!/*/\n        static decodeDigit(counters) {\n            let bestVariance = ITFReader.MAX_AVG_VARIANCE; // worst variance we'll accept\n            let bestMatch = -1;\n            let max = ITFReader.PATTERNS.length;\n            for (let i = 0; i < max; i++) {\n                let pattern = ITFReader.PATTERNS[i];\n                let variance = OneDReader.patternMatchVariance(counters, pattern, ITFReader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = i;\n                }\n                else if (variance === bestVariance) {\n                    // if we find a second 'best match' with the same variance, we can not reliably report to have a suitable match\n                    bestMatch = -1;\n                }\n            }\n            if (bestMatch >= 0) {\n                return bestMatch % 10;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n    }\n    ITFReader.PATTERNS = [\n        Int32Array.from([1, 1, 2, 2, 1]),\n        Int32Array.from([2, 1, 1, 1, 2]),\n        Int32Array.from([1, 2, 1, 1, 2]),\n        Int32Array.from([2, 2, 1, 1, 1]),\n        Int32Array.from([1, 1, 2, 1, 2]),\n        Int32Array.from([2, 1, 2, 1, 1]),\n        Int32Array.from([1, 2, 2, 1, 1]),\n        Int32Array.from([1, 1, 1, 2, 2]),\n        Int32Array.from([2, 1, 1, 2, 1]),\n        Int32Array.from([1, 2, 1, 2, 1]),\n        Int32Array.from([1, 1, 3, 3, 1]),\n        Int32Array.from([3, 1, 1, 1, 3]),\n        Int32Array.from([1, 3, 1, 1, 3]),\n        Int32Array.from([3, 3, 1, 1, 1]),\n        Int32Array.from([1, 1, 3, 1, 3]),\n        Int32Array.from([3, 1, 3, 1, 1]),\n        Int32Array.from([1, 3, 3, 1, 1]),\n        Int32Array.from([1, 1, 1, 3, 3]),\n        Int32Array.from([3, 1, 1, 3, 1]),\n        Int32Array.from([1, 3, 1, 3, 1]) // 9\n    ];\n    ITFReader.MAX_AVG_VARIANCE = 0.38;\n    ITFReader.MAX_INDIVIDUAL_VARIANCE = 0.5;\n    /* /!** Valid ITF lengths. Anything longer than the largest value is also allowed. *!/*/\n    ITFReader.DEFAULT_ALLOWED_LENGTHS = [6, 8, 10, 12, 14];\n    /*/!**\n     * Start/end guard pattern.\n     *\n     * Note: The end pattern is reversed because the row is reversed before\n     * searching for the END_PATTERN\n     *!/*/\n    ITFReader.START_PATTERN = Int32Array.from([1, 1, 1, 1]);\n    ITFReader.END_PATTERN_REVERSED = [\n        Int32Array.from([1, 1, 2]),\n        Int32Array.from([1, 1, 3]) // 3x\n    ];\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n     * of one-dimensional barcodes.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class AbstractUPCEANReader extends OneDReader {\n        constructor() {\n            super(...arguments);\n            this.decodeRowStringBuffer = '';\n        }\n        // private final UPCEANExtensionSupport extensionReader;\n        // private final EANManufacturerOrgSupport eanManSupport;\n        /*\n        protected UPCEANReader() {\n            decodeRowStringBuffer = new StringBuilder(20);\n            extensionReader = new UPCEANExtensionSupport();\n            eanManSupport = new EANManufacturerOrgSupport();\n        }\n        */\n        static findStartGuardPattern(row) {\n            let foundStart = false;\n            let startRange;\n            let nextStart = 0;\n            let counters = Int32Array.from([0, 0, 0]);\n            while (!foundStart) {\n                counters = Int32Array.from([0, 0, 0]);\n                startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n                let start = startRange[0];\n                nextStart = startRange[1];\n                let quietStart = start - (nextStart - start);\n                if (quietStart >= 0) {\n                    foundStart = row.isRange(quietStart, start, false);\n                }\n            }\n            return startRange;\n        }\n        static checkChecksum(s) {\n            return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n        }\n        static checkStandardUPCEANChecksum(s) {\n            let length = s.length;\n            if (length === 0)\n                return false;\n            let check = parseInt(s.charAt(length - 1), 10);\n            return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n        }\n        static getStandardUPCEANChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            sum *= 3;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            return (1000 - sum) % 10;\n        }\n        static decodeEnd(row, endStart) {\n            return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Int32Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static findGuardPatternWithoutCounters(row, rowOffset, whiteFirst, pattern) {\n            return this.findGuardPattern(row, rowOffset, whiteFirst, pattern, new Int32Array(pattern.length));\n        }\n        /**\n         * @param row row of black/white values to search\n         * @param rowOffset position to start search\n         * @param whiteFirst if true, indicates that the pattern specifies white/black/white/...\n         * pixel counts, otherwise, it is interpreted as black/white/black/...\n         * @param pattern pattern of counts of number of black and white pixels that are being\n         * searched for as a pattern\n         * @param counters array of counters, as long as pattern, to re-use\n         * @return start/end horizontal offset of guard pattern, as an array of two ints\n         * @throws NotFoundException if pattern is not found\n         */\n        static findGuardPattern(row, rowOffset, whiteFirst, pattern, counters) {\n            let width = row.getSize();\n            rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            let patternLength = pattern.length;\n            let isWhite = whiteFirst;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (OneDReader.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n                            return Int32Array.from([patternStart, x]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        let slice = counters.slice(2, counters.length - 1);\n                        for (let i = 0; i < counterPosition - 1; i++) {\n                            counters[i] = slice[i];\n                        }\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static decodeDigit(row, counters, rowOffset, patterns) {\n            this.recordPattern(row, rowOffset, counters);\n            let bestVariance = this.MAX_AVG_VARIANCE;\n            let bestMatch = -1;\n            let max = patterns.length;\n            for (let i = 0; i < max; i++) {\n                let pattern = patterns[i];\n                let variance = OneDReader.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n                if (variance < bestVariance) {\n                    bestVariance = variance;\n                    bestMatch = i;\n                }\n            }\n            if (bestMatch >= 0) {\n                return bestMatch;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n    }\n    // These two values are critical for determining how permissive the decoding will be.\n    // We've arrived at these values through a lot of trial and error. Setting them any higher\n    // lets false positives creep in quickly.\n    AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n    AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n    /**\n     * Start/end guard pattern.\n     */\n    AbstractUPCEANReader.START_END_PATTERN = Int32Array.from([1, 1, 1]);\n    /**\n     * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n     */\n    AbstractUPCEANReader.MIDDLE_PATTERN = Int32Array.from([1, 1, 1, 1, 1]);\n    /**\n     * end guard pattern.\n     */\n    AbstractUPCEANReader.END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]);\n    /**\n     * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n     */\n    AbstractUPCEANReader.L_PATTERNS = [\n        Int32Array.from([3, 2, 1, 1]),\n        Int32Array.from([2, 2, 2, 1]),\n        Int32Array.from([2, 1, 2, 2]),\n        Int32Array.from([1, 4, 1, 1]),\n        Int32Array.from([1, 1, 3, 2]),\n        Int32Array.from([1, 2, 3, 1]),\n        Int32Array.from([1, 1, 1, 4]),\n        Int32Array.from([1, 3, 1, 2]),\n        Int32Array.from([1, 2, 1, 3]),\n        Int32Array.from([3, 1, 1, 2]),\n    ];\n\n    /*\n     * Copyright (C) 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @see UPCEANExtension2Support\n     */\n    class UPCEANExtension5Support {\n        constructor() {\n            this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n            this.decodeRowStringBuffer = '';\n        }\n        decodeRow(rowNumber, row, extensionStartRange) {\n            let result = this.decodeRowStringBuffer;\n            let end = this.decodeMiddle(row, extensionStartRange, result);\n            let resultString = result.toString();\n            let extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n            let resultPoints = [\n                new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber),\n                new ResultPoint(end, rowNumber)\n            ];\n            let extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat$1.UPC_EAN_EXTENSION, new Date().getTime());\n            if (extensionData != null) {\n                extensionResult.putAllMetadata(extensionData);\n            }\n            return extensionResult;\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 5 && rowOffset < end; x++) {\n                let bestMatch = AbstractUPCEANReader.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= 1 << (4 - x);\n                }\n                if (x !== 4) {\n                    // Read off separator if not last\n                    rowOffset = row.getNextSet(rowOffset);\n                    rowOffset = row.getNextUnset(rowOffset);\n                }\n            }\n            if (resultString.length !== 5) {\n                throw new NotFoundException();\n            }\n            let checkDigit = this.determineCheckDigit(lgPatternFound);\n            if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n                throw new NotFoundException();\n            }\n            return rowOffset;\n        }\n        static extensionChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            }\n            sum *= 3;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n            }\n            sum *= 3;\n            return sum % 10;\n        }\n        determineCheckDigit(lgPatternFound) {\n            for (let d = 0; d < 10; d++) {\n                if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n                    return d;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static parseExtensionString(raw) {\n            if (raw.length !== 5) {\n                return null;\n            }\n            let value = UPCEANExtension5Support.parseExtension5String(raw);\n            if (value == null) {\n                return null;\n            }\n            return new Map([[ResultMetadataType$1.SUGGESTED_PRICE, value]]);\n        }\n        static parseExtension5String(raw) {\n            let currency;\n            switch (raw.charAt(0)) {\n                case '0':\n                    currency = '£';\n                    break;\n                case '5':\n                    currency = '$';\n                    break;\n                case '9':\n                    // Reference: http://www.jollytech.com\n                    switch (raw) {\n                        case '90000':\n                            // No suggested retail price\n                            return null;\n                        case '99991':\n                            // Complementary\n                            return '0.00';\n                        case '99990':\n                            return 'Used';\n                    }\n                    // Otherwise... unknown currency?\n                    currency = '';\n                    break;\n                default:\n                    currency = '';\n                    break;\n            }\n            let rawAmount = parseInt(raw.substring(1));\n            let unitsString = (rawAmount / 100).toString();\n            let hundredths = rawAmount % 100;\n            let hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n            return currency + unitsString + '.' + hundredthsString;\n        }\n    }\n\n    /*\n     * Copyright (C) 2012 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @see UPCEANExtension5Support\n     */\n    class UPCEANExtension2Support {\n        constructor() {\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n            this.decodeRowStringBuffer = '';\n        }\n        decodeRow(rowNumber, row, extensionStartRange) {\n            let result = this.decodeRowStringBuffer;\n            let end = this.decodeMiddle(row, extensionStartRange, result);\n            let resultString = result.toString();\n            let extensionData = UPCEANExtension2Support.parseExtensionString(resultString);\n            let resultPoints = [\n                new ResultPoint((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber),\n                new ResultPoint(end, rowNumber)\n            ];\n            let extensionResult = new Result(resultString, null, 0, resultPoints, BarcodeFormat$1.UPC_EAN_EXTENSION, new Date().getTime());\n            if (extensionData != null) {\n                extensionResult.putAllMetadata(extensionData);\n            }\n            return extensionResult;\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let checkParity = 0;\n            for (let x = 0; x < 2 && rowOffset < end; x++) {\n                let bestMatch = AbstractUPCEANReader.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    checkParity |= 1 << (1 - x);\n                }\n                if (x !== 1) {\n                    // Read off separator if not last\n                    rowOffset = row.getNextSet(rowOffset);\n                    rowOffset = row.getNextUnset(rowOffset);\n                }\n            }\n            if (resultString.length !== 2) {\n                throw new NotFoundException();\n            }\n            if (parseInt(resultString.toString()) % 4 !== checkParity) {\n                throw new NotFoundException();\n            }\n            return rowOffset;\n        }\n        static parseExtensionString(raw) {\n            if (raw.length !== 2) {\n                return null;\n            }\n            return new Map([[ResultMetadataType$1.ISSUE_NUMBER, parseInt(raw)]]);\n        }\n    }\n\n    /*\n     * Copyright (C) 2010 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    class UPCEANExtensionSupport {\n        static decodeRow(rowNumber, row, rowOffset) {\n            let extensionStartRange = AbstractUPCEANReader.findGuardPattern(row, rowOffset, false, this.EXTENSION_START_PATTERN, new Int32Array(this.EXTENSION_START_PATTERN.length).fill(0));\n            try {\n                // return null;\n                let fiveSupport = new UPCEANExtension5Support();\n                return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n            }\n            catch (err) {\n                // return null;\n                let twoSupport = new UPCEANExtension2Support();\n                return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n            }\n        }\n    }\n    UPCEANExtensionSupport.EXTENSION_START_PATTERN = Int32Array.from([1, 1, 2]);\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n     * of one-dimensional barcodes.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class UPCEANReader extends AbstractUPCEANReader {\n        constructor() {\n            super();\n            this.decodeRowStringBuffer = '';\n            UPCEANReader.L_AND_G_PATTERNS = UPCEANReader.L_PATTERNS.map(arr => Int32Array.from(arr));\n            for (let i = 10; i < 20; i++) {\n                let widths = UPCEANReader.L_PATTERNS[i - 10];\n                let reversedWidths = new Int32Array(widths.length);\n                for (let j = 0; j < widths.length; j++) {\n                    reversedWidths[j] = widths[widths.length - j - 1];\n                }\n                UPCEANReader.L_AND_G_PATTERNS[i] = reversedWidths;\n            }\n        }\n        decodeRow(rowNumber, row, hints) {\n            let startGuardRange = UPCEANReader.findStartGuardPattern(row);\n            let resultPointCallback = hints == null ? null : hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint((startGuardRange[0] + startGuardRange[1]) / 2.0, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            let budello = this.decodeMiddle(row, startGuardRange, this.decodeRowStringBuffer);\n            let endStart = budello.rowOffset;\n            let result = budello.resultString;\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint(endStart, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            let endRange = UPCEANReader.decodeEnd(row, endStart);\n            if (resultPointCallback != null) {\n                const resultPoint = new ResultPoint((endRange[0] + endRange[1]) / 2.0, rowNumber);\n                resultPointCallback.foundPossibleResultPoint(resultPoint);\n            }\n            // Make sure there is a quiet zone at least as big as the end pattern after the barcode. The\n            // spec might want more whitespace, but in practice this is the maximum we can count on.\n            let end = endRange[1];\n            let quietEnd = end + (end - endRange[0]);\n            if (quietEnd >= row.getSize() || !row.isRange(end, quietEnd, false)) {\n                throw new NotFoundException();\n            }\n            let resultString = result.toString();\n            // UPC/EAN should never be less than 8 chars anyway\n            if (resultString.length < 8) {\n                throw new FormatException();\n            }\n            if (!UPCEANReader.checkChecksum(resultString)) {\n                throw new ChecksumException();\n            }\n            let left = (startGuardRange[1] + startGuardRange[0]) / 2.0;\n            let right = (endRange[1] + endRange[0]) / 2.0;\n            let format = this.getBarcodeFormat();\n            let resultPoint = [new ResultPoint(left, rowNumber), new ResultPoint(right, rowNumber)];\n            let decodeResult = new Result(resultString, null, 0, resultPoint, format, new Date().getTime());\n            let extensionLength = 0;\n            try {\n                let extensionResult = UPCEANExtensionSupport.decodeRow(rowNumber, row, endRange[1]);\n                decodeResult.putMetadata(ResultMetadataType$1.UPC_EAN_EXTENSION, extensionResult.getText());\n                decodeResult.putAllMetadata(extensionResult.getResultMetadata());\n                decodeResult.addResultPoints(extensionResult.getResultPoints());\n                extensionLength = extensionResult.getText().length;\n            }\n            catch (err) {\n            }\n            let allowedExtensions = hints == null ? null : hints.get(DecodeHintType$1.ALLOWED_EAN_EXTENSIONS);\n            if (allowedExtensions != null) {\n                let valid = false;\n                for (let length in allowedExtensions) {\n                    if (extensionLength.toString() === length) { // check me\n                        valid = true;\n                        break;\n                    }\n                }\n                if (!valid) {\n                    throw new NotFoundException();\n                }\n            }\n            if (format === BarcodeFormat$1.EAN_13 || format === BarcodeFormat$1.UPC_A) ;\n            return decodeResult;\n        }\n        static checkChecksum(s) {\n            return UPCEANReader.checkStandardUPCEANChecksum(s);\n        }\n        static checkStandardUPCEANChecksum(s) {\n            let length = s.length;\n            if (length === 0)\n                return false;\n            let check = parseInt(s.charAt(length - 1), 10);\n            return UPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n        }\n        static getStandardUPCEANChecksum(s) {\n            let length = s.length;\n            let sum = 0;\n            for (let i = length - 1; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            sum *= 3;\n            for (let i = length - 2; i >= 0; i -= 2) {\n                let digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                if (digit < 0 || digit > 9) {\n                    throw new FormatException();\n                }\n                sum += digit;\n            }\n            return (1000 - sum) % 10;\n        }\n        static decodeEnd(row, endStart) {\n            return UPCEANReader.findGuardPattern(row, endStart, false, UPCEANReader.START_END_PATTERN, new Int32Array(UPCEANReader.START_END_PATTERN.length).fill(0));\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Implements decoding of the EAN-13 format.</p>\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author alasdair@google.com (Alasdair Mackintosh)\n     */\n    class EAN13Reader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n        }\n        decodeMiddle(row, startRange, resultString) {\n            let counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_AND_G_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= 1 << (5 - x);\n                }\n            }\n            resultString = EAN13Reader.determineFirstDigit(resultString, lgPatternFound);\n            let middleRange = UPCEANReader.findGuardPattern(row, rowOffset, true, UPCEANReader.MIDDLE_PATTERN, new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));\n            rowOffset = middleRange[1];\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            return { rowOffset, resultString };\n        }\n        getBarcodeFormat() {\n            return BarcodeFormat$1.EAN_13;\n        }\n        static determineFirstDigit(resultString, lgPatternFound) {\n            for (let d = 0; d < 10; d++) {\n                if (lgPatternFound === this.FIRST_DIGIT_ENCODINGS[d]) {\n                    resultString = String.fromCharCode(('0'.charCodeAt(0) + d)) + resultString;\n                    return resultString;\n                }\n            }\n            throw new NotFoundException();\n        }\n    }\n    EAN13Reader.FIRST_DIGIT_ENCODINGS = [0x00, 0x0B, 0x0D, 0xE, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1A];\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Implements decoding of the EAN-8 format.</p>\n     *\n     * @author Sean Owen\n     */\n    class EAN8Reader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = Int32Array.from([0, 0, 0, 0]);\n        }\n        decodeMiddle(row, startRange, resultString) {\n            const counters = this.decodeMiddleCounters;\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let end = row.getSize();\n            let rowOffset = startRange[1];\n            for (let x = 0; x < 4 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            let middleRange = UPCEANReader.findGuardPattern(row, rowOffset, true, UPCEANReader.MIDDLE_PATTERN, new Int32Array(UPCEANReader.MIDDLE_PATTERN.length).fill(0));\n            rowOffset = middleRange[1];\n            for (let x = 0; x < 4 && rowOffset < end; x++) {\n                let bestMatch = UPCEANReader.decodeDigit(row, counters, rowOffset, UPCEANReader.L_PATTERNS);\n                resultString += String.fromCharCode(('0'.charCodeAt(0) + bestMatch));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n            }\n            return { rowOffset, resultString };\n        }\n        getBarcodeFormat() {\n            return BarcodeFormat$1.EAN_8;\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Encapsulates functionality and implementation that is common to all families\n     * of one-dimensional barcodes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Sean Owen\n     * @author sam2332 (Sam Rudloff)\n     *\n     * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCAReader.java\n     *\n     * @experimental\n     */\n    class UPCAReader extends UPCEANReader {\n        constructor() {\n            super(...arguments);\n            this.ean13Reader = new EAN13Reader();\n        }\n        // @Override\n        getBarcodeFormat() {\n            return BarcodeFormat$1.UPC_A;\n        }\n        // Note that we don't try rotation without the try harder flag, even if rotation was supported.\n        // @Override\n        decode(image, hints) {\n            return this.maybeReturnResult(this.ean13Reader.decode(image));\n        }\n        // @Override\n        decodeRow(rowNumber, row, hints) {\n            return this.maybeReturnResult(this.ean13Reader.decodeRow(rowNumber, row, hints));\n        }\n        // @Override\n        decodeMiddle(row, startRange, resultString) {\n            return this.ean13Reader.decodeMiddle(row, startRange, resultString);\n        }\n        maybeReturnResult(result) {\n            let text = result.getText();\n            if (text.charAt(0) === '0') {\n                let upcaResult = new Result(text.substring(1), null, null, result.getResultPoints(), BarcodeFormat$1.UPC_A);\n                if (result.getResultMetadata() != null) {\n                    upcaResult.putAllMetadata(result.getResultMetadata());\n                }\n                return upcaResult;\n            }\n            else {\n                throw new NotFoundException();\n            }\n        }\n        reset() {\n            this.ean13Reader.reset();\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.oned;\n    // import com.google.zxing.BarcodeFormat;\n    // import com.google.zxing.FormatException;\n    // import com.google.zxing.NotFoundException;\n    // import com.google.zxing.common.BitArray;\n    /**\n     * <p>Implements decoding of the UPC-E format.</p>\n     * <p><a href=\"http://www.barcodeisland.com/upce.phtml\">This</a> is a great reference for\n     * UPC-E information.</p>\n     *\n     * @author Sean Owen\n     *\n     * @source https://github.com/zxing/zxing/blob/3c96923276dd5785d58eb970b6ba3f80d36a9505/core/src/main/java/com/google/zxing/oned/UPCEReader.java\n     *\n     * @experimental\n     */\n    /* final */ class UPCEReader extends UPCEANReader {\n        constructor() {\n            super();\n            this.decodeMiddleCounters = new Int32Array(4);\n        }\n        /**\n         * @throws NotFoundException\n         */\n        // @Override\n        decodeMiddle(row, startRange, result) {\n            const counters = this.decodeMiddleCounters.map(x => x);\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            const end = row.getSize();\n            let rowOffset = startRange[1];\n            let lgPatternFound = 0;\n            for (let x = 0; x < 6 && rowOffset < end; x++) {\n                const bestMatch = UPCEReader.decodeDigit(row, counters, rowOffset, UPCEReader.L_AND_G_PATTERNS);\n                result += String.fromCharCode(('0'.charCodeAt(0) + bestMatch % 10));\n                for (let counter of counters) {\n                    rowOffset += counter;\n                }\n                if (bestMatch >= 10) {\n                    lgPatternFound |= 1 << (5 - x);\n                }\n            }\n            UPCEReader.determineNumSysAndCheckDigit(new StringBuilder(result), lgPatternFound);\n            return rowOffset;\n        }\n        /**\n         * @throws NotFoundException\n         */\n        // @Override\n        decodeEnd(row, endStart) {\n            return UPCEReader.findGuardPatternWithoutCounters(row, endStart, true, UPCEReader.MIDDLE_END_PATTERN);\n        }\n        /**\n         * @throws FormatException\n         */\n        // @Override\n        checkChecksum(s) {\n            return UPCEANReader.checkChecksum(UPCEReader.convertUPCEtoUPCA(s));\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static determineNumSysAndCheckDigit(resultString, lgPatternFound) {\n            for (let numSys = 0; numSys <= 1; numSys++) {\n                for (let d = 0; d < 10; d++) {\n                    if (lgPatternFound === this.NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n                        resultString.insert(0, /*(char)*/ ('0' + numSys));\n                        resultString.append(/*(char)*/ ('0' + d));\n                        return;\n                    }\n                }\n            }\n            throw NotFoundException.getNotFoundInstance();\n        }\n        // @Override\n        getBarcodeFormat() {\n            return BarcodeFormat$1.UPC_E;\n        }\n        /**\n         * Expands a UPC-E value back into its full, equivalent UPC-A code value.\n         *\n         * @param upce UPC-E code as string of digits\n         * @return equivalent UPC-A code as string of digits\n         */\n        static convertUPCEtoUPCA(upce) {\n            // the following line is equivalent to upce.getChars(1, 7, upceChars, 0);\n            const upceChars = upce.slice(1, 7).split('').map(x => x.charCodeAt(0));\n            const result = new StringBuilder( /*12*/);\n            result.append(upce.charAt(0));\n            let lastChar = upceChars[5];\n            switch (lastChar) {\n                case 0:\n                case 1:\n                case 2:\n                    result.appendChars(upceChars, 0, 2);\n                    result.append(lastChar);\n                    result.append('0000');\n                    result.appendChars(upceChars, 2, 3);\n                    break;\n                case 3:\n                    result.appendChars(upceChars, 0, 3);\n                    result.append('00000');\n                    result.appendChars(upceChars, 3, 2);\n                    break;\n                case 4:\n                    result.appendChars(upceChars, 0, 4);\n                    result.append('00000');\n                    result.append(upceChars[4]);\n                    break;\n                default:\n                    result.appendChars(upceChars, 0, 5);\n                    result.append('0000');\n                    result.append(lastChar);\n                    break;\n            }\n            // Only append check digit in conversion if supplied\n            if (upce.length >= 8) {\n                result.append(upce.charAt(7));\n            }\n            return result.toString();\n        }\n    }\n    /**\n     * The pattern that marks the middle, and end, of a UPC-E pattern.\n     * There is no \"second half\" to a UPC-E barcode.\n     */\n    UPCEReader.MIDDLE_END_PATTERN = Int32Array.from([1, 1, 1, 1, 1, 1]);\n    // For an UPC-E barcode, the final digit is represented by the parities used\n    // to encode the middle six digits, according to the table below.\n    //\n    //                Parity of next 6 digits\n    //    Digit   0     1     2     3     4     5\n    //       0    Even   Even  Even Odd  Odd   Odd\n    //       1    Even   Even  Odd  Even Odd   Odd\n    //       2    Even   Even  Odd  Odd  Even  Odd\n    //       3    Even   Even  Odd  Odd  Odd   Even\n    //       4    Even   Odd   Even Even Odd   Odd\n    //       5    Even   Odd   Odd  Even Even  Odd\n    //       6    Even   Odd   Odd  Odd  Even  Even\n    //       7    Even   Odd   Even Odd  Even  Odd\n    //       8    Even   Odd   Even Odd  Odd   Even\n    //       9    Even   Odd   Odd  Even Odd   Even\n    //\n    // The encoding is represented by the following array, which is a bit pattern\n    // using Odd = 0 and Even = 1. For example, 5 is represented by:\n    //\n    //              Odd Even Even Odd Odd Even\n    // in binary:\n    //                0    1    1   0   0    1   == 0x19\n    //\n    /**\n     * See {@link #L_AND_G_PATTERNS}; these values similarly represent patterns of\n     * even-odd parity encodings of digits that imply both the number system (0 or 1)\n     * used, and the check digit.\n     */\n    UPCEReader.NUMSYS_AND_CHECK_DIGIT_PATTERNS = [\n        Int32Array.from([0x38, 0x34, 0x32, 0x31, 0x2C, 0x26, 0x23, 0x2A, 0x29, 0x25]),\n        Int32Array.from([0x07, 0x0B, 0x0D, 0x0E, 0x13, 0x19, 0x1C, 0x15, 0x16, 0x1]),\n    ];\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>A reader that can read all available UPC/EAN formats. If a caller wants to try to\n     * read all such formats, it is most efficient to use this implementation rather than invoke\n     * individual readers.</p>\n     *\n     * @author Sean Owen\n     */\n    class MultiFormatUPCEANReader extends OneDReader {\n        constructor(hints) {\n            super();\n            let possibleFormats = hints == null ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            let readers = [];\n            if (possibleFormats != null) {\n                if (possibleFormats.indexOf(BarcodeFormat$1.EAN_13) > -1) {\n                    readers.push(new EAN13Reader());\n                }\n                else if (possibleFormats.indexOf(BarcodeFormat$1.UPC_A) > -1) {\n                    readers.push(new UPCAReader());\n                }\n                if (possibleFormats.indexOf(BarcodeFormat$1.EAN_8) > -1) {\n                    readers.push(new EAN8Reader());\n                }\n                if (possibleFormats.indexOf(BarcodeFormat$1.UPC_E) > -1) {\n                    readers.push(new UPCEReader());\n                }\n            }\n            if (readers.length === 0) {\n                readers.push(new EAN13Reader());\n                // UPC-A is covered by EAN-13\n                readers.push(new EAN8Reader());\n                readers.push(new UPCEReader());\n            }\n            this.readers = readers;\n        }\n        decodeRow(rowNumber, row, hints) {\n            for (let reader of this.readers) {\n                try {\n                    // const result: Result = reader.decodeRow(rowNumber, row, startGuardPattern, hints);\n                    const result = reader.decodeRow(rowNumber, row, hints);\n                    // Special case: a 12-digit code encoded in UPC-A is identical to a \"0\"\n                    // followed by those 12 digits encoded as EAN-13. Each will recognize such a code,\n                    // UPC-A as a 12-digit string and EAN-13 as a 13-digit string starting with \"0\".\n                    // Individually these are correct and their readers will both read such a code\n                    // and correctly call it EAN-13, or UPC-A, respectively.\n                    //\n                    // In this case, if we've been looking for both types, we'd like to call it\n                    // a UPC-A code. But for efficiency we only run the EAN-13 decoder to also read\n                    // UPC-A. So we special case it here, and convert an EAN-13 result to a UPC-A\n                    // result if appropriate.\n                    //\n                    // But, don't return UPC-A if UPC-A was not a requested format!\n                    const ean13MayBeUPCA = result.getBarcodeFormat() === BarcodeFormat$1.EAN_13 &&\n                        result.getText().charAt(0) === '0';\n                    // @SuppressWarnings(\"unchecked\")\n                    const possibleFormats = hints == null ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n                    const canReturnUPCA = possibleFormats == null || possibleFormats.includes(BarcodeFormat$1.UPC_A);\n                    if (ean13MayBeUPCA && canReturnUPCA) {\n                        const rawBytes = result.getRawBytes();\n                        // Transfer the metadata across\n                        const resultUPCA = new Result(result.getText().substring(1), rawBytes, rawBytes.length, result.getResultPoints(), BarcodeFormat$1.UPC_A);\n                        resultUPCA.putAllMetadata(result.getResultMetadata());\n                        return resultUPCA;\n                    }\n                    return result;\n                }\n                catch (err) {\n                    // continue;\n                }\n            }\n            throw new NotFoundException();\n        }\n        reset() {\n            for (let reader of this.readers) {\n                reader.reset();\n            }\n        }\n    }\n\n    // import Integer from '../../util/Integer';\n    // import Float from '../../util/Float';\n    class AbstractRSSReader extends OneDReader {\n        constructor() {\n            super();\n            this.decodeFinderCounters = new Int32Array(4);\n            this.dataCharacterCounters = new Int32Array(8);\n            this.oddRoundingErrors = new Array(4);\n            this.evenRoundingErrors = new Array(4);\n            this.oddCounts = new Array(this.dataCharacterCounters.length / 2);\n            this.evenCounts = new Array(this.dataCharacterCounters.length / 2);\n        }\n        getDecodeFinderCounters() {\n            return this.decodeFinderCounters;\n        }\n        getDataCharacterCounters() {\n            return this.dataCharacterCounters;\n        }\n        getOddRoundingErrors() {\n            return this.oddRoundingErrors;\n        }\n        getEvenRoundingErrors() {\n            return this.evenRoundingErrors;\n        }\n        getOddCounts() {\n            return this.oddCounts;\n        }\n        getEvenCounts() {\n            return this.evenCounts;\n        }\n        parseFinderValue(counters, finderPatterns) {\n            for (let value = 0; value < finderPatterns.length; value++) {\n                if (OneDReader.patternMatchVariance(counters, finderPatterns[value], AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE) < AbstractRSSReader.MAX_AVG_VARIANCE) {\n                    return value;\n                }\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * @param array values to sum\n         * @return sum of values\n         * @deprecated call {@link MathUtils#sum(int[])}\n         */\n        static count(array) {\n            return MathUtils.sum(new Int32Array(array));\n        }\n        static increment(array, errors) {\n            let index = 0;\n            let biggestError = errors[0];\n            for (let i = 1; i < array.length; i++) {\n                if (errors[i] > biggestError) {\n                    biggestError = errors[i];\n                    index = i;\n                }\n            }\n            array[index]++;\n        }\n        static decrement(array, errors) {\n            let index = 0;\n            let biggestError = errors[0];\n            for (let i = 1; i < array.length; i++) {\n                if (errors[i] < biggestError) {\n                    biggestError = errors[i];\n                    index = i;\n                }\n            }\n            array[index]--;\n        }\n        static isFinderPattern(counters) {\n            let firstTwoSum = counters[0] + counters[1];\n            let sum = firstTwoSum + counters[2] + counters[3];\n            let ratio = firstTwoSum / sum;\n            if (ratio >= AbstractRSSReader.MIN_FINDER_PATTERN_RATIO && ratio <= AbstractRSSReader.MAX_FINDER_PATTERN_RATIO) {\n                // passes ratio test in spec, but see if the counts are unreasonable\n                let minCounter = Number.MAX_SAFE_INTEGER;\n                let maxCounter = Number.MIN_SAFE_INTEGER;\n                for (let counter of counters) {\n                    if (counter > maxCounter) {\n                        maxCounter = counter;\n                    }\n                    if (counter < minCounter) {\n                        minCounter = counter;\n                    }\n                }\n                return maxCounter < 10 * minCounter;\n            }\n            return false;\n        }\n    }\n    AbstractRSSReader.MAX_AVG_VARIANCE = 0.2;\n    AbstractRSSReader.MAX_INDIVIDUAL_VARIANCE = 0.45;\n    AbstractRSSReader.MIN_FINDER_PATTERN_RATIO = 9.5 / 12.0;\n    AbstractRSSReader.MAX_FINDER_PATTERN_RATIO = 12.5 / 14.0;\n\n    class DataCharacter {\n        constructor(value, checksumPortion) {\n            this.value = value;\n            this.checksumPortion = checksumPortion;\n        }\n        getValue() {\n            return this.value;\n        }\n        getChecksumPortion() {\n            return this.checksumPortion;\n        }\n        toString() {\n            return this.value + '(' + this.checksumPortion + ')';\n        }\n        equals(o) {\n            if (!(o instanceof DataCharacter)) {\n                return false;\n            }\n            const that = o;\n            return this.value === that.value && this.checksumPortion === that.checksumPortion;\n        }\n        hashCode() {\n            return this.value ^ this.checksumPortion;\n        }\n    }\n\n    class FinderPattern {\n        constructor(value, startEnd, start, end, rowNumber) {\n            this.value = value;\n            this.startEnd = startEnd;\n            this.value = value;\n            this.startEnd = startEnd;\n            this.resultPoints = new Array();\n            this.resultPoints.push(new ResultPoint(start, rowNumber));\n            this.resultPoints.push(new ResultPoint(end, rowNumber));\n        }\n        getValue() {\n            return this.value;\n        }\n        getStartEnd() {\n            return this.startEnd;\n        }\n        getResultPoints() {\n            return this.resultPoints;\n        }\n        equals(o) {\n            if (!(o instanceof FinderPattern)) {\n                return false;\n            }\n            const that = o;\n            return this.value === that.value;\n        }\n        hashCode() {\n            return this.value;\n        }\n    }\n\n    /**\n     * RSS util functions.\n     */\n    class RSSUtils {\n        constructor() { }\n        static getRSSvalue(widths, maxWidth, noNarrow) {\n            let n = 0;\n            for (let width of widths) {\n                n += width;\n            }\n            let val = 0;\n            let narrowMask = 0;\n            let elements = widths.length;\n            for (let bar = 0; bar < elements - 1; bar++) {\n                let elmWidth;\n                for (elmWidth = 1, narrowMask |= 1 << bar; elmWidth < widths[bar]; elmWidth++, narrowMask &= ~(1 << bar)) {\n                    let subVal = RSSUtils.combins(n - elmWidth - 1, elements - bar - 2);\n                    if (noNarrow && (narrowMask === 0) && (n - elmWidth - (elements - bar - 1) >= elements - bar - 1)) {\n                        subVal -= RSSUtils.combins(n - elmWidth - (elements - bar), elements - bar - 2);\n                    }\n                    if (elements - bar - 1 > 1) {\n                        let lessVal = 0;\n                        for (let mxwElement = n - elmWidth - (elements - bar - 2); mxwElement > maxWidth; mxwElement--) {\n                            lessVal += RSSUtils.combins(n - elmWidth - mxwElement - 1, elements - bar - 3);\n                        }\n                        subVal -= lessVal * (elements - 1 - bar);\n                    }\n                    else if (n - elmWidth > maxWidth) {\n                        subVal--;\n                    }\n                    val += subVal;\n                }\n                n -= elmWidth;\n            }\n            return val;\n        }\n        static combins(n, r) {\n            let maxDenom;\n            let minDenom;\n            if (n - r > r) {\n                minDenom = r;\n                maxDenom = n - r;\n            }\n            else {\n                minDenom = n - r;\n                maxDenom = r;\n            }\n            let val = 1;\n            let j = 1;\n            for (let i = n; i > maxDenom; i--) {\n                val *= i;\n                if (j <= minDenom) {\n                    val /= j;\n                    j++;\n                }\n            }\n            while ((j <= minDenom)) {\n                val /= j;\n                j++;\n            }\n            return val;\n        }\n    }\n\n    class BitArrayBuilder {\n        static buildBitArray(pairs) {\n            let charNumber = (pairs.length * 2) - 1;\n            if (pairs[pairs.length - 1].getRightChar() == null) {\n                charNumber -= 1;\n            }\n            let size = 12 * charNumber;\n            let binary = new BitArray(size);\n            let accPos = 0;\n            let firstPair = pairs[0];\n            let firstValue = firstPair.getRightChar().getValue();\n            for (let i = 11; i >= 0; --i) {\n                if ((firstValue & (1 << i)) != 0) {\n                    binary.set(accPos);\n                }\n                accPos++;\n            }\n            for (let i = 1; i < pairs.length; ++i) {\n                let currentPair = pairs[i];\n                let leftValue = currentPair.getLeftChar().getValue();\n                for (let j = 11; j >= 0; --j) {\n                    if ((leftValue & (1 << j)) != 0) {\n                        binary.set(accPos);\n                    }\n                    accPos++;\n                }\n                if (currentPair.getRightChar() != null) {\n                    let rightValue = currentPair.getRightChar().getValue();\n                    for (let j = 11; j >= 0; --j) {\n                        if ((rightValue & (1 << j)) != 0) {\n                            binary.set(accPos);\n                        }\n                        accPos++;\n                    }\n                }\n            }\n            return binary;\n        }\n    }\n\n    class BlockParsedResult {\n        constructor(finished, decodedInformation) {\n            if (decodedInformation) {\n                this.decodedInformation = null;\n            }\n            else {\n                this.finished = finished;\n                this.decodedInformation = decodedInformation;\n            }\n        }\n        getDecodedInformation() {\n            return this.decodedInformation;\n        }\n        isFinished() {\n            return this.finished;\n        }\n    }\n\n    class DecodedObject {\n        constructor(newPosition) {\n            this.newPosition = newPosition;\n        }\n        getNewPosition() {\n            return this.newPosition;\n        }\n    }\n\n    class DecodedChar extends DecodedObject {\n        constructor(newPosition, value) {\n            super(newPosition);\n            this.value = value;\n        }\n        getValue() {\n            return this.value;\n        }\n        isFNC1() {\n            return this.value === DecodedChar.FNC1;\n        }\n    }\n    DecodedChar.FNC1 = '$';\n\n    class DecodedInformation extends DecodedObject {\n        constructor(newPosition, newString, remainingValue) {\n            super(newPosition);\n            if (remainingValue) {\n                this.remaining = true;\n                this.remainingValue = this.remainingValue;\n            }\n            else {\n                this.remaining = false;\n                this.remainingValue = 0;\n            }\n            this.newString = newString;\n        }\n        getNewString() {\n            return this.newString;\n        }\n        isRemaining() {\n            return this.remaining;\n        }\n        getRemainingValue() {\n            return this.remainingValue;\n        }\n    }\n\n    class DecodedNumeric extends DecodedObject {\n        constructor(newPosition, firstDigit, secondDigit) {\n            super(newPosition);\n            if (firstDigit < 0 || firstDigit > 10 || secondDigit < 0 || secondDigit > 10) {\n                throw new FormatException();\n            }\n            this.firstDigit = firstDigit;\n            this.secondDigit = secondDigit;\n        }\n        getFirstDigit() {\n            return this.firstDigit;\n        }\n        getSecondDigit() {\n            return this.secondDigit;\n        }\n        getValue() {\n            return this.firstDigit * 10 + this.secondDigit;\n        }\n        isFirstDigitFNC1() {\n            return this.firstDigit === DecodedNumeric.FNC1;\n        }\n        isSecondDigitFNC1() {\n            return this.secondDigit === DecodedNumeric.FNC1;\n        }\n        isAnyFNC1() {\n            return this.firstDigit === DecodedNumeric.FNC1 || this.secondDigit === DecodedNumeric.FNC1;\n        }\n    }\n    DecodedNumeric.FNC1 = 10;\n\n    class FieldParser {\n        constructor() {\n        }\n        static parseFieldsInGeneralPurpose(rawInformation) {\n            if (!rawInformation) {\n                return null;\n            }\n            // Processing 2-digit AIs\n            if (rawInformation.length < 2) {\n                throw new NotFoundException();\n            }\n            let firstTwoDigits = rawInformation.substring(0, 2);\n            for (let dataLength of FieldParser.TWO_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstTwoDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(2, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(2, dataLength[1], rawInformation);\n                }\n            }\n            if (rawInformation.length < 3) {\n                throw new NotFoundException();\n            }\n            let firstThreeDigits = rawInformation.substring(0, 3);\n            for (let dataLength of FieldParser.THREE_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(3, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(3, dataLength[1], rawInformation);\n                }\n            }\n            for (let dataLength of FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n            if (rawInformation.length < 4) {\n                throw new NotFoundException();\n            }\n            let firstFourDigits = rawInformation.substring(0, 4);\n            for (let dataLength of FieldParser.FOUR_DIGIT_DATA_LENGTH) {\n                if (dataLength[0] === firstFourDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n            throw new NotFoundException();\n        }\n        static processFixedAI(aiSize, fieldSize, rawInformation) {\n            if (rawInformation.length < aiSize) {\n                throw new NotFoundException();\n            }\n            let ai = rawInformation.substring(0, aiSize);\n            if (rawInformation.length < aiSize + fieldSize) {\n                throw new NotFoundException();\n            }\n            let field = rawInformation.substring(aiSize, aiSize + fieldSize);\n            let remaining = rawInformation.substring(aiSize + fieldSize);\n            let result = '(' + ai + ')' + field;\n            let parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n            return parsedAI == null ? result : result + parsedAI;\n        }\n        static processVariableAI(aiSize, variableFieldSize, rawInformation) {\n            let ai = rawInformation.substring(0, aiSize);\n            let maxSize;\n            if (rawInformation.length < aiSize + variableFieldSize) {\n                maxSize = rawInformation.length;\n            }\n            else {\n                maxSize = aiSize + variableFieldSize;\n            }\n            let field = rawInformation.substring(aiSize, maxSize);\n            let remaining = rawInformation.substring(maxSize);\n            let result = '(' + ai + ')' + field;\n            let parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n            return parsedAI == null ? result : result + parsedAI;\n        }\n    }\n    FieldParser.VARIABLE_LENGTH = [];\n    FieldParser.TWO_DIGIT_DATA_LENGTH = [\n        ['00', 18],\n        ['01', 14],\n        ['02', 14],\n        ['10', FieldParser.VARIABLE_LENGTH, 20],\n        ['11', 6],\n        ['12', 6],\n        ['13', 6],\n        ['15', 6],\n        ['17', 6],\n        ['20', 2],\n        ['21', FieldParser.VARIABLE_LENGTH, 20],\n        ['22', FieldParser.VARIABLE_LENGTH, 29],\n        ['30', FieldParser.VARIABLE_LENGTH, 8],\n        ['37', FieldParser.VARIABLE_LENGTH, 8],\n        // internal company codes\n        ['90', FieldParser.VARIABLE_LENGTH, 30],\n        ['91', FieldParser.VARIABLE_LENGTH, 30],\n        ['92', FieldParser.VARIABLE_LENGTH, 30],\n        ['93', FieldParser.VARIABLE_LENGTH, 30],\n        ['94', FieldParser.VARIABLE_LENGTH, 30],\n        ['95', FieldParser.VARIABLE_LENGTH, 30],\n        ['96', FieldParser.VARIABLE_LENGTH, 30],\n        ['97', FieldParser.VARIABLE_LENGTH, 3],\n        ['98', FieldParser.VARIABLE_LENGTH, 30],\n        ['99', FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.THREE_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['240', FieldParser.VARIABLE_LENGTH, 30],\n        ['241', FieldParser.VARIABLE_LENGTH, 30],\n        ['242', FieldParser.VARIABLE_LENGTH, 6],\n        ['250', FieldParser.VARIABLE_LENGTH, 30],\n        ['251', FieldParser.VARIABLE_LENGTH, 30],\n        ['253', FieldParser.VARIABLE_LENGTH, 17],\n        ['254', FieldParser.VARIABLE_LENGTH, 20],\n        ['400', FieldParser.VARIABLE_LENGTH, 30],\n        ['401', FieldParser.VARIABLE_LENGTH, 30],\n        ['402', 17],\n        ['403', FieldParser.VARIABLE_LENGTH, 30],\n        ['410', 13],\n        ['411', 13],\n        ['412', 13],\n        ['413', 13],\n        ['414', 13],\n        ['420', FieldParser.VARIABLE_LENGTH, 20],\n        ['421', FieldParser.VARIABLE_LENGTH, 15],\n        ['422', 3],\n        ['423', FieldParser.VARIABLE_LENGTH, 15],\n        ['424', 3],\n        ['425', 3],\n        ['426', 3],\n    ];\n    FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['310', 6],\n        ['311', 6],\n        ['312', 6],\n        ['313', 6],\n        ['314', 6],\n        ['315', 6],\n        ['316', 6],\n        ['320', 6],\n        ['321', 6],\n        ['322', 6],\n        ['323', 6],\n        ['324', 6],\n        ['325', 6],\n        ['326', 6],\n        ['327', 6],\n        ['328', 6],\n        ['329', 6],\n        ['330', 6],\n        ['331', 6],\n        ['332', 6],\n        ['333', 6],\n        ['334', 6],\n        ['335', 6],\n        ['336', 6],\n        ['340', 6],\n        ['341', 6],\n        ['342', 6],\n        ['343', 6],\n        ['344', 6],\n        ['345', 6],\n        ['346', 6],\n        ['347', 6],\n        ['348', 6],\n        ['349', 6],\n        ['350', 6],\n        ['351', 6],\n        ['352', 6],\n        ['353', 6],\n        ['354', 6],\n        ['355', 6],\n        ['356', 6],\n        ['357', 6],\n        ['360', 6],\n        ['361', 6],\n        ['362', 6],\n        ['363', 6],\n        ['364', 6],\n        ['365', 6],\n        ['366', 6],\n        ['367', 6],\n        ['368', 6],\n        ['369', 6],\n        ['390', FieldParser.VARIABLE_LENGTH, 15],\n        ['391', FieldParser.VARIABLE_LENGTH, 18],\n        ['392', FieldParser.VARIABLE_LENGTH, 15],\n        ['393', FieldParser.VARIABLE_LENGTH, 18],\n        ['703', FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.FOUR_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        ['7001', 13],\n        ['7002', FieldParser.VARIABLE_LENGTH, 30],\n        ['7003', 10],\n        ['8001', 14],\n        ['8002', FieldParser.VARIABLE_LENGTH, 20],\n        ['8003', FieldParser.VARIABLE_LENGTH, 30],\n        ['8004', FieldParser.VARIABLE_LENGTH, 30],\n        ['8005', 6],\n        ['8006', 18],\n        ['8007', FieldParser.VARIABLE_LENGTH, 30],\n        ['8008', FieldParser.VARIABLE_LENGTH, 12],\n        ['8018', 18],\n        ['8020', FieldParser.VARIABLE_LENGTH, 25],\n        ['8100', 6],\n        ['8101', 10],\n        ['8102', 2],\n        ['8110', FieldParser.VARIABLE_LENGTH, 70],\n        ['8200', FieldParser.VARIABLE_LENGTH, 70],\n    ];\n\n    class GeneralAppIdDecoder {\n        constructor(information) {\n            this.buffer = new StringBuilder();\n            this.information = information;\n        }\n        decodeAllCodes(buff, initialPosition) {\n            let currentPosition = initialPosition;\n            let remaining = null;\n            do {\n                let info = this.decodeGeneralPurposeField(currentPosition, remaining);\n                let parsedFields = FieldParser.parseFieldsInGeneralPurpose(info.getNewString());\n                if (parsedFields != null) {\n                    buff.append(parsedFields);\n                }\n                if (info.isRemaining()) {\n                    remaining = '' + info.getRemainingValue();\n                }\n                else {\n                    remaining = null;\n                }\n                if (currentPosition === info.getNewPosition()) { // No step forward!\n                    break;\n                }\n                currentPosition = info.getNewPosition();\n            } while (true);\n            return buff.toString();\n        }\n        isStillNumeric(pos) {\n            // It's numeric if it still has 7 positions\n            // and one of the first 4 bits is \"1\".\n            if (pos + 7 > this.information.getSize()) {\n                return pos + 4 <= this.information.getSize();\n            }\n            for (let i = pos; i < pos + 3; ++i) {\n                if (this.information.get(i)) {\n                    return true;\n                }\n            }\n            return this.information.get(pos + 3);\n        }\n        decodeNumeric(pos) {\n            if (pos + 7 > this.information.getSize()) {\n                let numeric = this.extractNumericValueFromBitArray(pos, 4);\n                if (numeric === 0) {\n                    return new DecodedNumeric(this.information.getSize(), DecodedNumeric.FNC1, DecodedNumeric.FNC1);\n                }\n                return new DecodedNumeric(this.information.getSize(), numeric - 1, DecodedNumeric.FNC1);\n            }\n            let numeric = this.extractNumericValueFromBitArray(pos, 7);\n            let digit1 = (numeric - 8) / 11;\n            let digit2 = (numeric - 8) % 11;\n            return new DecodedNumeric(pos + 7, digit1, digit2);\n        }\n        extractNumericValueFromBitArray(pos, bits) {\n            return GeneralAppIdDecoder.extractNumericValueFromBitArray(this.information, pos, bits);\n        }\n        static extractNumericValueFromBitArray(information, pos, bits) {\n            let value = 0;\n            for (let i = 0; i < bits; ++i) {\n                if (information.get(pos + i)) {\n                    value |= 1 << (bits - i - 1);\n                }\n            }\n            return value;\n        }\n        decodeGeneralPurposeField(pos, remaining) {\n            // this.buffer.setLength(0);\n            this.buffer.setLengthToZero();\n            if (remaining != null) {\n                this.buffer.append(remaining);\n            }\n            this.current.setPosition(pos);\n            let lastDecoded = this.parseBlocks();\n            if (lastDecoded != null && lastDecoded.isRemaining()) {\n                return new DecodedInformation(this.current.getPosition(), this.buffer.toString(), lastDecoded.getRemainingValue());\n            }\n            return new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n        }\n        parseBlocks() {\n            let isFinished;\n            let result;\n            do {\n                let initialPosition = this.current.getPosition();\n                if (this.current.isAlpha()) {\n                    result = this.parseAlphaBlock();\n                    isFinished = result.isFinished();\n                }\n                else if (this.current.isIsoIec646()) {\n                    result = this.parseIsoIec646Block();\n                    isFinished = result.isFinished();\n                }\n                else { // it must be numeric\n                    result = this.parseNumericBlock();\n                    isFinished = result.isFinished();\n                }\n                let positionChanged = initialPosition !== this.current.getPosition();\n                if (!positionChanged && !isFinished) {\n                    break;\n                }\n            } while (!isFinished);\n            return result.getDecodedInformation();\n        }\n        parseNumericBlock() {\n            while (this.isStillNumeric(this.current.getPosition())) {\n                let numeric = this.decodeNumeric(this.current.getPosition());\n                this.current.setPosition(numeric.getNewPosition());\n                if (numeric.isFirstDigitFNC1()) {\n                    let information;\n                    if (numeric.isSecondDigitFNC1()) {\n                        information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    }\n                    else {\n                        information = new DecodedInformation(this.current.getPosition(), this.buffer.toString(), numeric.getSecondDigit());\n                    }\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(numeric.getFirstDigit());\n                if (numeric.isSecondDigitFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(numeric.getSecondDigit());\n            }\n            if (this.isNumericToAlphaNumericLatch(this.current.getPosition())) {\n                this.current.setAlpha();\n                this.current.incrementPosition(4);\n            }\n            return new BlockParsedResult(false);\n        }\n        parseIsoIec646Block() {\n            while (this.isStillIsoIec646(this.current.getPosition())) {\n                let iso = this.decodeIsoIec646(this.current.getPosition());\n                this.current.setPosition(iso.getNewPosition());\n                if (iso.isFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information);\n                }\n                this.buffer.append(iso.getValue());\n            }\n            if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n                this.current.incrementPosition(3);\n                this.current.setNumeric();\n            }\n            else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n                if (this.current.getPosition() + 5 < this.information.getSize()) {\n                    this.current.incrementPosition(5);\n                }\n                else {\n                    this.current.setPosition(this.information.getSize());\n                }\n                this.current.setAlpha();\n            }\n            return new BlockParsedResult(false);\n        }\n        parseAlphaBlock() {\n            while (this.isStillAlpha(this.current.getPosition())) {\n                let alpha = this.decodeAlphanumeric(this.current.getPosition());\n                this.current.setPosition(alpha.getNewPosition());\n                if (alpha.isFNC1()) {\n                    let information = new DecodedInformation(this.current.getPosition(), this.buffer.toString());\n                    return new BlockParsedResult(true, information); // end of the char block\n                }\n                this.buffer.append(alpha.getValue());\n            }\n            if (this.isAlphaOr646ToNumericLatch(this.current.getPosition())) {\n                this.current.incrementPosition(3);\n                this.current.setNumeric();\n            }\n            else if (this.isAlphaTo646ToAlphaLatch(this.current.getPosition())) {\n                if (this.current.getPosition() + 5 < this.information.getSize()) {\n                    this.current.incrementPosition(5);\n                }\n                else {\n                    this.current.setPosition(this.information.getSize());\n                }\n                this.current.setIsoIec646();\n            }\n            return new BlockParsedResult(false);\n        }\n        isStillIsoIec646(pos) {\n            if (pos + 5 > this.information.getSize()) {\n                return false;\n            }\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue >= 5 && fiveBitValue < 16) {\n                return true;\n            }\n            if (pos + 7 > this.information.getSize()) {\n                return false;\n            }\n            let sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n            if (sevenBitValue >= 64 && sevenBitValue < 116) {\n                return true;\n            }\n            if (pos + 8 > this.information.getSize()) {\n                return false;\n            }\n            let eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n            return eightBitValue >= 232 && eightBitValue < 253;\n        }\n        decodeIsoIec646(pos) {\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue === 15) {\n                return new DecodedChar(pos + 5, DecodedChar.FNC1);\n            }\n            if (fiveBitValue >= 5 && fiveBitValue < 15) {\n                return new DecodedChar(pos + 5, ('0' + (fiveBitValue - 5)));\n            }\n            let sevenBitValue = this.extractNumericValueFromBitArray(pos, 7);\n            if (sevenBitValue >= 64 && sevenBitValue < 90) {\n                return new DecodedChar(pos + 7, ('' + (sevenBitValue + 1)));\n            }\n            if (sevenBitValue >= 90 && sevenBitValue < 116) {\n                return new DecodedChar(pos + 7, ('' + (sevenBitValue + 7)));\n            }\n            let eightBitValue = this.extractNumericValueFromBitArray(pos, 8);\n            let c;\n            switch (eightBitValue) {\n                case 232:\n                    c = '!';\n                    break;\n                case 233:\n                    c = '\"';\n                    break;\n                case 234:\n                    c = '%';\n                    break;\n                case 235:\n                    c = '&';\n                    break;\n                case 236:\n                    c = '\\'';\n                    break;\n                case 237:\n                    c = '(';\n                    break;\n                case 238:\n                    c = ')';\n                    break;\n                case 239:\n                    c = '*';\n                    break;\n                case 240:\n                    c = '+';\n                    break;\n                case 241:\n                    c = ',';\n                    break;\n                case 242:\n                    c = '-';\n                    break;\n                case 243:\n                    c = '.';\n                    break;\n                case 244:\n                    c = '/';\n                    break;\n                case 245:\n                    c = ':';\n                    break;\n                case 246:\n                    c = ';';\n                    break;\n                case 247:\n                    c = '<';\n                    break;\n                case 248:\n                    c = '=';\n                    break;\n                case 249:\n                    c = '>';\n                    break;\n                case 250:\n                    c = '?';\n                    break;\n                case 251:\n                    c = '_';\n                    break;\n                case 252:\n                    c = ' ';\n                    break;\n                default:\n                    throw new FormatException();\n            }\n            return new DecodedChar(pos + 8, c);\n        }\n        isStillAlpha(pos) {\n            if (pos + 5 > this.information.getSize()) {\n                return false;\n            }\n            // We now check if it's a valid 5-bit value (0..9 and FNC1)\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue >= 5 && fiveBitValue < 16) {\n                return true;\n            }\n            if (pos + 6 > this.information.getSize()) {\n                return false;\n            }\n            let sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n            return sixBitValue >= 16 && sixBitValue < 63; // 63 not included\n        }\n        decodeAlphanumeric(pos) {\n            let fiveBitValue = this.extractNumericValueFromBitArray(pos, 5);\n            if (fiveBitValue === 15) {\n                return new DecodedChar(pos + 5, DecodedChar.FNC1);\n            }\n            if (fiveBitValue >= 5 && fiveBitValue < 15) {\n                return new DecodedChar(pos + 5, ('0' + (fiveBitValue - 5)));\n            }\n            let sixBitValue = this.extractNumericValueFromBitArray(pos, 6);\n            if (sixBitValue >= 32 && sixBitValue < 58) {\n                return new DecodedChar(pos + 6, ('' + (sixBitValue + 33)));\n            }\n            let c;\n            switch (sixBitValue) {\n                case 58:\n                    c = '*';\n                    break;\n                case 59:\n                    c = ',';\n                    break;\n                case 60:\n                    c = '-';\n                    break;\n                case 61:\n                    c = '.';\n                    break;\n                case 62:\n                    c = '/';\n                    break;\n                default:\n                    throw new IllegalStateException('Decoding invalid alphanumeric value: ' + sixBitValue);\n            }\n            return new DecodedChar(pos + 6, c);\n        }\n        isAlphaTo646ToAlphaLatch(pos) {\n            if (pos + 1 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = 0; i < 5 && i + pos < this.information.getSize(); ++i) {\n                if (i === 2) {\n                    if (!this.information.get(pos + 2)) {\n                        return false;\n                    }\n                }\n                else if (this.information.get(pos + i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        isAlphaOr646ToNumericLatch(pos) {\n            // Next is alphanumeric if there are 3 positions and they are all zeros\n            if (pos + 3 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = pos; i < pos + 3; ++i) {\n                if (this.information.get(i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        isNumericToAlphaNumericLatch(pos) {\n            // Next is alphanumeric if there are 4 positions and they are all zeros, or\n            // if there is a subset of this just before the end of the symbol\n            if (pos + 1 > this.information.getSize()) {\n                return false;\n            }\n            for (let i = 0; i < 4 && i + pos < this.information.getSize(); ++i) {\n                if (this.information.get(pos + i)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    class AbstractExpandedDecoder {\n        constructor(information) {\n            this.information = information;\n            this.generalDecoder = new GeneralAppIdDecoder(information);\n        }\n        getInformation() {\n            return this.information;\n        }\n        getGeneralDecoder() {\n            return this.generalDecoder;\n        }\n    }\n\n    class AI01decoder extends AbstractExpandedDecoder {\n        constructor(information) {\n            super(information);\n        }\n        encodeCompressedGtin(buf, currentPos) {\n            buf.append('(01)');\n            let initialPosition = buf.length();\n            buf.append('9');\n            this.encodeCompressedGtinWithoutAI(buf, currentPos, initialPosition);\n        }\n        encodeCompressedGtinWithoutAI(buf, currentPos, initialBufferPosition) {\n            for (let i = 0; i < 4; ++i) {\n                let currentBlock = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos + 10 * i, 10);\n                if (currentBlock / 100 === 0) {\n                    buf.append('0');\n                }\n                if (currentBlock / 10 === 0) {\n                    buf.append('0');\n                }\n                buf.append(currentBlock);\n            }\n            AI01decoder.appendCheckDigit(buf, initialBufferPosition);\n        }\n        static appendCheckDigit(buf, currentPos) {\n            let checkDigit = 0;\n            for (let i = 0; i < 13; i++) {\n                // let digit = buf.charAt(i + currentPos) - '0';\n                // To be checked\n                let digit = buf.charAt(i + currentPos).charCodeAt(0) - '0'.charCodeAt(0);\n                checkDigit += (i & 0x01) === 0 ? 3 * digit : digit;\n            }\n            checkDigit = 10 - (checkDigit % 10);\n            if (checkDigit === 10) {\n                checkDigit = 0;\n            }\n            buf.append(checkDigit);\n        }\n    }\n    AI01decoder.GTIN_SIZE = 40;\n\n    class AI01AndOtherAIs extends AI01decoder {\n        // the second one is the encodation method, and the other two are for the variable length\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            let buff = new StringBuilder();\n            buff.append('(01)');\n            let initialGtinPosition = buff.length();\n            let firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n            buff.append(firstGtinDigit);\n            this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n            return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n        }\n    }\n    AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; // first bit encodes the linkage flag,\n\n    class AnyAIDecoder extends AbstractExpandedDecoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            let buf = new StringBuilder();\n            return this.getGeneralDecoder().decodeAllCodes(buf, AnyAIDecoder.HEADER_SIZE);\n        }\n    }\n    AnyAIDecoder.HEADER_SIZE = 2 + 1 + 2;\n\n    class AI01weightDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        encodeCompressedWeight(buf, currentPos, weightSize) {\n            let originalWeightNumeric = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, weightSize);\n            this.addWeightCode(buf, originalWeightNumeric);\n            let weightNumeric = this.checkWeight(originalWeightNumeric);\n            let currentDivisor = 100000;\n            for (let i = 0; i < 5; ++i) {\n                if (weightNumeric / currentDivisor === 0) {\n                    buf.append('0');\n                }\n                currentDivisor /= 10;\n            }\n            buf.append(weightNumeric);\n        }\n    }\n\n    class AI013x0xDecoder extends AI01weightDecoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() != AI013x0xDecoder.HEADER_SIZE + AI01weightDecoder.GTIN_SIZE + AI013x0xDecoder.WEIGHT_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI013x0xDecoder.HEADER_SIZE);\n            this.encodeCompressedWeight(buf, AI013x0xDecoder.HEADER_SIZE + AI01weightDecoder.GTIN_SIZE, AI013x0xDecoder.WEIGHT_SIZE);\n            return buf.toString();\n        }\n    }\n    AI013x0xDecoder.HEADER_SIZE = 4 + 1;\n    AI013x0xDecoder.WEIGHT_SIZE = 15;\n\n    class AI013103decoder extends AI013x0xDecoder {\n        constructor(information) {\n            super(information);\n        }\n        addWeightCode(buf, weight) {\n            buf.append('(3103)');\n        }\n        checkWeight(weight) {\n            return weight;\n        }\n    }\n\n    class AI01320xDecoder extends AI013x0xDecoder {\n        constructor(information) {\n            super(information);\n        }\n        addWeightCode(buf, weight) {\n            if (weight < 10000) {\n                buf.append('(3202)');\n            }\n            else {\n                buf.append('(3203)');\n            }\n        }\n        checkWeight(weight) {\n            if (weight < 10000) {\n                return weight;\n            }\n            return weight - 10000;\n        }\n    }\n\n    class AI01392xDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() < AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI01392xDecoder.HEADER_SIZE);\n            let lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE, AI01392xDecoder.LAST_DIGIT_SIZE);\n            buf.append('(392');\n            buf.append(lastAIdigit);\n            buf.append(')');\n            let decodedInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01392xDecoder.LAST_DIGIT_SIZE, null);\n            buf.append(decodedInformation.getNewString());\n            return buf.toString();\n        }\n    }\n    AI01392xDecoder.HEADER_SIZE = 5 + 1 + 2;\n    AI01392xDecoder.LAST_DIGIT_SIZE = 2;\n\n    class AI01393xDecoder extends AI01decoder {\n        constructor(information) {\n            super(information);\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() < AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI01393xDecoder.HEADER_SIZE);\n            let lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE, AI01393xDecoder.LAST_DIGIT_SIZE);\n            buf.append('(393');\n            buf.append(lastAIdigit);\n            buf.append(')');\n            let firstThreeDigits = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01393xDecoder.LAST_DIGIT_SIZE, AI01393xDecoder.FIRST_THREE_DIGITS_SIZE);\n            if (firstThreeDigits / 100 == 0) {\n                buf.append('0');\n            }\n            if (firstThreeDigits / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(firstThreeDigits);\n            let generalInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01393xDecoder.HEADER_SIZE + AI01decoder.GTIN_SIZE + AI01393xDecoder.LAST_DIGIT_SIZE + AI01393xDecoder.FIRST_THREE_DIGITS_SIZE, null);\n            buf.append(generalInformation.getNewString());\n            return buf.toString();\n        }\n    }\n    AI01393xDecoder.HEADER_SIZE = 5 + 1 + 2;\n    AI01393xDecoder.LAST_DIGIT_SIZE = 2;\n    AI01393xDecoder.FIRST_THREE_DIGITS_SIZE = 10;\n\n    class AI013x0x1xDecoder extends AI01weightDecoder {\n        constructor(information, firstAIdigits, dateCode) {\n            super(information);\n            this.dateCode = dateCode;\n            this.firstAIdigits = firstAIdigits;\n        }\n        parseInformation() {\n            if (this.getInformation().getSize() != AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE + AI013x0x1xDecoder.DATE_SIZE) {\n                throw new NotFoundException();\n            }\n            let buf = new StringBuilder();\n            this.encodeCompressedGtin(buf, AI013x0x1xDecoder.HEADER_SIZE);\n            this.encodeCompressedWeight(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE, AI013x0x1xDecoder.WEIGHT_SIZE);\n            this.encodeCompressedDate(buf, AI013x0x1xDecoder.HEADER_SIZE + AI013x0x1xDecoder.GTIN_SIZE + AI013x0x1xDecoder.WEIGHT_SIZE);\n            return buf.toString();\n        }\n        encodeCompressedDate(buf, currentPos) {\n            let numericDate = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, AI013x0x1xDecoder.DATE_SIZE);\n            if (numericDate == 38400) {\n                return;\n            }\n            buf.append('(');\n            buf.append(this.dateCode);\n            buf.append(')');\n            let day = numericDate % 32;\n            numericDate /= 32;\n            let month = numericDate % 12 + 1;\n            numericDate /= 12;\n            let year = numericDate;\n            if (year / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(year);\n            if (month / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(month);\n            if (day / 10 == 0) {\n                buf.append('0');\n            }\n            buf.append(day);\n        }\n        addWeightCode(buf, weight) {\n            buf.append('(');\n            buf.append(this.firstAIdigits);\n            buf.append(weight / 100000);\n            buf.append(')');\n        }\n        checkWeight(weight) {\n            return weight % 100000;\n        }\n    }\n    AI013x0x1xDecoder.HEADER_SIZE = 7 + 1;\n    AI013x0x1xDecoder.WEIGHT_SIZE = 20;\n    AI013x0x1xDecoder.DATE_SIZE = 16;\n\n    function createDecoder(information) {\n        try {\n            if (information.get(1)) {\n                return new AI01AndOtherAIs(information);\n            }\n            if (!information.get(2)) {\n                return new AnyAIDecoder(information);\n            }\n            let fourBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 4);\n            switch (fourBitEncodationMethod) {\n                case 4: return new AI013103decoder(information);\n                case 5: return new AI01320xDecoder(information);\n            }\n            let fiveBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 5);\n            switch (fiveBitEncodationMethod) {\n                case 12: return new AI01392xDecoder(information);\n                case 13: return new AI01393xDecoder(information);\n            }\n            let sevenBitEncodationMethod = GeneralAppIdDecoder.extractNumericValueFromBitArray(information, 1, 7);\n            switch (sevenBitEncodationMethod) {\n                case 56: return new AI013x0x1xDecoder(information, '310', '11');\n                case 57: return new AI013x0x1xDecoder(information, '320', '11');\n                case 58: return new AI013x0x1xDecoder(information, '310', '13');\n                case 59: return new AI013x0x1xDecoder(information, '320', '13');\n                case 60: return new AI013x0x1xDecoder(information, '310', '15');\n                case 61: return new AI013x0x1xDecoder(information, '320', '15');\n                case 62: return new AI013x0x1xDecoder(information, '310', '17');\n                case 63: return new AI013x0x1xDecoder(information, '320', '17');\n            }\n        }\n        catch (e) {\n            console.log(e);\n            throw new IllegalStateException('unknown decoder: ' + information);\n        }\n    }\n\n    class ExpandedPair {\n        constructor(leftChar, rightChar, finderPatter, mayBeLast) {\n            this.leftchar = leftChar;\n            this.rightchar = rightChar;\n            this.finderpattern = finderPatter;\n            this.maybeLast = mayBeLast;\n        }\n        mayBeLast() {\n            return this.maybeLast;\n        }\n        getLeftChar() {\n            return this.leftchar;\n        }\n        getRightChar() {\n            return this.rightchar;\n        }\n        getFinderPattern() {\n            return this.finderpattern;\n        }\n        mustBeLast() {\n            return this.rightchar == null;\n        }\n        toString() {\n            return '[ ' + this.leftchar + ', ' + this.rightchar + ' : ' + (this.finderpattern == null ? 'null' : this.finderpattern.getValue()) + ' ]';\n        }\n        static equals(o1, o2) {\n            if (!(o1 instanceof ExpandedPair)) {\n                return false;\n            }\n            return ExpandedPair.equalsOrNull(o1.leftchar, o2.leftchar) &&\n                ExpandedPair.equalsOrNull(o1.rightchar, o2.rightchar) &&\n                ExpandedPair.equalsOrNull(o1.finderpattern, o2.finderpattern);\n        }\n        static equalsOrNull(o1, o2) {\n            return o1 === null ? o2 === null : ExpandedPair.equals(o1, o2);\n        }\n        hashCode() {\n            // return ExpandedPair.hashNotNull(leftChar) ^ hashNotNull(rightChar) ^ hashNotNull(finderPattern);\n            let value = this.leftchar.getValue() ^ this.rightchar.getValue() ^ this.finderpattern.getValue();\n            return value;\n        }\n    }\n\n    class ExpandedRow {\n        constructor(pairs, rowNumber, wasReversed) {\n            this.pairs = pairs;\n            this.rowNumber = rowNumber;\n            this.wasReversed = wasReversed;\n        }\n        getPairs() {\n            return this.pairs;\n        }\n        getRowNumber() {\n            return this.rowNumber;\n        }\n        isReversed() {\n            return this.wasReversed;\n        }\n        // check implementation\n        isEquivalent(otherPairs) {\n            return this.checkEqualitity(this, otherPairs);\n        }\n        // @Override\n        toString() {\n            return '{ ' + this.pairs + ' }';\n        }\n        /**\n         * Two rows are equal if they contain the same pairs in the same order.\n         */\n        // @Override\n        // check implementation\n        equals(o1, o2) {\n            if (!(o1 instanceof ExpandedRow)) {\n                return false;\n            }\n            return this.checkEqualitity(o1, o2) && o1.wasReversed === o2.wasReversed;\n        }\n        checkEqualitity(pair1, pair2) {\n            if (!pair1 || !pair2)\n                return;\n            let result;\n            pair1.forEach((e1, i) => {\n                pair2.forEach(e2 => {\n                    if (e1.getLeftChar().getValue() === e2.getLeftChar().getValue() && e1.getRightChar().getValue() === e2.getRightChar().getValue() && e1.getFinderPatter().getValue() === e2.getFinderPatter().getValue()) {\n                        result = true;\n                    }\n                });\n            });\n            return result;\n        }\n    }\n\n    // import java.util.ArrayList;\n    // import java.util.Iterator;\n    // import java.util.List;\n    // import java.util.Map;\n    // import java.util.Collections;\n    /** @experimental */\n    class RSSExpandedReader extends AbstractRSSReader {\n        constructor() {\n            super(...arguments);\n            this.pairs = new Array(RSSExpandedReader.MAX_PAIRS);\n            this.rows = new Array();\n            this.startEnd = [2];\n        }\n        decodeRow(rowNumber, row, hints) {\n            // Rows can start with even pattern in case in prev rows there where odd number of patters.\n            // So lets try twice\n            // this.pairs.clear();\n            this.pairs.length = 0;\n            this.startFromEven = false;\n            try {\n                return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n            }\n            catch (e) {\n                // OK\n                // console.log(e);\n            }\n            this.pairs.length = 0;\n            this.startFromEven = true;\n            return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n        }\n        reset() {\n            this.pairs.length = 0;\n            this.rows.length = 0;\n        }\n        // Not private for testing\n        decodeRow2pairs(rowNumber, row) {\n            let done = false;\n            while (!done) {\n                try {\n                    this.pairs.push(this.retrieveNextPair(row, this.pairs, rowNumber));\n                }\n                catch (error) {\n                    if (error instanceof NotFoundException) {\n                        if (!this.pairs.length) {\n                            throw new NotFoundException();\n                        }\n                        // exit this loop when retrieveNextPair() fails and throws\n                        done = true;\n                    }\n                }\n            }\n            // TODO: verify sequence of finder patterns as in checkPairSequence()\n            if (this.checkChecksum()) {\n                return this.pairs;\n            }\n            let tryStackedDecode;\n            if (this.rows.length) {\n                tryStackedDecode = true;\n            }\n            else {\n                tryStackedDecode = false;\n            }\n            // let tryStackedDecode = !this.rows.isEmpty();\n            this.storeRow(rowNumber, false); // TODO: deal with reversed rows\n            if (tryStackedDecode) {\n                // When the image is 180-rotated, then rows are sorted in wrong direction.\n                // Try twice with both the directions.\n                let ps = this.checkRowsBoolean(false);\n                if (ps != null) {\n                    return ps;\n                }\n                ps = this.checkRowsBoolean(true);\n                if (ps != null) {\n                    return ps;\n                }\n            }\n            throw new NotFoundException();\n        }\n        // Need to Verify\n        checkRowsBoolean(reverse) {\n            // Limit number of rows we are checking\n            // We use recursive algorithm with pure complexity and don't want it to take forever\n            // Stacked barcode can have up to 11 rows, so 25 seems reasonable enough\n            if (this.rows.length > 25) {\n                this.rows.length = 0; // We will never have a chance to get result, so clear it\n                return null;\n            }\n            this.pairs.length = 0;\n            if (reverse) {\n                this.rows = this.rows.reverse();\n                // Collections.reverse(this.rows);\n            }\n            let ps = null;\n            try {\n                ps = this.checkRows(new Array(), 0);\n            }\n            catch (e) {\n                // OK\n                console.log(e);\n            }\n            if (reverse) {\n                this.rows = this.rows.reverse();\n                // Collections.reverse(this.rows);\n            }\n            return ps;\n        }\n        // Try to construct a valid rows sequence\n        // Recursion is used to implement backtracking\n        checkRows(collectedRows, currentRow) {\n            for (let i = currentRow; i < this.rows.length; i++) {\n                let row = this.rows[i];\n                this.pairs.length = 0;\n                for (let collectedRow of collectedRows) {\n                    this.pairs.push(collectedRow.getPairs());\n                }\n                this.pairs.push(row.getPairs());\n                if (!RSSExpandedReader.isValidSequence(this.pairs)) {\n                    continue;\n                }\n                if (this.checkChecksum()) {\n                    return this.pairs;\n                }\n                let rs = new Array(collectedRows);\n                rs.push(row);\n                try {\n                    // Recursion: try to add more rows\n                    return this.checkRows(rs, i + 1);\n                }\n                catch (e) {\n                    // We failed, try the next candidate\n                    console.log(e);\n                }\n            }\n            throw new NotFoundException();\n        }\n        // Whether the pairs form a valid find pattern sequence,\n        // either complete or a prefix\n        static isValidSequence(pairs) {\n            for (let sequence of RSSExpandedReader.FINDER_PATTERN_SEQUENCES) {\n                if (pairs.length > sequence.length) {\n                    continue;\n                }\n                let stop = true;\n                for (let j = 0; j < pairs.length; j++) {\n                    if (pairs[j].getFinderPattern().getValue() != sequence[j]) {\n                        stop = false;\n                        break;\n                    }\n                }\n                if (stop) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        storeRow(rowNumber, wasReversed) {\n            // Discard if duplicate above or below; otherwise insert in order by row number.\n            let insertPos = 0;\n            let prevIsSame = false;\n            let nextIsSame = false;\n            while (insertPos < this.rows.length) {\n                let erow = this.rows[insertPos];\n                if (erow.getRowNumber() > rowNumber) {\n                    nextIsSame = erow.isEquivalent(this.pairs);\n                    break;\n                }\n                prevIsSame = erow.isEquivalent(this.pairs);\n                insertPos++;\n            }\n            if (nextIsSame || prevIsSame) {\n                return;\n            }\n            // When the row was partially decoded (e.g. 2 pairs found instead of 3),\n            // it will prevent us from detecting the barcode.\n            // Try to merge partial rows\n            // Check whether the row is part of an allready detected row\n            if (RSSExpandedReader.isPartialRow(this.pairs, this.rows)) {\n                return;\n            }\n            this.rows.push(insertPos, new ExpandedRow(this.pairs, rowNumber, wasReversed));\n            this.removePartialRows(this.pairs, this.rows);\n        }\n        // Remove all the rows that contains only specified pairs\n        removePartialRows(pairs, rows) {\n            // for (Iterator<ExpandedRow> iterator = rows.iterator(); iterator.hasNext();) {\n            //   ExpandedRow r = iterator.next();\n            //   if (r.getPairs().size() == pairs.size()) {\n            //     continue;\n            //   }\n            //   boolean allFound = true;\n            //   for (ExpandedPair p : r.getPairs()) {\n            //     boolean found = false;\n            //     for (ExpandedPair pp : pairs) {\n            //       if (p.equals(pp)) {\n            //         found = true;\n            //         break;\n            //       }\n            //     }\n            //     if (!found) {\n            //       allFound = false;\n            //       break;\n            //     }\n            //   }\n            //   if (allFound) {\n            //     // 'pairs' contains all the pairs from the row 'r'\n            //     iterator.remove();\n            //   }\n            // }\n            for (let row of rows) {\n                if (row.getPairs().length === pairs.length) {\n                    continue;\n                }\n                for (let p of row.getPairs()) {\n                    for (let pp of pairs) {\n                        if (ExpandedPair.equals(p, pp)) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        // Returns true when one of the rows already contains all the pairs\n        static isPartialRow(pairs, rows) {\n            for (let r of rows) {\n                let allFound = true;\n                for (let p of pairs) {\n                    let found = false;\n                    for (let pp of r.getPairs()) {\n                        if (p.equals(pp)) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        allFound = false;\n                        break;\n                    }\n                }\n                if (allFound) {\n                    // the row 'r' contain all the pairs from 'pairs'\n                    return true;\n                }\n            }\n            return false;\n        }\n        // Only used for unit testing\n        getRows() {\n            return this.rows;\n        }\n        // Not private for unit testing\n        static constructResult(pairs) {\n            let binary = BitArrayBuilder.buildBitArray(pairs);\n            let decoder = createDecoder(binary);\n            let resultingString = decoder.parseInformation();\n            let firstPoints = pairs[0].getFinderPattern().getResultPoints();\n            let lastPoints = pairs[pairs.length - 1].getFinderPattern().getResultPoints();\n            let points = [firstPoints[0], firstPoints[1], lastPoints[0], lastPoints[1]];\n            return new Result(resultingString, null, null, points, BarcodeFormat$1.RSS_EXPANDED, null);\n        }\n        checkChecksum() {\n            let firstPair = this.pairs.get(0);\n            let checkCharacter = firstPair.getLeftChar();\n            let firstCharacter = firstPair.getRightChar();\n            if (firstCharacter == null) {\n                return false;\n            }\n            let checksum = firstCharacter.getChecksumPortion();\n            let s = 2;\n            for (let i = 1; i < this.pairs.size(); ++i) {\n                let currentPair = this.pairs.get(i);\n                checksum += currentPair.getLeftChar().getChecksumPortion();\n                s++;\n                let currentRightChar = currentPair.getRightChar();\n                if (currentRightChar != null) {\n                    checksum += currentRightChar.getChecksumPortion();\n                    s++;\n                }\n            }\n            checksum %= 211;\n            let checkCharacterValue = 211 * (s - 4) + checksum;\n            return checkCharacterValue == checkCharacter.getValue();\n        }\n        static getNextSecondBar(row, initialPos) {\n            let currentPos;\n            if (row.get(initialPos)) {\n                currentPos = row.getNextUnset(initialPos);\n                currentPos = row.getNextSet(currentPos);\n            }\n            else {\n                currentPos = row.getNextSet(initialPos);\n                currentPos = row.getNextUnset(currentPos);\n            }\n            return currentPos;\n        }\n        // not private for testing\n        retrieveNextPair(row, previousPairs, rowNumber) {\n            let isOddPattern = previousPairs.length % 2 == 0;\n            if (this.startFromEven) {\n                isOddPattern = !isOddPattern;\n            }\n            let pattern;\n            let keepFinding = true;\n            let forcedOffset = -1;\n            do {\n                this.findNextPair(row, previousPairs, forcedOffset);\n                pattern = this.parseFoundFinderPattern(row, rowNumber, isOddPattern);\n                if (pattern == null) {\n                    forcedOffset = RSSExpandedReader.getNextSecondBar(row, this.startEnd[0]);\n                }\n                else {\n                    keepFinding = false;\n                }\n            } while (keepFinding);\n            // When stacked symbol is split over multiple rows, there's no way to guess if this pair can be last or not.\n            // boolean mayBeLast = checkPairSequence(previousPairs, pattern);\n            let leftChar = this.decodeDataCharacter(row, pattern, isOddPattern, true);\n            if (!this.isEmptyPair(previousPairs) && previousPairs[previousPairs.length - 1].mustBeLast()) {\n                throw new NotFoundException();\n            }\n            let rightChar;\n            try {\n                rightChar = this.decodeDataCharacter(row, pattern, isOddPattern, false);\n            }\n            catch (e) {\n                rightChar = null;\n                console.log(e);\n            }\n            return new ExpandedPair(leftChar, rightChar, pattern, true);\n        }\n        isEmptyPair(pairs) {\n            if (pairs.length === 0) {\n                return true;\n            }\n            return false;\n        }\n        findNextPair(row, previousPairs, forcedOffset) {\n            let counters = this.getDecodeFinderCounters();\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let width = row.getSize();\n            let rowOffset;\n            if (forcedOffset >= 0) {\n                rowOffset = forcedOffset;\n            }\n            else if (this.isEmptyPair(previousPairs)) {\n                rowOffset = 0;\n            }\n            else {\n                let lastPair = previousPairs[previousPairs.length - 1];\n                rowOffset = lastPair.getFinderPattern().getStartEnd()[1];\n            }\n            let searchingEvenPair = previousPairs.length % 2 != 0;\n            if (this.startFromEven) {\n                searchingEvenPair = !searchingEvenPair;\n            }\n            let isWhite = false;\n            while (rowOffset < width) {\n                isWhite = !row.get(rowOffset);\n                if (!isWhite) {\n                    break;\n                }\n                rowOffset++;\n            }\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) != isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition == 3) {\n                        if (searchingEvenPair) {\n                            RSSExpandedReader.reverseCounters(counters);\n                        }\n                        if (RSSExpandedReader.isFinderPattern(counters)) {\n                            this.startEnd[0] = patternStart;\n                            this.startEnd[1] = x;\n                            return;\n                        }\n                        if (searchingEvenPair) {\n                            RSSExpandedReader.reverseCounters(counters);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters[0] = counters[2];\n                        counters[1] = counters[3];\n                        counters[2] = 0;\n                        counters[3] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        static reverseCounters(counters) {\n            let length = counters.length;\n            for (let i = 0; i < length / 2; ++i) {\n                let tmp = counters[i];\n                counters[i] = counters[length - i - 1];\n                counters[length - i - 1] = tmp;\n            }\n        }\n        parseFoundFinderPattern(row, rowNumber, oddPattern) {\n            // Actually we found elements 2-5.\n            let firstCounter;\n            let start;\n            let end;\n            if (oddPattern) {\n                // If pattern number is odd, we need to locate element 1 *before* the current block.\n                let firstElementStart = this.startEnd[0] - 1;\n                // Locate element 1\n                while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n                    firstElementStart--;\n                }\n                firstElementStart++;\n                firstCounter = this.startEnd[0] - firstElementStart;\n                start = firstElementStart;\n                end = this.startEnd[1];\n            }\n            else {\n                // If pattern number is even, the pattern is reversed, so we need to locate element 1 *after* the current block.\n                start = this.startEnd[0];\n                end = row.getNextUnset(this.startEnd[1] + 1);\n                firstCounter = end - this.startEnd[1];\n            }\n            // Make 'counters' hold 1-4\n            let counters = this.getDecodeFinderCounters();\n            System.arraycopy(counters, 0, counters, 1, counters.length - 1);\n            counters[0] = firstCounter;\n            let value;\n            try {\n                value = this.parseFinderValue(counters, RSSExpandedReader.FINDER_PATTERNS);\n            }\n            catch (e) {\n                return null;\n            }\n            // return new FinderPattern(value, new int[] { start, end }, start, end, rowNumber});\n            return new FinderPattern(value, [start, end], start, end, rowNumber);\n        }\n        decodeDataCharacter(row, pattern, isOddPattern, leftChar) {\n            let counters = this.getDataCharacterCounters();\n            for (let x = 0; x < counters.length; x++) {\n                counters[x] = 0;\n            }\n            if (leftChar) {\n                RSSExpandedReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n            }\n            else {\n                RSSExpandedReader.recordPattern(row, pattern.getStartEnd()[1], counters);\n                // reverse it\n                for (let i = 0, j = counters.length - 1; i < j; i++, j--) {\n                    let temp = counters[i];\n                    counters[i] = counters[j];\n                    counters[j] = temp;\n                }\n            } // counters[] has the pixels of the module\n            let numModules = 17; // left and right data characters have all the same length\n            let elementWidth = MathUtils.sum(new Int32Array(counters)) / numModules;\n            // Sanity check: element width for pattern and the character should match\n            let expectedElementWidth = (pattern.getStartEnd()[1] - pattern.getStartEnd()[0]) / 15.0;\n            if (Math.abs(elementWidth - expectedElementWidth) / expectedElementWidth > 0.3) {\n                throw new NotFoundException();\n            }\n            let oddCounts = this.getOddCounts();\n            let evenCounts = this.getEvenCounts();\n            let oddRoundingErrors = this.getOddRoundingErrors();\n            let evenRoundingErrors = this.getEvenRoundingErrors();\n            for (let i = 0; i < counters.length; i++) {\n                let value = 1.0 * counters[i] / elementWidth;\n                let count = value + 0.5; // Round\n                if (count < 1) {\n                    if (value < 0.3) {\n                        throw new NotFoundException();\n                    }\n                    count = 1;\n                }\n                else if (count > 8) {\n                    if (value > 8.7) {\n                        throw new NotFoundException();\n                    }\n                    count = 8;\n                }\n                let offset = i / 2;\n                if ((i & 0x01) == 0) {\n                    oddCounts[offset] = count;\n                    oddRoundingErrors[offset] = value - count;\n                }\n                else {\n                    evenCounts[offset] = count;\n                    evenRoundingErrors[offset] = value - count;\n                }\n            }\n            this.adjustOddEvenCounts(numModules);\n            let weightRowNumber = 4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n            let oddSum = 0;\n            let oddChecksumPortion = 0;\n            for (let i = oddCounts.length - 1; i >= 0; i--) {\n                if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                    let weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i];\n                    oddChecksumPortion += oddCounts[i] * weight;\n                }\n                oddSum += oddCounts[i];\n            }\n            let evenChecksumPortion = 0;\n            // int evenSum = 0;\n            for (let i = evenCounts.length - 1; i >= 0; i--) {\n                if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n                    let weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i + 1];\n                    evenChecksumPortion += evenCounts[i] * weight;\n                }\n                // evenSum += evenCounts[i];\n            }\n            let checksumPortion = oddChecksumPortion + evenChecksumPortion;\n            if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n                throw new NotFoundException();\n            }\n            let group = (13 - oddSum) / 2;\n            let oddWidest = RSSExpandedReader.SYMBOL_WIDEST[group];\n            let evenWidest = 9 - oddWidest;\n            let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, true);\n            let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, false);\n            let tEven = RSSExpandedReader.EVEN_TOTAL_SUBSET[group];\n            let gSum = RSSExpandedReader.GSUM[group];\n            let value = vOdd * tEven + vEven + gSum;\n            return new DataCharacter(value, checksumPortion);\n        }\n        static isNotA1left(pattern, isOddPattern, leftChar) {\n            // A1: pattern.getValue is 0 (A), and it's an oddPattern, and it is a left char\n            return !(pattern.getValue() == 0 && isOddPattern && leftChar);\n        }\n        adjustOddEvenCounts(numModules) {\n            let oddSum = MathUtils.sum(new Int32Array(this.getOddCounts()));\n            let evenSum = MathUtils.sum(new Int32Array(this.getEvenCounts()));\n            let incrementOdd = false;\n            let decrementOdd = false;\n            if (oddSum > 13) {\n                decrementOdd = true;\n            }\n            else if (oddSum < 4) {\n                incrementOdd = true;\n            }\n            let incrementEven = false;\n            let decrementEven = false;\n            if (evenSum > 13) {\n                decrementEven = true;\n            }\n            else if (evenSum < 4) {\n                incrementEven = true;\n            }\n            let mismatch = oddSum + evenSum - numModules;\n            let oddParityBad = (oddSum & 0x01) == 1;\n            let evenParityBad = (evenSum & 0x01) == 0;\n            if (mismatch == 1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementEven = true;\n                }\n            }\n            else if (mismatch == -1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementEven = true;\n                }\n            }\n            else if (mismatch == 0) {\n                if (oddParityBad) {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Both bad\n                    if (oddSum < evenSum) {\n                        incrementOdd = true;\n                        decrementEven = true;\n                    }\n                    else {\n                        decrementOdd = true;\n                        incrementEven = true;\n                    }\n                }\n                else {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Nothing to do!\n                }\n            }\n            else {\n                throw new NotFoundException();\n            }\n            if (incrementOdd) {\n                if (decrementOdd) {\n                    throw new NotFoundException();\n                }\n                RSSExpandedReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementOdd) {\n                RSSExpandedReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (incrementEven) {\n                if (decrementEven) {\n                    throw new NotFoundException();\n                }\n                RSSExpandedReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementEven) {\n                RSSExpandedReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n            }\n        }\n    }\n    RSSExpandedReader.SYMBOL_WIDEST = [7, 5, 4, 3, 1];\n    RSSExpandedReader.EVEN_TOTAL_SUBSET = [4, 20, 52, 104, 204];\n    RSSExpandedReader.GSUM = [0, 348, 1388, 2948, 3988];\n    RSSExpandedReader.FINDER_PATTERNS = [\n        Int32Array.from([1, 8, 4, 1]),\n        Int32Array.from([3, 6, 4, 1]),\n        Int32Array.from([3, 4, 6, 1]),\n        Int32Array.from([3, 2, 8, 1]),\n        Int32Array.from([2, 6, 5, 1]),\n        Int32Array.from([2, 2, 9, 1]) // F\n    ];\n    RSSExpandedReader.WEIGHTS = [\n        [1, 3, 9, 27, 81, 32, 96, 77],\n        [20, 60, 180, 118, 143, 7, 21, 63],\n        [189, 145, 13, 39, 117, 140, 209, 205],\n        [193, 157, 49, 147, 19, 57, 171, 91],\n        [62, 186, 136, 197, 169, 85, 44, 132],\n        [185, 133, 188, 142, 4, 12, 36, 108],\n        [113, 128, 173, 97, 80, 29, 87, 50],\n        [150, 28, 84, 41, 123, 158, 52, 156],\n        [46, 138, 203, 187, 139, 206, 196, 166],\n        [76, 17, 51, 153, 37, 111, 122, 155],\n        [43, 129, 176, 106, 107, 110, 119, 146],\n        [16, 48, 144, 10, 30, 90, 59, 177],\n        [109, 116, 137, 200, 178, 112, 125, 164],\n        [70, 210, 208, 202, 184, 130, 179, 115],\n        [134, 191, 151, 31, 93, 68, 204, 190],\n        [148, 22, 66, 198, 172, 94, 71, 2],\n        [6, 18, 54, 162, 64, 192, 154, 40],\n        [120, 149, 25, 75, 14, 42, 126, 167],\n        [79, 26, 78, 23, 69, 207, 199, 175],\n        [103, 98, 83, 38, 114, 131, 182, 124],\n        [161, 61, 183, 127, 170, 88, 53, 159],\n        [55, 165, 73, 8, 24, 72, 5, 15],\n        [45, 135, 194, 160, 58, 174, 100, 89]\n    ];\n    RSSExpandedReader.FINDER_PAT_A = 0;\n    RSSExpandedReader.FINDER_PAT_B = 1;\n    RSSExpandedReader.FINDER_PAT_C = 2;\n    RSSExpandedReader.FINDER_PAT_D = 3;\n    RSSExpandedReader.FINDER_PAT_E = 4;\n    RSSExpandedReader.FINDER_PAT_F = 5;\n    RSSExpandedReader.FINDER_PATTERN_SEQUENCES = [\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_C],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n        [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F],\n    ];\n    RSSExpandedReader.MAX_PAIRS = 11;\n\n    class Pair extends DataCharacter {\n        constructor(value, checksumPortion, finderPattern) {\n            super(value, checksumPortion);\n            this.count = 0;\n            this.finderPattern = finderPattern;\n        }\n        getFinderPattern() {\n            return this.finderPattern;\n        }\n        getCount() {\n            return this.count;\n        }\n        incrementCount() {\n            this.count++;\n        }\n    }\n\n    class RSS14Reader extends AbstractRSSReader {\n        constructor() {\n            super(...arguments);\n            this.possibleLeftPairs = [];\n            this.possibleRightPairs = [];\n        }\n        decodeRow(rowNumber, row, hints) {\n            const leftPair = this.decodePair(row, false, rowNumber, hints);\n            RSS14Reader.addOrTally(this.possibleLeftPairs, leftPair);\n            row.reverse();\n            let rightPair = this.decodePair(row, true, rowNumber, hints);\n            RSS14Reader.addOrTally(this.possibleRightPairs, rightPair);\n            row.reverse();\n            for (let left of this.possibleLeftPairs) {\n                if (left.getCount() > 1) {\n                    for (let right of this.possibleRightPairs) {\n                        if (right.getCount() > 1 && RSS14Reader.checkChecksum(left, right)) {\n                            return RSS14Reader.constructResult(left, right);\n                        }\n                    }\n                }\n            }\n            throw new NotFoundException();\n        }\n        static addOrTally(possiblePairs, pair) {\n            if (pair == null) {\n                return;\n            }\n            let found = false;\n            for (let other of possiblePairs) {\n                if (other.getValue() === pair.getValue()) {\n                    other.incrementCount();\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                possiblePairs.push(pair);\n            }\n        }\n        reset() {\n            this.possibleLeftPairs.length = 0;\n            this.possibleRightPairs.length = 0;\n        }\n        static constructResult(leftPair, rightPair) {\n            let symbolValue = 4537077 * leftPair.getValue() + rightPair.getValue();\n            let text = new String(symbolValue).toString();\n            let buffer = new StringBuilder();\n            for (let i = 13 - text.length; i > 0; i--) {\n                buffer.append('0');\n            }\n            buffer.append(text);\n            let checkDigit = 0;\n            for (let i = 0; i < 13; i++) {\n                let digit = buffer.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n                checkDigit += ((i & 0x01) === 0) ? 3 * digit : digit;\n            }\n            checkDigit = 10 - (checkDigit % 10);\n            if (checkDigit === 10) {\n                checkDigit = 0;\n            }\n            buffer.append(checkDigit.toString());\n            let leftPoints = leftPair.getFinderPattern().getResultPoints();\n            let rightPoints = rightPair.getFinderPattern().getResultPoints();\n            return new Result(buffer.toString(), null, 0, [leftPoints[0], leftPoints[1], rightPoints[0], rightPoints[1]], BarcodeFormat$1.RSS_14, new Date().getTime());\n        }\n        static checkChecksum(leftPair, rightPair) {\n            let checkValue = (leftPair.getChecksumPortion() + 16 * rightPair.getChecksumPortion()) % 79;\n            let targetCheckValue = 9 * leftPair.getFinderPattern().getValue() + rightPair.getFinderPattern().getValue();\n            if (targetCheckValue > 72) {\n                targetCheckValue--;\n            }\n            if (targetCheckValue > 8) {\n                targetCheckValue--;\n            }\n            return checkValue === targetCheckValue;\n        }\n        decodePair(row, right, rowNumber, hints) {\n            try {\n                let startEnd = this.findFinderPattern(row, right);\n                let pattern = this.parseFoundFinderPattern(row, rowNumber, right, startEnd);\n                let resultPointCallback = hints == null ? null : hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n                if (resultPointCallback != null) {\n                    let center = (startEnd[0] + startEnd[1]) / 2.0;\n                    if (right) {\n                        // row is actually reversed\n                        center = row.getSize() - 1 - center;\n                    }\n                    resultPointCallback.foundPossibleResultPoint(new ResultPoint(center, rowNumber));\n                }\n                let outside = this.decodeDataCharacter(row, pattern, true);\n                let inside = this.decodeDataCharacter(row, pattern, false);\n                return new Pair(1597 * outside.getValue() + inside.getValue(), outside.getChecksumPortion() + 4 * inside.getChecksumPortion(), pattern);\n            }\n            catch (err) {\n                return null;\n            }\n        }\n        decodeDataCharacter(row, pattern, outsideChar) {\n            let counters = this.getDataCharacterCounters();\n            for (let x = 0; x < counters.length; x++) {\n                counters[x] = 0;\n            }\n            if (outsideChar) {\n                OneDReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n            }\n            else {\n                OneDReader.recordPattern(row, pattern.getStartEnd()[1] + 1, counters);\n                // reverse it\n                for (let i = 0, j = counters.length - 1; i < j; i++, j--) {\n                    let temp = counters[i];\n                    counters[i] = counters[j];\n                    counters[j] = temp;\n                }\n            }\n            let numModules = outsideChar ? 16 : 15;\n            let elementWidth = MathUtils.sum(new Int32Array(counters)) / numModules;\n            let oddCounts = this.getOddCounts();\n            let evenCounts = this.getEvenCounts();\n            let oddRoundingErrors = this.getOddRoundingErrors();\n            let evenRoundingErrors = this.getEvenRoundingErrors();\n            for (let i = 0; i < counters.length; i++) {\n                let value = counters[i] / elementWidth;\n                let count = Math.floor(value + 0.5);\n                if (count < 1) {\n                    count = 1;\n                }\n                else if (count > 8) {\n                    count = 8;\n                }\n                let offset = Math.floor(i / 2);\n                if ((i & 0x01) === 0) {\n                    oddCounts[offset] = count;\n                    oddRoundingErrors[offset] = value - count;\n                }\n                else {\n                    evenCounts[offset] = count;\n                    evenRoundingErrors[offset] = value - count;\n                }\n            }\n            this.adjustOddEvenCounts(outsideChar, numModules);\n            let oddSum = 0;\n            let oddChecksumPortion = 0;\n            for (let i = oddCounts.length - 1; i >= 0; i--) {\n                oddChecksumPortion *= 9;\n                oddChecksumPortion += oddCounts[i];\n                oddSum += oddCounts[i];\n            }\n            let evenChecksumPortion = 0;\n            let evenSum = 0;\n            for (let i = evenCounts.length - 1; i >= 0; i--) {\n                evenChecksumPortion *= 9;\n                evenChecksumPortion += evenCounts[i];\n                evenSum += evenCounts[i];\n            }\n            let checksumPortion = oddChecksumPortion + 3 * evenChecksumPortion;\n            if (outsideChar) {\n                if ((oddSum & 0x01) !== 0 || oddSum > 12 || oddSum < 4) {\n                    throw new NotFoundException();\n                }\n                let group = (12 - oddSum) / 2;\n                let oddWidest = RSS14Reader.OUTSIDE_ODD_WIDEST[group];\n                let evenWidest = 9 - oddWidest;\n                let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, false);\n                let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, true);\n                let tEven = RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET[group];\n                let gSum = RSS14Reader.OUTSIDE_GSUM[group];\n                return new DataCharacter(vOdd * tEven + vEven + gSum, checksumPortion);\n            }\n            else {\n                if ((evenSum & 0x01) !== 0 || evenSum > 10 || evenSum < 4) {\n                    throw new NotFoundException();\n                }\n                let group = (10 - evenSum) / 2;\n                let oddWidest = RSS14Reader.INSIDE_ODD_WIDEST[group];\n                let evenWidest = 9 - oddWidest;\n                let vOdd = RSSUtils.getRSSvalue(oddCounts, oddWidest, true);\n                let vEven = RSSUtils.getRSSvalue(evenCounts, evenWidest, false);\n                let tOdd = RSS14Reader.INSIDE_ODD_TOTAL_SUBSET[group];\n                let gSum = RSS14Reader.INSIDE_GSUM[group];\n                return new DataCharacter(vEven * tOdd + vOdd + gSum, checksumPortion);\n            }\n        }\n        findFinderPattern(row, rightFinderPattern) {\n            let counters = this.getDecodeFinderCounters();\n            counters[0] = 0;\n            counters[1] = 0;\n            counters[2] = 0;\n            counters[3] = 0;\n            let width = row.getSize();\n            let isWhite = false;\n            let rowOffset = 0;\n            while (rowOffset < width) {\n                isWhite = !row.get(rowOffset);\n                if (rightFinderPattern === isWhite) {\n                    // Will encounter white first when searching for right finder pattern\n                    break;\n                }\n                rowOffset++;\n            }\n            let counterPosition = 0;\n            let patternStart = rowOffset;\n            for (let x = rowOffset; x < width; x++) {\n                if (row.get(x) !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === 3) {\n                        if (AbstractRSSReader.isFinderPattern(counters)) {\n                            return [patternStart, x];\n                        }\n                        patternStart += counters[0] + counters[1];\n                        counters[0] = counters[2];\n                        counters[1] = counters[3];\n                        counters[2] = 0;\n                        counters[3] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            throw new NotFoundException();\n        }\n        parseFoundFinderPattern(row, rowNumber, right, startEnd) {\n            // Actually we found elements 2-5\n            let firstIsBlack = row.get(startEnd[0]);\n            let firstElementStart = startEnd[0] - 1;\n            // Locate element 1\n            while (firstElementStart >= 0 && firstIsBlack !== row.get(firstElementStart)) {\n                firstElementStart--;\n            }\n            firstElementStart++;\n            const firstCounter = startEnd[0] - firstElementStart;\n            // Make 'counters' hold 1-4\n            const counters = this.getDecodeFinderCounters();\n            const copy = new Int32Array(counters.length);\n            System.arraycopy(counters, 0, copy, 1, counters.length - 1);\n            copy[0] = firstCounter;\n            const value = this.parseFinderValue(copy, RSS14Reader.FINDER_PATTERNS);\n            let start = firstElementStart;\n            let end = startEnd[1];\n            if (right) {\n                // row is actually reversed\n                start = row.getSize() - 1 - start;\n                end = row.getSize() - 1 - end;\n            }\n            return new FinderPattern(value, [firstElementStart, startEnd[1]], start, end, rowNumber);\n        }\n        adjustOddEvenCounts(outsideChar, numModules) {\n            let oddSum = MathUtils.sum(new Int32Array(this.getOddCounts()));\n            let evenSum = MathUtils.sum(new Int32Array(this.getEvenCounts()));\n            let incrementOdd = false;\n            let decrementOdd = false;\n            let incrementEven = false;\n            let decrementEven = false;\n            if (outsideChar) {\n                if (oddSum > 12) {\n                    decrementOdd = true;\n                }\n                else if (oddSum < 4) {\n                    incrementOdd = true;\n                }\n                if (evenSum > 12) {\n                    decrementEven = true;\n                }\n                else if (evenSum < 4) {\n                    incrementEven = true;\n                }\n            }\n            else {\n                if (oddSum > 11) {\n                    decrementOdd = true;\n                }\n                else if (oddSum < 5) {\n                    incrementOdd = true;\n                }\n                if (evenSum > 10) {\n                    decrementEven = true;\n                }\n                else if (evenSum < 4) {\n                    incrementEven = true;\n                }\n            }\n            let mismatch = oddSum + evenSum - numModules;\n            let oddParityBad = (oddSum & 0x01) === (outsideChar ? 1 : 0);\n            let evenParityBad = (evenSum & 0x01) === 1;\n            if (mismatch === 1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    decrementEven = true;\n                }\n            }\n            else if (mismatch === -1) {\n                if (oddParityBad) {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementOdd = true;\n                }\n                else {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    incrementEven = true;\n                }\n            }\n            else if (mismatch === 0) {\n                if (oddParityBad) {\n                    if (!evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Both bad\n                    if (oddSum < evenSum) {\n                        incrementOdd = true;\n                        decrementEven = true;\n                    }\n                    else {\n                        decrementOdd = true;\n                        incrementEven = true;\n                    }\n                }\n                else {\n                    if (evenParityBad) {\n                        throw new NotFoundException();\n                    }\n                    // Nothing to do!\n                }\n            }\n            else {\n                throw new NotFoundException();\n            }\n            if (incrementOdd) {\n                if (decrementOdd) {\n                    throw new NotFoundException();\n                }\n                AbstractRSSReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementOdd) {\n                AbstractRSSReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n            }\n            if (incrementEven) {\n                if (decrementEven) {\n                    throw new NotFoundException();\n                }\n                AbstractRSSReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n            }\n            if (decrementEven) {\n                AbstractRSSReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n            }\n        }\n    }\n    RSS14Reader.OUTSIDE_EVEN_TOTAL_SUBSET = [1, 10, 34, 70, 126];\n    RSS14Reader.INSIDE_ODD_TOTAL_SUBSET = [4, 20, 48, 81];\n    RSS14Reader.OUTSIDE_GSUM = [0, 161, 961, 2015, 2715];\n    RSS14Reader.INSIDE_GSUM = [0, 336, 1036, 1516];\n    RSS14Reader.OUTSIDE_ODD_WIDEST = [8, 6, 4, 3, 1];\n    RSS14Reader.INSIDE_ODD_WIDEST = [2, 4, 6, 8];\n    RSS14Reader.FINDER_PATTERNS = [\n        Int32Array.from([3, 8, 2, 1]),\n        Int32Array.from([3, 5, 5, 1]),\n        Int32Array.from([3, 3, 7, 1]),\n        Int32Array.from([3, 1, 9, 1]),\n        Int32Array.from([2, 7, 4, 1]),\n        Int32Array.from([2, 5, 6, 1]),\n        Int32Array.from([2, 3, 8, 1]),\n        Int32Array.from([1, 5, 7, 1]),\n        Int32Array.from([1, 3, 9, 1]),\n    ];\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Daniel Switkin <dswitkin@google.com>\n     * @author Sean Owen\n     */\n    class MultiFormatOneDReader extends OneDReader {\n        constructor(hints) {\n            super();\n            this.readers = [];\n            const possibleFormats = !hints ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            const useCode39CheckDigit = hints && hints.get(DecodeHintType$1.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n            if (possibleFormats) {\n                if (possibleFormats.includes(BarcodeFormat$1.EAN_13) ||\n                    possibleFormats.includes(BarcodeFormat$1.UPC_A) ||\n                    possibleFormats.includes(BarcodeFormat$1.EAN_8) ||\n                    possibleFormats.includes(BarcodeFormat$1.UPC_E)) {\n                    this.readers.push(new MultiFormatUPCEANReader(hints));\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.CODE_39)) {\n                    this.readers.push(new Code39Reader(useCode39CheckDigit));\n                }\n                // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n                //    this.readers.push(new Code93Reader());\n                // }\n                if (possibleFormats.includes(BarcodeFormat$1.CODE_128)) {\n                    this.readers.push(new Code128Reader());\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.ITF)) {\n                    this.readers.push(new ITFReader());\n                }\n                // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n                //    this.readers.push(new CodaBarReader());\n                // }\n                if (possibleFormats.includes(BarcodeFormat$1.RSS_14)) {\n                    this.readers.push(new RSS14Reader());\n                }\n                if (possibleFormats.includes(BarcodeFormat$1.RSS_EXPANDED)) {\n                    console.warn('RSS Expanded reader IS NOT ready for production yet! use at your own risk.');\n                    this.readers.push(new RSSExpandedReader());\n                }\n            }\n            if (this.readers.length === 0) {\n                this.readers.push(new MultiFormatUPCEANReader(hints));\n                this.readers.push(new Code39Reader());\n                // this.readers.push(new CodaBarReader());\n                // this.readers.push(new Code93Reader());\n                this.readers.push(new MultiFormatUPCEANReader(hints));\n                this.readers.push(new Code128Reader());\n                this.readers.push(new ITFReader());\n                this.readers.push(new RSS14Reader());\n                // this.readers.push(new RSSExpandedReader());\n            }\n        }\n        // @Override\n        decodeRow(rowNumber, row, hints) {\n            for (let i = 0; i < this.readers.length; i++) {\n                try {\n                    return this.readers[i].decodeRow(rowNumber, row, hints);\n                }\n                catch (re) {\n                    // continue\n                }\n            }\n            throw new NotFoundException();\n        }\n        // @Override\n        reset() {\n            this.readers.forEach(reader => reader.reset());\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * Barcode reader reader to use from browser.\n     */\n    class BrowserBarcodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserBarcodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         * @param {Map<DecodeHintType, any>} hints\n         */\n        constructor(timeBetweenScansMillis = 500, hints) {\n            super(new MultiFormatOneDReader(hints), timeBetweenScansMillis, hints);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\n     * use blocks of differing sizes within one version, so, this encapsulates the parameters for\n     * each set of blocks. It also holds the number of error-correction codewords per block since it\n     * will be the same across all blocks within one version.</p>\n     */\n    class ECBlocks {\n        constructor(ecCodewords, ecBlocks1, ecBlocks2) {\n            this.ecCodewords = ecCodewords;\n            this.ecBlocks = [ecBlocks1];\n            ecBlocks2 && this.ecBlocks.push(ecBlocks2);\n        }\n        getECCodewords() {\n            return this.ecCodewords;\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n    }\n    /**\n     * <p>Encapsulates the parameters for one error-correction block in one symbol version.\n     * This includes the number of data codewords, and the number of times a block with these\n     * parameters is used consecutively in the Data Matrix code version's format.</p>\n     */\n    class ECB {\n        constructor(count, dataCodewords) {\n            this.count = count;\n            this.dataCodewords = dataCodewords;\n        }\n        getCount() {\n            return this.count;\n        }\n        getDataCodewords() {\n            return this.dataCodewords;\n        }\n    }\n    /**\n     * The Version object encapsulates attributes about a particular\n     * size Data Matrix Code.\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class Version {\n        constructor(versionNumber, symbolSizeRows, symbolSizeColumns, dataRegionSizeRows, dataRegionSizeColumns, ecBlocks) {\n            this.versionNumber = versionNumber;\n            this.symbolSizeRows = symbolSizeRows;\n            this.symbolSizeColumns = symbolSizeColumns;\n            this.dataRegionSizeRows = dataRegionSizeRows;\n            this.dataRegionSizeColumns = dataRegionSizeColumns;\n            this.ecBlocks = ecBlocks;\n            // Calculate the total number of codewords\n            let total = 0;\n            const ecCodewords = ecBlocks.getECCodewords();\n            const ecbArray = ecBlocks.getECBlocks();\n            for (let ecBlock of ecbArray) {\n                total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n            }\n            this.totalCodewords = total;\n        }\n        getVersionNumber() {\n            return this.versionNumber;\n        }\n        getSymbolSizeRows() {\n            return this.symbolSizeRows;\n        }\n        getSymbolSizeColumns() {\n            return this.symbolSizeColumns;\n        }\n        getDataRegionSizeRows() {\n            return this.dataRegionSizeRows;\n        }\n        getDataRegionSizeColumns() {\n            return this.dataRegionSizeColumns;\n        }\n        getTotalCodewords() {\n            return this.totalCodewords;\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n        /**\n         * <p>Deduces version information from Data Matrix dimensions.</p>\n         *\n         * @param numRows Number of rows in modules\n         * @param numColumns Number of columns in modules\n         * @return Version for a Data Matrix Code of those dimensions\n         * @throws FormatException if dimensions do correspond to a valid Data Matrix size\n         */\n        static getVersionForDimensions(numRows, numColumns) {\n            if ((numRows & 0x01) !== 0 || (numColumns & 0x01) !== 0) {\n                throw new FormatException();\n            }\n            for (let version of Version.VERSIONS) {\n                if (version.symbolSizeRows === numRows && version.symbolSizeColumns === numColumns) {\n                    return version;\n                }\n            }\n            throw new FormatException();\n        }\n        //  @Override\n        toString() {\n            return '' + this.versionNumber;\n        }\n        /**\n         * See ISO 16022:2006 5.5.1 Table 7\n         */\n        static buildVersions() {\n            return [\n                new Version(1, 10, 10, 8, 8, new ECBlocks(5, new ECB(1, 3))),\n                new Version(2, 12, 12, 10, 10, new ECBlocks(7, new ECB(1, 5))),\n                new Version(3, 14, 14, 12, 12, new ECBlocks(10, new ECB(1, 8))),\n                new Version(4, 16, 16, 14, 14, new ECBlocks(12, new ECB(1, 12))),\n                new Version(5, 18, 18, 16, 16, new ECBlocks(14, new ECB(1, 18))),\n                new Version(6, 20, 20, 18, 18, new ECBlocks(18, new ECB(1, 22))),\n                new Version(7, 22, 22, 20, 20, new ECBlocks(20, new ECB(1, 30))),\n                new Version(8, 24, 24, 22, 22, new ECBlocks(24, new ECB(1, 36))),\n                new Version(9, 26, 26, 24, 24, new ECBlocks(28, new ECB(1, 44))),\n                new Version(10, 32, 32, 14, 14, new ECBlocks(36, new ECB(1, 62))),\n                new Version(11, 36, 36, 16, 16, new ECBlocks(42, new ECB(1, 86))),\n                new Version(12, 40, 40, 18, 18, new ECBlocks(48, new ECB(1, 114))),\n                new Version(13, 44, 44, 20, 20, new ECBlocks(56, new ECB(1, 144))),\n                new Version(14, 48, 48, 22, 22, new ECBlocks(68, new ECB(1, 174))),\n                new Version(15, 52, 52, 24, 24, new ECBlocks(42, new ECB(2, 102))),\n                new Version(16, 64, 64, 14, 14, new ECBlocks(56, new ECB(2, 140))),\n                new Version(17, 72, 72, 16, 16, new ECBlocks(36, new ECB(4, 92))),\n                new Version(18, 80, 80, 18, 18, new ECBlocks(48, new ECB(4, 114))),\n                new Version(19, 88, 88, 20, 20, new ECBlocks(56, new ECB(4, 144))),\n                new Version(20, 96, 96, 22, 22, new ECBlocks(68, new ECB(4, 174))),\n                new Version(21, 104, 104, 24, 24, new ECBlocks(56, new ECB(6, 136))),\n                new Version(22, 120, 120, 18, 18, new ECBlocks(68, new ECB(6, 175))),\n                new Version(23, 132, 132, 20, 20, new ECBlocks(62, new ECB(8, 163))),\n                new Version(24, 144, 144, 22, 22, new ECBlocks(62, new ECB(8, 156), new ECB(2, 155))),\n                new Version(25, 8, 18, 6, 16, new ECBlocks(7, new ECB(1, 5))),\n                new Version(26, 8, 32, 6, 14, new ECBlocks(11, new ECB(1, 10))),\n                new Version(27, 12, 26, 10, 24, new ECBlocks(14, new ECB(1, 16))),\n                new Version(28, 12, 36, 10, 16, new ECBlocks(18, new ECB(1, 22))),\n                new Version(29, 16, 36, 14, 16, new ECBlocks(24, new ECB(1, 32))),\n                new Version(30, 16, 48, 14, 22, new ECBlocks(28, new ECB(1, 49)))\n            ];\n        }\n    }\n    Version.VERSIONS = Version.buildVersions();\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class BitMatrixParser {\n        /**\n         * @param bitMatrix {@link BitMatrix} to parse\n         * @throws FormatException if dimension is < 8 or > 144 or not 0 mod 2\n         */\n        constructor(bitMatrix) {\n            const dimension = bitMatrix.getHeight();\n            if (dimension < 8 || dimension > 144 || (dimension & 0x01) !== 0) {\n                throw new FormatException();\n            }\n            this.version = BitMatrixParser.readVersion(bitMatrix);\n            this.mappingBitMatrix = this.extractDataRegion(bitMatrix);\n            this.readMappingMatrix = new BitMatrix(this.mappingBitMatrix.getWidth(), this.mappingBitMatrix.getHeight());\n        }\n        getVersion() {\n            return this.version;\n        }\n        /**\n         * <p>Creates the version object based on the dimension of the original bit matrix from\n         * the datamatrix code.</p>\n         *\n         * <p>See ISO 16022:2006 Table 7 - ECC 200 symbol attributes</p>\n         *\n         * @param bitMatrix Original {@link BitMatrix} including alignment patterns\n         * @return {@link Version} encapsulating the Data Matrix Code's \"version\"\n         * @throws FormatException if the dimensions of the mapping matrix are not valid\n         * Data Matrix dimensions.\n         */\n        static readVersion(bitMatrix) {\n            const numRows = bitMatrix.getHeight();\n            const numColumns = bitMatrix.getWidth();\n            return Version.getVersionForDimensions(numRows, numColumns);\n        }\n        /**\n         * <p>Reads the bits in the {@link BitMatrix} representing the mapping matrix (No alignment patterns)\n         * in the correct order in order to reconstitute the codewords bytes contained within the\n         * Data Matrix Code.</p>\n         *\n         * @return bytes encoded within the Data Matrix Code\n         * @throws FormatException if the exact number of bytes expected is not read\n         */\n        readCodewords() {\n            const result = new Int8Array(this.version.getTotalCodewords());\n            let resultOffset = 0;\n            let row = 4;\n            let column = 0;\n            const numRows = this.mappingBitMatrix.getHeight();\n            const numColumns = this.mappingBitMatrix.getWidth();\n            let corner1Read = false;\n            let corner2Read = false;\n            let corner3Read = false;\n            let corner4Read = false;\n            // Read all of the codewords\n            do {\n                // Check the four corner cases\n                if ((row === numRows) && (column === 0) && !corner1Read) {\n                    result[resultOffset++] = this.readCorner1(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner1Read = true;\n                }\n                else if ((row === numRows - 2) && (column === 0) && ((numColumns & 0x03) !== 0) && !corner2Read) {\n                    result[resultOffset++] = this.readCorner2(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner2Read = true;\n                }\n                else if ((row === numRows + 4) && (column === 2) && ((numColumns & 0x07) === 0) && !corner3Read) {\n                    result[resultOffset++] = this.readCorner3(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner3Read = true;\n                }\n                else if ((row === numRows - 2) && (column === 0) && ((numColumns & 0x07) === 4) && !corner4Read) {\n                    result[resultOffset++] = this.readCorner4(numRows, numColumns) & 0xff;\n                    row -= 2;\n                    column += 2;\n                    corner4Read = true;\n                }\n                else {\n                    // Sweep upward diagonally to the right\n                    do {\n                        if ((row < numRows) && (column >= 0) && !this.readMappingMatrix.get(column, row)) {\n                            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n                        }\n                        row -= 2;\n                        column += 2;\n                    } while ((row >= 0) && (column < numColumns));\n                    row += 1;\n                    column += 3;\n                    // Sweep downward diagonally to the left\n                    do {\n                        if ((row >= 0) && (column < numColumns) && !this.readMappingMatrix.get(column, row)) {\n                            result[resultOffset++] = this.readUtah(row, column, numRows, numColumns) & 0xff;\n                        }\n                        row += 2;\n                        column -= 2;\n                    } while ((row < numRows) && (column >= 0));\n                    row += 3;\n                    column += 1;\n                }\n            } while ((row < numRows) || (column < numColumns));\n            if (resultOffset !== this.version.getTotalCodewords()) {\n                throw new FormatException();\n            }\n            return result;\n        }\n        /**\n         * <p>Reads a bit of the mapping matrix accounting for boundary wrapping.</p>\n         *\n         * @param row Row to read in the mapping matrix\n         * @param column Column to read in the mapping matrix\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return value of the given bit in the mapping matrix\n         */\n        readModule(row, column, numRows, numColumns) {\n            // Adjust the row and column indices based on boundary wrapping\n            if (row < 0) {\n                row += numRows;\n                column += 4 - ((numRows + 4) & 0x07);\n            }\n            if (column < 0) {\n                column += numColumns;\n                row += 4 - ((numColumns + 4) & 0x07);\n            }\n            this.readMappingMatrix.set(column, row);\n            return this.mappingBitMatrix.get(column, row);\n        }\n        /**\n         * <p>Reads the 8 bits of the standard Utah-shaped pattern.</p>\n         *\n         * <p>See ISO 16022:2006, 5.8.1 Figure 6</p>\n         *\n         * @param row Current row in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\n         * @param column Current column in the mapping matrix, anchored at the 8th bit (LSB) of the pattern\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the utah shape\n         */\n        readUtah(row, column, numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(row - 2, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 2, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row - 1, column, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(row, column, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 1.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.3</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 1\n         */\n        readCorner1(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 2.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.4</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 2\n         */\n        readCorner2(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 4, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 3.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.5</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 3\n         */\n        readCorner3(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 3, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Reads the 8 bits of the special corner condition 4.</p>\n         *\n         * <p>See ISO 16022:2006, Figure F.6</p>\n         *\n         * @param numRows Number of rows in the mapping matrix\n         * @param numColumns Number of columns in the mapping matrix\n         * @return byte from the Corner condition 4\n         */\n        readCorner4(numRows, numColumns) {\n            let currentByte = 0;\n            if (this.readModule(numRows - 3, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 2, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(numRows - 1, 0, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 2, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(0, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(1, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(2, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            currentByte <<= 1;\n            if (this.readModule(3, numColumns - 1, numRows, numColumns)) {\n                currentByte |= 1;\n            }\n            return currentByte;\n        }\n        /**\n         * <p>Extracts the data region from a {@link BitMatrix} that contains\n         * alignment patterns.</p>\n         *\n         * @param bitMatrix Original {@link BitMatrix} with alignment patterns\n         * @return BitMatrix that has the alignment patterns removed\n         */\n        extractDataRegion(bitMatrix) {\n            const symbolSizeRows = this.version.getSymbolSizeRows();\n            const symbolSizeColumns = this.version.getSymbolSizeColumns();\n            if (bitMatrix.getHeight() !== symbolSizeRows) {\n                throw new IllegalArgumentException('Dimension of bitMatrix must match the version size');\n            }\n            const dataRegionSizeRows = this.version.getDataRegionSizeRows();\n            const dataRegionSizeColumns = this.version.getDataRegionSizeColumns();\n            const numDataRegionsRow = symbolSizeRows / dataRegionSizeRows | 0;\n            const numDataRegionsColumn = symbolSizeColumns / dataRegionSizeColumns | 0;\n            const sizeDataRegionRow = numDataRegionsRow * dataRegionSizeRows;\n            const sizeDataRegionColumn = numDataRegionsColumn * dataRegionSizeColumns;\n            const bitMatrixWithoutAlignment = new BitMatrix(sizeDataRegionColumn, sizeDataRegionRow);\n            for (let dataRegionRow = 0; dataRegionRow < numDataRegionsRow; ++dataRegionRow) {\n                const dataRegionRowOffset = dataRegionRow * dataRegionSizeRows;\n                for (let dataRegionColumn = 0; dataRegionColumn < numDataRegionsColumn; ++dataRegionColumn) {\n                    const dataRegionColumnOffset = dataRegionColumn * dataRegionSizeColumns;\n                    for (let i = 0; i < dataRegionSizeRows; ++i) {\n                        const readRowOffset = dataRegionRow * (dataRegionSizeRows + 2) + 1 + i;\n                        const writeRowOffset = dataRegionRowOffset + i;\n                        for (let j = 0; j < dataRegionSizeColumns; ++j) {\n                            const readColumnOffset = dataRegionColumn * (dataRegionSizeColumns + 2) + 1 + j;\n                            if (bitMatrix.get(readColumnOffset, readRowOffset)) {\n                                const writeColumnOffset = dataRegionColumnOffset + j;\n                                bitMatrixWithoutAlignment.set(writeColumnOffset, writeRowOffset);\n                            }\n                        }\n                    }\n                }\n            }\n            return bitMatrixWithoutAlignment;\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a block of data within a Data Matrix Code. Data Matrix Codes may split their data into\n     * multiple blocks, each of which is a unit of data and error-correction codewords. Each\n     * is represented by an instance of this class.</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class DataBlock {\n        constructor(numDataCodewords, codewords) {\n            this.numDataCodewords = numDataCodewords;\n            this.codewords = codewords;\n        }\n        /**\n         * <p>When Data Matrix Codes use multiple data blocks, they actually interleave the bytes of each of them.\n         * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\n         * method will separate the data into original blocks.</p>\n         *\n         * @param rawCodewords bytes as read directly from the Data Matrix Code\n         * @param version version of the Data Matrix Code\n         * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\n         *         Data Matrix Code\n         */\n        static getDataBlocks(rawCodewords, version) {\n            // Figure out the number and size of data blocks used by this version\n            const ecBlocks = version.getECBlocks();\n            // First count the total number of data blocks\n            let totalBlocks = 0;\n            const ecBlockArray = ecBlocks.getECBlocks();\n            for (let ecBlock of ecBlockArray) {\n                totalBlocks += ecBlock.getCount();\n            }\n            // Now establish DataBlocks of the appropriate size and number of data codewords\n            const result = new Array(totalBlocks);\n            let numResultBlocks = 0;\n            for (let ecBlock of ecBlockArray) {\n                for (let i = 0; i < ecBlock.getCount(); i++) {\n                    const numDataCodewords = ecBlock.getDataCodewords();\n                    const numBlockCodewords = ecBlocks.getECCodewords() + numDataCodewords;\n                    result[numResultBlocks++] = new DataBlock(numDataCodewords, new Uint8Array(numBlockCodewords));\n                }\n            }\n            // All blocks have the same amount of data, except that the last n\n            // (where n may be 0) have 1 less byte. Figure out where these start.\n            // TODO(bbrown): There is only one case where there is a difference for Data Matrix for size 144\n            const longerBlocksTotalCodewords = result[0].codewords.length;\n            // int shorterBlocksTotalCodewords = longerBlocksTotalCodewords - 1;\n            const longerBlocksNumDataCodewords = longerBlocksTotalCodewords - ecBlocks.getECCodewords();\n            const shorterBlocksNumDataCodewords = longerBlocksNumDataCodewords - 1;\n            // The last elements of result may be 1 element shorter for 144 matrix\n            // first fill out as many elements as all of them have minus 1\n            let rawCodewordsOffset = 0;\n            for (let i = 0; i < shorterBlocksNumDataCodewords; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            // Fill out the last data block in the longer ones\n            const specialVersion = version.getVersionNumber() === 24;\n            const numLongerBlocks = specialVersion ? 8 : numResultBlocks;\n            for (let j = 0; j < numLongerBlocks; j++) {\n                result[j].codewords[longerBlocksNumDataCodewords - 1] = rawCodewords[rawCodewordsOffset++];\n            }\n            // Now add in error correction blocks\n            const max = result[0].codewords.length;\n            for (let i = longerBlocksNumDataCodewords; i < max; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    const jOffset = specialVersion ? (j + 8) % numResultBlocks : j;\n                    const iOffset = specialVersion && jOffset > 7 ? i - 1 : i;\n                    result[jOffset].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            if (rawCodewordsOffset !== rawCodewords.length) {\n                throw new IllegalArgumentException();\n            }\n            return result;\n        }\n        getNumDataCodewords() {\n            return this.numDataCodewords;\n        }\n        getCodewords() {\n            return this.codewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>This provides an easy abstraction to read bits at a time from a sequence of bytes, where the\n     * number of bits read is not often a multiple of 8.</p>\n     *\n     * <p>This class is thread-safe but not reentrant -- unless the caller modifies the bytes array\n     * it passed in, in which case all bets are off.</p>\n     *\n     * @author Sean Owen\n     */\n    class BitSource {\n        /**\n         * @param bytes bytes from which this will read bits. Bits will be read from the first byte first.\n         * Bits are read within a byte from most-significant to least-significant bit.\n         */\n        constructor(bytes) {\n            this.bytes = bytes;\n            this.byteOffset = 0;\n            this.bitOffset = 0;\n        }\n        /**\n         * @return index of next bit in current byte which would be read by the next call to {@link #readBits(int)}.\n         */\n        getBitOffset() {\n            return this.bitOffset;\n        }\n        /**\n         * @return index of next byte in input byte array which would be read by the next call to {@link #readBits(int)}.\n         */\n        getByteOffset() {\n            return this.byteOffset;\n        }\n        /**\n         * @param numBits number of bits to read\n         * @return int representing the bits read. The bits will appear as the least-significant\n         *         bits of the int\n         * @throws IllegalArgumentException if numBits isn't in [1,32] or more than is available\n         */\n        readBits(numBits /*int*/) {\n            if (numBits < 1 || numBits > 32 || numBits > this.available()) {\n                throw new IllegalArgumentException('' + numBits);\n            }\n            let result = 0;\n            let bitOffset = this.bitOffset;\n            let byteOffset = this.byteOffset;\n            const bytes = this.bytes;\n            // First, read remainder from current byte\n            if (bitOffset > 0) {\n                const bitsLeft = 8 - bitOffset;\n                const toRead = numBits < bitsLeft ? numBits : bitsLeft;\n                const bitsToNotRead = bitsLeft - toRead;\n                const mask = (0xFF >> (8 - toRead)) << bitsToNotRead;\n                result = (bytes[byteOffset] & mask) >> bitsToNotRead;\n                numBits -= toRead;\n                bitOffset += toRead;\n                if (bitOffset === 8) {\n                    bitOffset = 0;\n                    byteOffset++;\n                }\n            }\n            // Next read whole bytes\n            if (numBits > 0) {\n                while (numBits >= 8) {\n                    result = (result << 8) | (bytes[byteOffset] & 0xFF);\n                    byteOffset++;\n                    numBits -= 8;\n                }\n                // Finally read a partial byte\n                if (numBits > 0) {\n                    const bitsToNotRead = 8 - numBits;\n                    const mask = (0xFF >> bitsToNotRead) << bitsToNotRead;\n                    result = (result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n                    bitOffset += numBits;\n                }\n            }\n            this.bitOffset = bitOffset;\n            this.byteOffset = byteOffset;\n            return result;\n        }\n        /**\n         * @return number of bits that can be read successfully\n         */\n        available() {\n            return 8 * (this.bytes.length - this.byteOffset) - this.bitOffset;\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var Mode;\n    (function (Mode) {\n        Mode[Mode[\"PAD_ENCODE\"] = 0] = \"PAD_ENCODE\";\n        Mode[Mode[\"ASCII_ENCODE\"] = 1] = \"ASCII_ENCODE\";\n        Mode[Mode[\"C40_ENCODE\"] = 2] = \"C40_ENCODE\";\n        Mode[Mode[\"TEXT_ENCODE\"] = 3] = \"TEXT_ENCODE\";\n        Mode[Mode[\"ANSIX12_ENCODE\"] = 4] = \"ANSIX12_ENCODE\";\n        Mode[Mode[\"EDIFACT_ENCODE\"] = 5] = \"EDIFACT_ENCODE\";\n        Mode[Mode[\"BASE256_ENCODE\"] = 6] = \"BASE256_ENCODE\";\n    })(Mode || (Mode = {}));\n    /**\n     * <p>Data Matrix Codes can encode text as bits in one of several modes, and can use multiple modes\n     * in one Data Matrix Code. This class decodes the bits back into text.</p>\n     *\n     * <p>See ISO 16022:2006, 5.2.1 - 5.2.9.2</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     * @author Sean Owen\n     */\n    class DecodedBitStreamParser {\n        static decode(bytes) {\n            const bits = new BitSource(bytes);\n            const result = new StringBuilder();\n            const resultTrailer = new StringBuilder();\n            const byteSegments = new Array();\n            let mode = Mode.ASCII_ENCODE;\n            do {\n                if (mode === Mode.ASCII_ENCODE) {\n                    mode = this.decodeAsciiSegment(bits, result, resultTrailer);\n                }\n                else {\n                    switch (mode) {\n                        case Mode.C40_ENCODE:\n                            this.decodeC40Segment(bits, result);\n                            break;\n                        case Mode.TEXT_ENCODE:\n                            this.decodeTextSegment(bits, result);\n                            break;\n                        case Mode.ANSIX12_ENCODE:\n                            this.decodeAnsiX12Segment(bits, result);\n                            break;\n                        case Mode.EDIFACT_ENCODE:\n                            this.decodeEdifactSegment(bits, result);\n                            break;\n                        case Mode.BASE256_ENCODE:\n                            this.decodeBase256Segment(bits, result, byteSegments);\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                    mode = Mode.ASCII_ENCODE;\n                }\n            } while (mode !== Mode.PAD_ENCODE && bits.available() > 0);\n            if (resultTrailer.length() > 0) {\n                result.append(resultTrailer.toString());\n            }\n            return new DecoderResult(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, null);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.3 and Annex C, Table C.2\n         */\n        static decodeAsciiSegment(bits, result, resultTrailer) {\n            let upperShift = false;\n            do {\n                let oneByte = bits.readBits(8);\n                if (oneByte === 0) {\n                    throw new FormatException();\n                }\n                else if (oneByte <= 128) { // ASCII data (ASCII value + 1)\n                    if (upperShift) {\n                        oneByte += 128;\n                        // upperShift = false;\n                    }\n                    result.append(String.fromCharCode(oneByte - 1));\n                    return Mode.ASCII_ENCODE;\n                }\n                else if (oneByte === 129) { // Pad\n                    return Mode.PAD_ENCODE;\n                }\n                else if (oneByte <= 229) { // 2-digit data 00-99 (Numeric Value + 130)\n                    const value = oneByte - 130;\n                    if (value < 10) { // pad with '0' for single digit values\n                        result.append('0');\n                    }\n                    result.append('' + value);\n                }\n                else {\n                    switch (oneByte) {\n                        case 230: // Latch to C40 encodation\n                            return Mode.C40_ENCODE;\n                        case 231: // Latch to Base 256 encodation\n                            return Mode.BASE256_ENCODE;\n                        case 232: // FNC1\n                            result.append(String.fromCharCode(29)); // translate as ASCII 29\n                            break;\n                        case 233: // Structured Append\n                        case 234: // Reader Programming\n                            // Ignore these symbols for now\n                            // throw ReaderException.getInstance();\n                            break;\n                        case 235: // Upper Shift (shift to Extended ASCII)\n                            upperShift = true;\n                            break;\n                        case 236: // 05 Macro\n                            result.append('[)>\\u001E05\\u001D');\n                            resultTrailer.insert(0, '\\u001E\\u0004');\n                            break;\n                        case 237: // 06 Macro\n                            result.append('[)>\\u001E06\\u001D');\n                            resultTrailer.insert(0, '\\u001E\\u0004');\n                            break;\n                        case 238: // Latch to ANSI X12 encodation\n                            return Mode.ANSIX12_ENCODE;\n                        case 239: // Latch to Text encodation\n                            return Mode.TEXT_ENCODE;\n                        case 240: // Latch to EDIFACT encodation\n                            return Mode.EDIFACT_ENCODE;\n                        case 241: // ECI Character\n                            // TODO(bbrown): I think we need to support ECI\n                            // throw ReaderException.getInstance();\n                            // Ignore this symbol for now\n                            break;\n                        default:\n                            // Not to be used in ASCII encodation\n                            // but work around encoders that end with 254, latch back to ASCII\n                            if (oneByte !== 254 || bits.available() !== 0) {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                }\n            } while (bits.available() > 0);\n            return Mode.ASCII_ENCODE;\n        }\n        /**\n         * See ISO 16022:2006, 5.2.5 and Annex C, Table C.1\n         */\n        static decodeC40Segment(bits, result) {\n            // Three C40 values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            // TODO(bbrown): The Upper Shift with C40 doesn't work in the 4 value scenario all the time\n            let upperShift = false;\n            const cValues = [];\n            let shift = 0;\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (shift) {\n                        case 0:\n                            if (cValue < 3) {\n                                shift = cValue + 1;\n                            }\n                            else if (cValue < this.C40_BASIC_SET_CHARS.length) {\n                                const c40char = this.C40_BASIC_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(c40char);\n                                }\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case 1:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 128));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue));\n                            }\n                            shift = 0;\n                            break;\n                        case 2:\n                            if (cValue < this.C40_SHIFT2_SET_CHARS.length) {\n                                const c40char = this.C40_SHIFT2_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(c40char.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(c40char);\n                                }\n                            }\n                            else {\n                                switch (cValue) {\n                                    case 27: // FNC1\n                                        result.append(String.fromCharCode(29)); // translate as ASCII 29\n                                        break;\n                                    case 30: // Upper Shift\n                                        upperShift = true;\n                                        break;\n                                    default:\n                                        throw new FormatException();\n                                }\n                            }\n                            shift = 0;\n                            break;\n                        case 3:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 224));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue + 96));\n                            }\n                            shift = 0;\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.6 and Annex C, Table C.2\n         */\n        static decodeTextSegment(bits, result) {\n            // Three Text values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            // TODO(bbrown): The Upper Shift with Text doesn't work in the 4 value scenario all the time\n            let upperShift = false;\n            let cValues = [];\n            let shift = 0;\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (shift) {\n                        case 0:\n                            if (cValue < 3) {\n                                shift = cValue + 1;\n                            }\n                            else if (cValue < this.TEXT_BASIC_SET_CHARS.length) {\n                                const textChar = this.TEXT_BASIC_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        case 1:\n                            if (upperShift) {\n                                result.append(String.fromCharCode(cValue + 128));\n                                upperShift = false;\n                            }\n                            else {\n                                result.append(String.fromCharCode(cValue));\n                            }\n                            shift = 0;\n                            break;\n                        case 2:\n                            // Shift 2 for Text is the same encoding as C40\n                            if (cValue < this.TEXT_SHIFT2_SET_CHARS.length) {\n                                const textChar = this.TEXT_SHIFT2_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                            }\n                            else {\n                                switch (cValue) {\n                                    case 27: // FNC1\n                                        result.append(String.fromCharCode(29)); // translate as ASCII 29\n                                        break;\n                                    case 30: // Upper Shift\n                                        upperShift = true;\n                                        break;\n                                    default:\n                                        throw new FormatException();\n                                }\n                            }\n                            shift = 0;\n                            break;\n                        case 3:\n                            if (cValue < this.TEXT_SHIFT3_SET_CHARS.length) {\n                                const textChar = this.TEXT_SHIFT3_SET_CHARS[cValue];\n                                if (upperShift) {\n                                    result.append(String.fromCharCode(textChar.charCodeAt(0) + 128));\n                                    upperShift = false;\n                                }\n                                else {\n                                    result.append(textChar);\n                                }\n                                shift = 0;\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                        default:\n                            throw new FormatException();\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.7\n         */\n        static decodeAnsiX12Segment(bits, result) {\n            // Three ANSI X12 values are encoded in a 16-bit value as\n            // (1600 * C1) + (40 * C2) + C3 + 1\n            const cValues = [];\n            do {\n                // If there is only one byte left then it will be encoded as ASCII\n                if (bits.available() === 8) {\n                    return;\n                }\n                const firstByte = bits.readBits(8);\n                if (firstByte === 254) { // Unlatch codeword\n                    return;\n                }\n                this.parseTwoBytes(firstByte, bits.readBits(8), cValues);\n                for (let i = 0; i < 3; i++) {\n                    const cValue = cValues[i];\n                    switch (cValue) {\n                        case 0: // X12 segment terminator <CR>\n                            result.append('\\r');\n                            break;\n                        case 1: // X12 segment separator *\n                            result.append('*');\n                            break;\n                        case 2: // X12 sub-element separator >\n                            result.append('>');\n                            break;\n                        case 3: // space\n                            result.append(' ');\n                            break;\n                        default:\n                            if (cValue < 14) { // 0 - 9\n                                result.append(String.fromCharCode(cValue + 44));\n                            }\n                            else if (cValue < 40) { // A - Z\n                                result.append(String.fromCharCode(cValue + 51));\n                            }\n                            else {\n                                throw new FormatException();\n                            }\n                            break;\n                    }\n                }\n            } while (bits.available() > 0);\n        }\n        static parseTwoBytes(firstByte, secondByte, result) {\n            let fullBitValue = (firstByte << 8) + secondByte - 1;\n            let temp = Math.floor(fullBitValue / 1600);\n            result[0] = temp;\n            fullBitValue -= temp * 1600;\n            temp = Math.floor(fullBitValue / 40);\n            result[1] = temp;\n            result[2] = fullBitValue - temp * 40;\n        }\n        /**\n         * See ISO 16022:2006, 5.2.8 and Annex C Table C.3\n         */\n        static decodeEdifactSegment(bits, result) {\n            do {\n                // If there is only two or less bytes left then it will be encoded as ASCII\n                if (bits.available() <= 16) {\n                    return;\n                }\n                for (let i = 0; i < 4; i++) {\n                    let edifactValue = bits.readBits(6);\n                    // Check for the unlatch character\n                    if (edifactValue === 0x1F) { // 011111\n                        // Read rest of byte, which should be 0, and stop\n                        const bitsLeft = 8 - bits.getBitOffset();\n                        if (bitsLeft !== 8) {\n                            bits.readBits(bitsLeft);\n                        }\n                        return;\n                    }\n                    if ((edifactValue & 0x20) === 0) { // no 1 in the leading (6th) bit\n                        edifactValue |= 0x40; // Add a leading 01 to the 6 bit binary value\n                    }\n                    result.append(String.fromCharCode(edifactValue));\n                }\n            } while (bits.available() > 0);\n        }\n        /**\n         * See ISO 16022:2006, 5.2.9 and Annex B, B.2\n         */\n        static decodeBase256Segment(bits, result, byteSegments) {\n            // Figure out how long the Base 256 Segment is.\n            let codewordPosition = 1 + bits.getByteOffset(); // position is 1-indexed\n            const d1 = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            let count;\n            if (d1 === 0) { // Read the remainder of the symbol\n                count = bits.available() / 8 | 0;\n            }\n            else if (d1 < 250) {\n                count = d1;\n            }\n            else {\n                count = 250 * (d1 - 249) + this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            }\n            // We're seeing NegativeArraySizeException errors from users.\n            if (count < 0) {\n                throw new FormatException();\n            }\n            const bytes = new Uint8Array(count);\n            for (let i = 0; i < count; i++) {\n                // Have seen this particular error in the wild, such as at\n                // http://www.bcgen.com/demo/IDAutomationStreamingDataMatrix.aspx?MODE=3&D=Fred&PFMT=3&PT=F&X=0.3&O=0&LM=0.2\n                if (bits.available() < 8) {\n                    throw new FormatException();\n                }\n                bytes[i] = this.unrandomize255State(bits.readBits(8), codewordPosition++);\n            }\n            byteSegments.push(bytes);\n            try {\n                result.append(StringEncoding.decode(bytes, StringUtils.ISO88591));\n            }\n            catch (uee) {\n                throw new IllegalStateException('Platform does not support required encoding: ' + uee.message);\n            }\n        }\n        /**\n         * See ISO 16022:2006, Annex B, B.2\n         */\n        static unrandomize255State(randomizedBase256Codeword, base256CodewordPosition) {\n            const pseudoRandomNumber = ((149 * base256CodewordPosition) % 255) + 1;\n            const tempVariable = randomizedBase256Codeword - pseudoRandomNumber;\n            return tempVariable >= 0 ? tempVariable : tempVariable + 256;\n        }\n    }\n    /**\n     * See ISO 16022:2006, Annex C Table C.1\n     * The C40 Basic Character Set (*'s used for placeholders for the shift values)\n     */\n    DecodedBitStreamParser.C40_BASIC_SET_CHARS = [\n        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n        'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'\n    ];\n    DecodedBitStreamParser.C40_SHIFT2_SET_CHARS = [\n        '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.',\n        '/', ':', ';', '<', '=', '>', '?', '@', '[', '\\\\', ']', '^', '_'\n    ];\n    /**\n     * See ISO 16022:2006, Annex C Table C.2\n     * The Text Basic Character Set (*'s used for placeholders for the shift values)\n     */\n    DecodedBitStreamParser.TEXT_BASIC_SET_CHARS = [\n        '*', '*', '*', ' ', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n        'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n    ];\n    // Shift 2 for Text is the same encoding as C40\n    DecodedBitStreamParser.TEXT_SHIFT2_SET_CHARS = DecodedBitStreamParser.C40_SHIFT2_SET_CHARS;\n    DecodedBitStreamParser.TEXT_SHIFT3_SET_CHARS = [\n        '`', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',\n        'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '{', '|', '}', '~', String.fromCharCode(127)\n    ];\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>The main class which implements Data Matrix Code decoding -- as opposed to locating and extracting\n     * the Data Matrix Code from an image.</p>\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class Decoder$1 {\n        constructor() {\n            this.rsDecoder = new ReedSolomonDecoder(GenericGF.DATA_MATRIX_FIELD_256);\n        }\n        /**\n         * <p>Decodes a Data Matrix Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken\n         * to mean a black module.</p>\n         *\n         * @param bits booleans representing white/black Data Matrix Code modules\n         * @return text and bytes encoded within the Data Matrix Code\n         * @throws FormatException if the Data Matrix Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decode(bits) {\n            // Construct a parser and read version, error-correction level\n            const parser = new BitMatrixParser(bits);\n            const version = parser.getVersion();\n            // Read codewords\n            const codewords = parser.readCodewords();\n            // Separate into data blocks\n            const dataBlocks = DataBlock.getDataBlocks(codewords, version);\n            // Count total number of data bytes\n            let totalBytes = 0;\n            for (let db of dataBlocks) {\n                totalBytes += db.getNumDataCodewords();\n            }\n            const resultBytes = new Uint8Array(totalBytes);\n            const dataBlocksCount = dataBlocks.length;\n            // Error-correct and copy data blocks together into a stream of bytes\n            for (let j = 0; j < dataBlocksCount; j++) {\n                const dataBlock = dataBlocks[j];\n                const codewordBytes = dataBlock.getCodewords();\n                const numDataCodewords = dataBlock.getNumDataCodewords();\n                this.correctErrors(codewordBytes, numDataCodewords);\n                for (let i = 0; i < numDataCodewords; i++) {\n                    // De-interlace data blocks.\n                    resultBytes[i * dataBlocksCount + j] = codewordBytes[i];\n                }\n            }\n            // Decode the contents of that stream of bytes\n            return DecodedBitStreamParser.decode(resultBytes);\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place using Reed-Solomon error correction.</p>\n         *\n         * @param codewordBytes data and error correction codewords\n         * @param numDataCodewords number of codewords that are data bytes\n         * @throws ChecksumException if error correction fails\n         */\n        correctErrors(codewordBytes, numDataCodewords) {\n            // const numCodewords = codewordBytes.length;\n            // First read into an array of ints\n            const codewordsInts = new Int32Array(codewordBytes);\n            // for (let i = 0; i < numCodewords; i++) {\n            //   codewordsInts[i] = codewordBytes[i] & 0xFF;\n            // }\n            try {\n                this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n            }\n            catch (ignored /* ReedSolomonException */) {\n                throw new ChecksumException();\n            }\n            // Copy back into array of bytes -- only need to worry about the bytes that were data\n            // We don't care about errors in the error-correction codewords\n            for (let i = 0; i < numDataCodewords; i++) {\n                codewordBytes[i] = codewordsInts[i];\n            }\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code\n     * is rotated or skewed, or partially obscured.</p>\n     *\n     * @author Sean Owen\n     */\n    class Detector$1 {\n        constructor(image) {\n            this.image = image;\n            this.rectangleDetector = new WhiteRectangleDetector(this.image);\n        }\n        /**\n         * <p>Detects a Data Matrix Code in an image.</p>\n         *\n         * @return {@link DetectorResult} encapsulating results of detecting a Data Matrix Code\n         * @throws NotFoundException if no Data Matrix Code can be found\n         */\n        detect() {\n            const cornerPoints = this.rectangleDetector.detect();\n            let points = this.detectSolid1(cornerPoints);\n            points = this.detectSolid2(points);\n            points[3] = this.correctTopRight(points);\n            if (!points[3]) {\n                throw new NotFoundException();\n            }\n            points = this.shiftToModuleCenter(points);\n            const topLeft = points[0];\n            const bottomLeft = points[1];\n            const bottomRight = points[2];\n            const topRight = points[3];\n            let dimensionTop = this.transitionsBetween(topLeft, topRight) + 1;\n            let dimensionRight = this.transitionsBetween(bottomRight, topRight) + 1;\n            if ((dimensionTop & 0x01) === 1) {\n                dimensionTop += 1;\n            }\n            if ((dimensionRight & 0x01) === 1) {\n                dimensionRight += 1;\n            }\n            if (4 * dimensionTop < 7 * dimensionRight && 4 * dimensionRight < 7 * dimensionTop) {\n                // The matrix is square\n                dimensionTop = dimensionRight = Math.max(dimensionTop, dimensionRight);\n            }\n            let bits = Detector$1.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, topRight, dimensionTop, dimensionRight);\n            return new DetectorResult(bits, [topLeft, bottomLeft, bottomRight, topRight]);\n        }\n        static shiftPoint(point, to, div) {\n            let x = (to.getX() - point.getX()) / (div + 1);\n            let y = (to.getY() - point.getY()) / (div + 1);\n            return new ResultPoint(point.getX() + x, point.getY() + y);\n        }\n        static moveAway(point, fromX, fromY) {\n            let x = point.getX();\n            let y = point.getY();\n            if (x < fromX) {\n                x -= 1;\n            }\n            else {\n                x += 1;\n            }\n            if (y < fromY) {\n                y -= 1;\n            }\n            else {\n                y += 1;\n            }\n            return new ResultPoint(x, y);\n        }\n        /**\n         * Detect a solid side which has minimum transition.\n         */\n        detectSolid1(cornerPoints) {\n            // 0  2\n            // 1  3\n            let pointA = cornerPoints[0];\n            let pointB = cornerPoints[1];\n            let pointC = cornerPoints[3];\n            let pointD = cornerPoints[2];\n            let trAB = this.transitionsBetween(pointA, pointB);\n            let trBC = this.transitionsBetween(pointB, pointC);\n            let trCD = this.transitionsBetween(pointC, pointD);\n            let trDA = this.transitionsBetween(pointD, pointA);\n            // 0..3\n            // :  :\n            // 1--2\n            let min = trAB;\n            let points = [pointD, pointA, pointB, pointC];\n            if (min > trBC) {\n                min = trBC;\n                points[0] = pointA;\n                points[1] = pointB;\n                points[2] = pointC;\n                points[3] = pointD;\n            }\n            if (min > trCD) {\n                min = trCD;\n                points[0] = pointB;\n                points[1] = pointC;\n                points[2] = pointD;\n                points[3] = pointA;\n            }\n            if (min > trDA) {\n                points[0] = pointC;\n                points[1] = pointD;\n                points[2] = pointA;\n                points[3] = pointB;\n            }\n            return points;\n        }\n        /**\n         * Detect a second solid side next to first solid side.\n         */\n        detectSolid2(points) {\n            // A..D\n            // :  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // Transition detection on the edge is not stable.\n            // To safely detect, shift the points to the module center.\n            let tr = this.transitionsBetween(pointA, pointD);\n            let pointBs = Detector$1.shiftPoint(pointB, pointC, (tr + 1) * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, (tr + 1) * 4);\n            let trBA = this.transitionsBetween(pointBs, pointA);\n            let trCD = this.transitionsBetween(pointCs, pointD);\n            // 0..3\n            // |  :\n            // 1--2\n            if (trBA < trCD) {\n                // solid sides: A-B-C\n                points[0] = pointA;\n                points[1] = pointB;\n                points[2] = pointC;\n                points[3] = pointD;\n            }\n            else {\n                // solid sides: B-C-D\n                points[0] = pointB;\n                points[1] = pointC;\n                points[2] = pointD;\n                points[3] = pointA;\n            }\n            return points;\n        }\n        /**\n         * Calculates the corner position of the white top right module.\n         */\n        correctTopRight(points) {\n            // A..D\n            // |  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // shift points for safe transition detection.\n            let trTop = this.transitionsBetween(pointA, pointD);\n            let trRight = this.transitionsBetween(pointB, pointD);\n            let pointAs = Detector$1.shiftPoint(pointA, pointB, (trRight + 1) * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, (trTop + 1) * 4);\n            trTop = this.transitionsBetween(pointAs, pointD);\n            trRight = this.transitionsBetween(pointCs, pointD);\n            let candidate1 = new ResultPoint(pointD.getX() + (pointC.getX() - pointB.getX()) / (trTop + 1), pointD.getY() + (pointC.getY() - pointB.getY()) / (trTop + 1));\n            let candidate2 = new ResultPoint(pointD.getX() + (pointA.getX() - pointB.getX()) / (trRight + 1), pointD.getY() + (pointA.getY() - pointB.getY()) / (trRight + 1));\n            if (!this.isValid(candidate1)) {\n                if (this.isValid(candidate2)) {\n                    return candidate2;\n                }\n                return null;\n            }\n            if (!this.isValid(candidate2)) {\n                return candidate1;\n            }\n            let sumc1 = this.transitionsBetween(pointAs, candidate1) + this.transitionsBetween(pointCs, candidate1);\n            let sumc2 = this.transitionsBetween(pointAs, candidate2) + this.transitionsBetween(pointCs, candidate2);\n            if (sumc1 > sumc2) {\n                return candidate1;\n            }\n            else {\n                return candidate2;\n            }\n        }\n        /**\n         * Shift the edge points to the module center.\n         */\n        shiftToModuleCenter(points) {\n            // A..D\n            // |  :\n            // B--C\n            let pointA = points[0];\n            let pointB = points[1];\n            let pointC = points[2];\n            let pointD = points[3];\n            // calculate pseudo dimensions\n            let dimH = this.transitionsBetween(pointA, pointD) + 1;\n            let dimV = this.transitionsBetween(pointC, pointD) + 1;\n            // shift points for safe dimension detection\n            let pointAs = Detector$1.shiftPoint(pointA, pointB, dimV * 4);\n            let pointCs = Detector$1.shiftPoint(pointC, pointB, dimH * 4);\n            //  calculate more precise dimensions\n            dimH = this.transitionsBetween(pointAs, pointD) + 1;\n            dimV = this.transitionsBetween(pointCs, pointD) + 1;\n            if ((dimH & 0x01) === 1) {\n                dimH += 1;\n            }\n            if ((dimV & 0x01) === 1) {\n                dimV += 1;\n            }\n            // WhiteRectangleDetector returns points inside of the rectangle.\n            // I want points on the edges.\n            let centerX = (pointA.getX() + pointB.getX() + pointC.getX() + pointD.getX()) / 4;\n            let centerY = (pointA.getY() + pointB.getY() + pointC.getY() + pointD.getY()) / 4;\n            pointA = Detector$1.moveAway(pointA, centerX, centerY);\n            pointB = Detector$1.moveAway(pointB, centerX, centerY);\n            pointC = Detector$1.moveAway(pointC, centerX, centerY);\n            pointD = Detector$1.moveAway(pointD, centerX, centerY);\n            let pointBs;\n            let pointDs;\n            // shift points to the center of each modules\n            pointAs = Detector$1.shiftPoint(pointA, pointB, dimV * 4);\n            pointAs = Detector$1.shiftPoint(pointAs, pointD, dimH * 4);\n            pointBs = Detector$1.shiftPoint(pointB, pointA, dimV * 4);\n            pointBs = Detector$1.shiftPoint(pointBs, pointC, dimH * 4);\n            pointCs = Detector$1.shiftPoint(pointC, pointD, dimV * 4);\n            pointCs = Detector$1.shiftPoint(pointCs, pointB, dimH * 4);\n            pointDs = Detector$1.shiftPoint(pointD, pointC, dimV * 4);\n            pointDs = Detector$1.shiftPoint(pointDs, pointA, dimH * 4);\n            return [pointAs, pointBs, pointCs, pointDs];\n        }\n        isValid(p) {\n            return p.getX() >= 0 && p.getX() < this.image.getWidth() && p.getY() > 0 && p.getY() < this.image.getHeight();\n        }\n        static sampleGrid(image, topLeft, bottomLeft, bottomRight, topRight, dimensionX, dimensionY) {\n            const sampler = GridSamplerInstance.getInstance();\n            return sampler.sampleGrid(image, dimensionX, dimensionY, 0.5, 0.5, dimensionX - 0.5, 0.5, dimensionX - 0.5, dimensionY - 0.5, 0.5, dimensionY - 0.5, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n        }\n        /**\n         * Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.\n         */\n        transitionsBetween(from, to) {\n            // See QR Code Detector, sizeOfBlackWhiteBlackRun()\n            let fromX = Math.trunc(from.getX());\n            let fromY = Math.trunc(from.getY());\n            let toX = Math.trunc(to.getX());\n            let toY = Math.trunc(to.getY());\n            let steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n            if (steep) {\n                let temp = fromX;\n                fromX = fromY;\n                fromY = temp;\n                temp = toX;\n                toX = toY;\n                toY = temp;\n            }\n            let dx = Math.abs(toX - fromX);\n            let dy = Math.abs(toY - fromY);\n            let error = -dx / 2;\n            let ystep = fromY < toY ? 1 : -1;\n            let xstep = fromX < toX ? 1 : -1;\n            let transitions = 0;\n            let inBlack = this.image.get(steep ? fromY : fromX, steep ? fromX : fromY);\n            for (let x = fromX, y = fromY; x !== toX; x += xstep) {\n                let isBlack = this.image.get(steep ? y : x, steep ? x : y);\n                if (isBlack !== inBlack) {\n                    transitions++;\n                    inBlack = isBlack;\n                }\n                error += dy;\n                if (error > 0) {\n                    if (y === toY) {\n                        break;\n                    }\n                    y += ystep;\n                    error -= dx;\n                }\n            }\n            return transitions;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This implementation can detect and decode Data Matrix codes in an image.\n     *\n     * @author bbrown@google.com (Brian Brown)\n     */\n    class DataMatrixReader {\n        constructor() {\n            this.decoder = new Decoder$1();\n        }\n        /**\n         * Locates and decodes a Data Matrix code in an image.\n         *\n         * @return a String representing the content encoded by the Data Matrix code\n         * @throws NotFoundException if a Data Matrix code cannot be found\n         * @throws FormatException if a Data Matrix code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        // @Override\n        // public Result decode(BinaryBitmap image) throws NotFoundException, ChecksumException, FormatException {\n        //   return decode(image, null);\n        // }\n        // @Override\n        decode(image, hints = null) {\n            let decoderResult;\n            let points;\n            if (hints != null && hints.has(DecodeHintType$1.PURE_BARCODE)) {\n                const bits = DataMatrixReader.extractPureBits(image.getBlackMatrix());\n                decoderResult = this.decoder.decode(bits);\n                points = DataMatrixReader.NO_POINTS;\n            }\n            else {\n                const detectorResult = new Detector$1(image.getBlackMatrix()).detect();\n                decoderResult = this.decoder.decode(detectorResult.getBits());\n                points = detectorResult.getPoints();\n            }\n            const rawBytes = decoderResult.getRawBytes();\n            const result = new Result(decoderResult.getText(), rawBytes, 8 * rawBytes.length, points, BarcodeFormat$1.DATA_MATRIX, System.currentTimeMillis());\n            const byteSegments = decoderResult.getByteSegments();\n            if (byteSegments != null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            const ecLevel = decoderResult.getECLevel();\n            if (ecLevel != null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            return result;\n        }\n        // @Override\n        reset() {\n            // do nothing\n        }\n        /**\n         * This method detects a code in a \"pure\" image -- that is, pure monochrome image\n         * which contains only an unrotated, unskewed, image of a code, with some white border\n         * around it. This is a specialized method that works exceptionally fast in this special\n         * case.\n         *\n         * @see com.google.zxing.qrcode.QRCodeReader#extractPureBits(BitMatrix)\n         */\n        static extractPureBits(image) {\n            const leftTopBlack = image.getTopLeftOnBit();\n            const rightBottomBlack = image.getBottomRightOnBit();\n            if (leftTopBlack == null || rightBottomBlack == null) {\n                throw new NotFoundException();\n            }\n            const moduleSize = this.moduleSize(leftTopBlack, image);\n            let top = leftTopBlack[1];\n            const bottom = rightBottomBlack[1];\n            let left = leftTopBlack[0];\n            const right = rightBottomBlack[0];\n            const matrixWidth = (right - left + 1) / moduleSize;\n            const matrixHeight = (bottom - top + 1) / moduleSize;\n            if (matrixWidth <= 0 || matrixHeight <= 0) {\n                throw new NotFoundException();\n            }\n            // Push in the \"border\" by half the module width so that we start\n            // sampling in the middle of the module. Just in case the image is a\n            // little off, this will help recover.\n            const nudge = moduleSize / 2;\n            top += nudge;\n            left += nudge;\n            // Now just read off the bits\n            const bits = new BitMatrix(matrixWidth, matrixHeight);\n            for (let y = 0; y < matrixHeight; y++) {\n                const iOffset = top + y * moduleSize;\n                for (let x = 0; x < matrixWidth; x++) {\n                    if (image.get(left + x * moduleSize, iOffset)) {\n                        bits.set(x, y);\n                    }\n                }\n            }\n            return bits;\n        }\n        static moduleSize(leftTopBlack, image) {\n            const width = image.getWidth();\n            let x = leftTopBlack[0];\n            const y = leftTopBlack[1];\n            while (x < width && image.get(x, y)) {\n                x++;\n            }\n            if (x === width) {\n                throw new NotFoundException();\n            }\n            const moduleSize = x - leftTopBlack[0];\n            if (moduleSize === 0) {\n                throw new NotFoundException();\n            }\n            return moduleSize;\n        }\n    }\n    DataMatrixReader.NO_POINTS = [];\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserDatamatrixCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserQRCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new DataMatrixReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var ErrorCorrectionLevelValues;\n    (function (ErrorCorrectionLevelValues) {\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"L\"] = 0] = \"L\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"M\"] = 1] = \"M\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"Q\"] = 2] = \"Q\";\n        ErrorCorrectionLevelValues[ErrorCorrectionLevelValues[\"H\"] = 3] = \"H\";\n    })(ErrorCorrectionLevelValues || (ErrorCorrectionLevelValues = {}));\n    /**\n     * <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels\n     * defined by the QR code standard.</p>\n     *\n     * @author Sean Owen\n     */\n    class ErrorCorrectionLevel {\n        constructor(value, stringValue, bits /*int*/) {\n            this.value = value;\n            this.stringValue = stringValue;\n            this.bits = bits;\n            ErrorCorrectionLevel.FOR_BITS.set(bits, this);\n            ErrorCorrectionLevel.FOR_VALUE.set(value, this);\n        }\n        getValue() {\n            return this.value;\n        }\n        getBits() {\n            return this.bits;\n        }\n        static fromString(s) {\n            switch (s) {\n                case 'L': return ErrorCorrectionLevel.L;\n                case 'M': return ErrorCorrectionLevel.M;\n                case 'Q': return ErrorCorrectionLevel.Q;\n                case 'H': return ErrorCorrectionLevel.H;\n                default: throw new ArgumentException(s + 'not available');\n            }\n        }\n        toString() {\n            return this.stringValue;\n        }\n        equals(o) {\n            if (!(o instanceof ErrorCorrectionLevel)) {\n                return false;\n            }\n            const other = o;\n            return this.value === other.value;\n        }\n        /**\n         * @param bits int containing the two bits encoding a QR Code's error correction level\n         * @return ErrorCorrectionLevel representing the encoded error correction level\n         */\n        static forBits(bits /*int*/) {\n            if (bits < 0 || bits >= ErrorCorrectionLevel.FOR_BITS.size) {\n                throw new IllegalArgumentException();\n            }\n            return ErrorCorrectionLevel.FOR_BITS.get(bits);\n        }\n    }\n    ErrorCorrectionLevel.FOR_BITS = new Map();\n    ErrorCorrectionLevel.FOR_VALUE = new Map();\n    /** L = ~7% correction */\n    ErrorCorrectionLevel.L = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.L, 'L', 0x01);\n    /** M = ~15% correction */\n    ErrorCorrectionLevel.M = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.M, 'M', 0x00);\n    /** Q = ~25% correction */\n    ErrorCorrectionLevel.Q = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.Q, 'Q', 0x03);\n    /** H = ~30% correction */\n    ErrorCorrectionLevel.H = new ErrorCorrectionLevel(ErrorCorrectionLevelValues.H, 'H', 0x02);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a QR Code's format information, including the data mask used and\n     * error correction level.</p>\n     *\n     * @author Sean Owen\n     * @see DataMask\n     * @see ErrorCorrectionLevel\n     */\n    class FormatInformation {\n        constructor(formatInfo /*int*/) {\n            // Bits 3,4\n            this.errorCorrectionLevel = ErrorCorrectionLevel.forBits((formatInfo >> 3) & 0x03);\n            // Bottom 3 bits\n            this.dataMask = /*(byte) */ (formatInfo & 0x07);\n        }\n        static numBitsDiffering(a /*int*/, b /*int*/) {\n            return Integer.bitCount(a ^ b);\n        }\n        /**\n         * @param maskedFormatInfo1 format info indicator, with mask still applied\n         * @param maskedFormatInfo2 second copy of same info; both are checked at the same time\n         *  to establish best match\n         * @return information about the format it specifies, or {@code null}\n         *  if doesn't seem to match any known pattern\n         */\n        static decodeFormatInformation(maskedFormatInfo1 /*int*/, maskedFormatInfo2 /*int*/) {\n            const formatInfo = FormatInformation.doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2);\n            if (formatInfo !== null) {\n                return formatInfo;\n            }\n            // Should return null, but, some QR codes apparently\n            // do not mask this info. Try again by actually masking the pattern\n            // first\n            return FormatInformation.doDecodeFormatInformation(maskedFormatInfo1 ^ FormatInformation.FORMAT_INFO_MASK_QR, maskedFormatInfo2 ^ FormatInformation.FORMAT_INFO_MASK_QR);\n        }\n        static doDecodeFormatInformation(maskedFormatInfo1 /*int*/, maskedFormatInfo2 /*int*/) {\n            // Find the int in FORMAT_INFO_DECODE_LOOKUP with fewest bits differing\n            let bestDifference = Number.MAX_SAFE_INTEGER;\n            let bestFormatInfo = 0;\n            for (const decodeInfo of FormatInformation.FORMAT_INFO_DECODE_LOOKUP) {\n                const targetInfo = decodeInfo[0];\n                if (targetInfo === maskedFormatInfo1 || targetInfo === maskedFormatInfo2) {\n                    // Found an exact match\n                    return new FormatInformation(decodeInfo[1]);\n                }\n                let bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo1, targetInfo);\n                if (bitsDifference < bestDifference) {\n                    bestFormatInfo = decodeInfo[1];\n                    bestDifference = bitsDifference;\n                }\n                if (maskedFormatInfo1 !== maskedFormatInfo2) {\n                    // also try the other option\n                    bitsDifference = FormatInformation.numBitsDiffering(maskedFormatInfo2, targetInfo);\n                    if (bitsDifference < bestDifference) {\n                        bestFormatInfo = decodeInfo[1];\n                        bestDifference = bitsDifference;\n                    }\n                }\n            }\n            // Hamming distance of the 32 masked codes is 7, by construction, so <= 3 bits\n            // differing means we found a match\n            if (bestDifference <= 3) {\n                return new FormatInformation(bestFormatInfo);\n            }\n            return null;\n        }\n        getErrorCorrectionLevel() {\n            return this.errorCorrectionLevel;\n        }\n        getDataMask() {\n            return this.dataMask;\n        }\n        /*@Override*/\n        hashCode() {\n            return (this.errorCorrectionLevel.getBits() << 3) | this.dataMask;\n        }\n        /*@Override*/\n        equals(o) {\n            if (!(o instanceof FormatInformation)) {\n                return false;\n            }\n            const other = o;\n            return this.errorCorrectionLevel === other.errorCorrectionLevel &&\n                this.dataMask === other.dataMask;\n        }\n    }\n    FormatInformation.FORMAT_INFO_MASK_QR = 0x5412;\n    /**\n     * See ISO 18004:2006, Annex C, Table C.1\n     */\n    FormatInformation.FORMAT_INFO_DECODE_LOOKUP = [\n        Int32Array.from([0x5412, 0x00]),\n        Int32Array.from([0x5125, 0x01]),\n        Int32Array.from([0x5E7C, 0x02]),\n        Int32Array.from([0x5B4B, 0x03]),\n        Int32Array.from([0x45F9, 0x04]),\n        Int32Array.from([0x40CE, 0x05]),\n        Int32Array.from([0x4F97, 0x06]),\n        Int32Array.from([0x4AA0, 0x07]),\n        Int32Array.from([0x77C4, 0x08]),\n        Int32Array.from([0x72F3, 0x09]),\n        Int32Array.from([0x7DAA, 0x0A]),\n        Int32Array.from([0x789D, 0x0B]),\n        Int32Array.from([0x662F, 0x0C]),\n        Int32Array.from([0x6318, 0x0D]),\n        Int32Array.from([0x6C41, 0x0E]),\n        Int32Array.from([0x6976, 0x0F]),\n        Int32Array.from([0x1689, 0x10]),\n        Int32Array.from([0x13BE, 0x11]),\n        Int32Array.from([0x1CE7, 0x12]),\n        Int32Array.from([0x19D0, 0x13]),\n        Int32Array.from([0x0762, 0x14]),\n        Int32Array.from([0x0255, 0x15]),\n        Int32Array.from([0x0D0C, 0x16]),\n        Int32Array.from([0x083B, 0x17]),\n        Int32Array.from([0x355F, 0x18]),\n        Int32Array.from([0x3068, 0x19]),\n        Int32Array.from([0x3F31, 0x1A]),\n        Int32Array.from([0x3A06, 0x1B]),\n        Int32Array.from([0x24B4, 0x1C]),\n        Int32Array.from([0x2183, 0x1D]),\n        Int32Array.from([0x2EDA, 0x1E]),\n        Int32Array.from([0x2BED, 0x1F]),\n    ];\n\n    /**\n     * <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will\n     * use blocks of differing sizes within one version, so, this encapsulates the parameters for\n     * each set of blocks. It also holds the number of error-correction codewords per block since it\n     * will be the same across all blocks within one version.</p>\n     */\n    class ECBlocks$1 {\n        constructor(ecCodewordsPerBlock /*int*/, ...ecBlocks) {\n            this.ecCodewordsPerBlock = ecCodewordsPerBlock;\n            this.ecBlocks = ecBlocks;\n        }\n        getECCodewordsPerBlock() {\n            return this.ecCodewordsPerBlock;\n        }\n        getNumBlocks() {\n            let total = 0;\n            const ecBlocks = this.ecBlocks;\n            for (const ecBlock of ecBlocks) {\n                total += ecBlock.getCount();\n            }\n            return total;\n        }\n        getTotalECCodewords() {\n            return this.ecCodewordsPerBlock * this.getNumBlocks();\n        }\n        getECBlocks() {\n            return this.ecBlocks;\n        }\n    }\n\n    /**\n     * <p>Encapsulates the parameters for one error-correction block in one symbol version.\n     * This includes the number of data codewords, and the number of times a block with these\n     * parameters is used consecutively in the QR code version's format.</p>\n     */\n    class ECB$1 {\n        constructor(count /*int*/, dataCodewords /*int*/) {\n            this.count = count;\n            this.dataCodewords = dataCodewords;\n        }\n        getCount() {\n            return this.count;\n        }\n        getDataCodewords() {\n            return this.dataCodewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * See ISO 18004:2006 Annex D\n     *\n     * @author Sean Owen\n     */\n    class Version$1 {\n        constructor(versionNumber /*int*/, alignmentPatternCenters, ...ecBlocks) {\n            this.versionNumber = versionNumber;\n            this.alignmentPatternCenters = alignmentPatternCenters;\n            this.ecBlocks = ecBlocks;\n            let total = 0;\n            const ecCodewords = ecBlocks[0].getECCodewordsPerBlock();\n            const ecbArray = ecBlocks[0].getECBlocks();\n            for (const ecBlock of ecbArray) {\n                total += ecBlock.getCount() * (ecBlock.getDataCodewords() + ecCodewords);\n            }\n            this.totalCodewords = total;\n        }\n        getVersionNumber() {\n            return this.versionNumber;\n        }\n        getAlignmentPatternCenters() {\n            return this.alignmentPatternCenters;\n        }\n        getTotalCodewords() {\n            return this.totalCodewords;\n        }\n        getDimensionForVersion() {\n            return 17 + 4 * this.versionNumber;\n        }\n        getECBlocksForLevel(ecLevel) {\n            return this.ecBlocks[ecLevel.getValue()];\n            // TYPESCRIPTPORT: original was using ordinal, and using the order of levels as defined in ErrorCorrectionLevel enum (LMQH)\n            // I will use the direct value from ErrorCorrectionLevelValues enum which in typescript goes to a number\n        }\n        /**\n         * <p>Deduces version information purely from QR Code dimensions.</p>\n         *\n         * @param dimension dimension in modules\n         * @return Version for a QR Code of that dimension\n         * @throws FormatException if dimension is not 1 mod 4\n         */\n        static getProvisionalVersionForDimension(dimension /*int*/) {\n            if (dimension % 4 !== 1) {\n                throw new FormatException();\n            }\n            try {\n                return this.getVersionForNumber((dimension - 17) / 4);\n            }\n            catch (ignored /*: IllegalArgumentException*/) {\n                throw new FormatException();\n            }\n        }\n        static getVersionForNumber(versionNumber /*int*/) {\n            if (versionNumber < 1 || versionNumber > 40) {\n                throw new IllegalArgumentException();\n            }\n            return Version$1.VERSIONS[versionNumber - 1];\n        }\n        static decodeVersionInformation(versionBits /*int*/) {\n            let bestDifference = Number.MAX_SAFE_INTEGER;\n            let bestVersion = 0;\n            for (let i = 0; i < Version$1.VERSION_DECODE_INFO.length; i++) {\n                const targetVersion = Version$1.VERSION_DECODE_INFO[i];\n                // Do the version info bits match exactly? done.\n                if (targetVersion === versionBits) {\n                    return Version$1.getVersionForNumber(i + 7);\n                }\n                // Otherwise see if this is the closest to a real version info bit string\n                // we have seen so far\n                const bitsDifference = FormatInformation.numBitsDiffering(versionBits, targetVersion);\n                if (bitsDifference < bestDifference) {\n                    bestVersion = i + 7;\n                    bestDifference = bitsDifference;\n                }\n            }\n            // We can tolerate up to 3 bits of error since no two version info codewords will\n            // differ in less than 8 bits.\n            if (bestDifference <= 3) {\n                return Version$1.getVersionForNumber(bestVersion);\n            }\n            // If we didn't find a close enough match, fail\n            return null;\n        }\n        /**\n         * See ISO 18004:2006 Annex E\n         */\n        buildFunctionPattern() {\n            const dimension = this.getDimensionForVersion();\n            const bitMatrix = new BitMatrix(dimension);\n            // Top left finder pattern + separator + format\n            bitMatrix.setRegion(0, 0, 9, 9);\n            // Top right finder pattern + separator + format\n            bitMatrix.setRegion(dimension - 8, 0, 8, 9);\n            // Bottom left finder pattern + separator + format\n            bitMatrix.setRegion(0, dimension - 8, 9, 8);\n            // Alignment patterns\n            const max = this.alignmentPatternCenters.length;\n            for (let x = 0; x < max; x++) {\n                const i = this.alignmentPatternCenters[x] - 2;\n                for (let y = 0; y < max; y++) {\n                    if ((x === 0 && (y === 0 || y === max - 1)) || (x === max - 1 && y === 0)) {\n                        // No alignment patterns near the three finder patterns\n                        continue;\n                    }\n                    bitMatrix.setRegion(this.alignmentPatternCenters[y] - 2, i, 5, 5);\n                }\n            }\n            // Vertical timing pattern\n            bitMatrix.setRegion(6, 9, 1, dimension - 17);\n            // Horizontal timing pattern\n            bitMatrix.setRegion(9, 6, dimension - 17, 1);\n            if (this.versionNumber > 6) {\n                // Version info, top right\n                bitMatrix.setRegion(dimension - 11, 0, 3, 6);\n                // Version info, bottom left\n                bitMatrix.setRegion(0, dimension - 11, 6, 3);\n            }\n            return bitMatrix;\n        }\n        /*@Override*/\n        toString() {\n            return '' + this.versionNumber;\n        }\n    }\n    /**\n       * See ISO 18004:2006 Annex D.\n       * Element i represents the raw version bits that specify version i + 7\n       */\n    Version$1.VERSION_DECODE_INFO = Int32Array.from([\n        0x07C94, 0x085BC, 0x09A99, 0x0A4D3, 0x0BBF6,\n        0x0C762, 0x0D847, 0x0E60D, 0x0F928, 0x10B78,\n        0x1145D, 0x12A17, 0x13532, 0x149A6, 0x15683,\n        0x168C9, 0x177EC, 0x18EC4, 0x191E1, 0x1AFAB,\n        0x1B08E, 0x1CC1A, 0x1D33F, 0x1ED75, 0x1F250,\n        0x209D5, 0x216F0, 0x228BA, 0x2379F, 0x24B0B,\n        0x2542E, 0x26A64, 0x27541, 0x28C69\n    ]);\n    /**\n       * See ISO 18004:2006 6.5.1 Table 9\n       */\n    Version$1.VERSIONS = [\n        new Version$1(1, new Int32Array(0), new ECBlocks$1(7, new ECB$1(1, 19)), new ECBlocks$1(10, new ECB$1(1, 16)), new ECBlocks$1(13, new ECB$1(1, 13)), new ECBlocks$1(17, new ECB$1(1, 9))),\n        new Version$1(2, Int32Array.from([6, 18]), new ECBlocks$1(10, new ECB$1(1, 34)), new ECBlocks$1(16, new ECB$1(1, 28)), new ECBlocks$1(22, new ECB$1(1, 22)), new ECBlocks$1(28, new ECB$1(1, 16))),\n        new Version$1(3, Int32Array.from([6, 22]), new ECBlocks$1(15, new ECB$1(1, 55)), new ECBlocks$1(26, new ECB$1(1, 44)), new ECBlocks$1(18, new ECB$1(2, 17)), new ECBlocks$1(22, new ECB$1(2, 13))),\n        new Version$1(4, Int32Array.from([6, 26]), new ECBlocks$1(20, new ECB$1(1, 80)), new ECBlocks$1(18, new ECB$1(2, 32)), new ECBlocks$1(26, new ECB$1(2, 24)), new ECBlocks$1(16, new ECB$1(4, 9))),\n        new Version$1(5, Int32Array.from([6, 30]), new ECBlocks$1(26, new ECB$1(1, 108)), new ECBlocks$1(24, new ECB$1(2, 43)), new ECBlocks$1(18, new ECB$1(2, 15), new ECB$1(2, 16)), new ECBlocks$1(22, new ECB$1(2, 11), new ECB$1(2, 12))),\n        new Version$1(6, Int32Array.from([6, 34]), new ECBlocks$1(18, new ECB$1(2, 68)), new ECBlocks$1(16, new ECB$1(4, 27)), new ECBlocks$1(24, new ECB$1(4, 19)), new ECBlocks$1(28, new ECB$1(4, 15))),\n        new Version$1(7, Int32Array.from([6, 22, 38]), new ECBlocks$1(20, new ECB$1(2, 78)), new ECBlocks$1(18, new ECB$1(4, 31)), new ECBlocks$1(18, new ECB$1(2, 14), new ECB$1(4, 15)), new ECBlocks$1(26, new ECB$1(4, 13), new ECB$1(1, 14))),\n        new Version$1(8, Int32Array.from([6, 24, 42]), new ECBlocks$1(24, new ECB$1(2, 97)), new ECBlocks$1(22, new ECB$1(2, 38), new ECB$1(2, 39)), new ECBlocks$1(22, new ECB$1(4, 18), new ECB$1(2, 19)), new ECBlocks$1(26, new ECB$1(4, 14), new ECB$1(2, 15))),\n        new Version$1(9, Int32Array.from([6, 26, 46]), new ECBlocks$1(30, new ECB$1(2, 116)), new ECBlocks$1(22, new ECB$1(3, 36), new ECB$1(2, 37)), new ECBlocks$1(20, new ECB$1(4, 16), new ECB$1(4, 17)), new ECBlocks$1(24, new ECB$1(4, 12), new ECB$1(4, 13))),\n        new Version$1(10, Int32Array.from([6, 28, 50]), new ECBlocks$1(18, new ECB$1(2, 68), new ECB$1(2, 69)), new ECBlocks$1(26, new ECB$1(4, 43), new ECB$1(1, 44)), new ECBlocks$1(24, new ECB$1(6, 19), new ECB$1(2, 20)), new ECBlocks$1(28, new ECB$1(6, 15), new ECB$1(2, 16))),\n        new Version$1(11, Int32Array.from([6, 30, 54]), new ECBlocks$1(20, new ECB$1(4, 81)), new ECBlocks$1(30, new ECB$1(1, 50), new ECB$1(4, 51)), new ECBlocks$1(28, new ECB$1(4, 22), new ECB$1(4, 23)), new ECBlocks$1(24, new ECB$1(3, 12), new ECB$1(8, 13))),\n        new Version$1(12, Int32Array.from([6, 32, 58]), new ECBlocks$1(24, new ECB$1(2, 92), new ECB$1(2, 93)), new ECBlocks$1(22, new ECB$1(6, 36), new ECB$1(2, 37)), new ECBlocks$1(26, new ECB$1(4, 20), new ECB$1(6, 21)), new ECBlocks$1(28, new ECB$1(7, 14), new ECB$1(4, 15))),\n        new Version$1(13, Int32Array.from([6, 34, 62]), new ECBlocks$1(26, new ECB$1(4, 107)), new ECBlocks$1(22, new ECB$1(8, 37), new ECB$1(1, 38)), new ECBlocks$1(24, new ECB$1(8, 20), new ECB$1(4, 21)), new ECBlocks$1(22, new ECB$1(12, 11), new ECB$1(4, 12))),\n        new Version$1(14, Int32Array.from([6, 26, 46, 66]), new ECBlocks$1(30, new ECB$1(3, 115), new ECB$1(1, 116)), new ECBlocks$1(24, new ECB$1(4, 40), new ECB$1(5, 41)), new ECBlocks$1(20, new ECB$1(11, 16), new ECB$1(5, 17)), new ECBlocks$1(24, new ECB$1(11, 12), new ECB$1(5, 13))),\n        new Version$1(15, Int32Array.from([6, 26, 48, 70]), new ECBlocks$1(22, new ECB$1(5, 87), new ECB$1(1, 88)), new ECBlocks$1(24, new ECB$1(5, 41), new ECB$1(5, 42)), new ECBlocks$1(30, new ECB$1(5, 24), new ECB$1(7, 25)), new ECBlocks$1(24, new ECB$1(11, 12), new ECB$1(7, 13))),\n        new Version$1(16, Int32Array.from([6, 26, 50, 74]), new ECBlocks$1(24, new ECB$1(5, 98), new ECB$1(1, 99)), new ECBlocks$1(28, new ECB$1(7, 45), new ECB$1(3, 46)), new ECBlocks$1(24, new ECB$1(15, 19), new ECB$1(2, 20)), new ECBlocks$1(30, new ECB$1(3, 15), new ECB$1(13, 16))),\n        new Version$1(17, Int32Array.from([6, 30, 54, 78]), new ECBlocks$1(28, new ECB$1(1, 107), new ECB$1(5, 108)), new ECBlocks$1(28, new ECB$1(10, 46), new ECB$1(1, 47)), new ECBlocks$1(28, new ECB$1(1, 22), new ECB$1(15, 23)), new ECBlocks$1(28, new ECB$1(2, 14), new ECB$1(17, 15))),\n        new Version$1(18, Int32Array.from([6, 30, 56, 82]), new ECBlocks$1(30, new ECB$1(5, 120), new ECB$1(1, 121)), new ECBlocks$1(26, new ECB$1(9, 43), new ECB$1(4, 44)), new ECBlocks$1(28, new ECB$1(17, 22), new ECB$1(1, 23)), new ECBlocks$1(28, new ECB$1(2, 14), new ECB$1(19, 15))),\n        new Version$1(19, Int32Array.from([6, 30, 58, 86]), new ECBlocks$1(28, new ECB$1(3, 113), new ECB$1(4, 114)), new ECBlocks$1(26, new ECB$1(3, 44), new ECB$1(11, 45)), new ECBlocks$1(26, new ECB$1(17, 21), new ECB$1(4, 22)), new ECBlocks$1(26, new ECB$1(9, 13), new ECB$1(16, 14))),\n        new Version$1(20, Int32Array.from([6, 34, 62, 90]), new ECBlocks$1(28, new ECB$1(3, 107), new ECB$1(5, 108)), new ECBlocks$1(26, new ECB$1(3, 41), new ECB$1(13, 42)), new ECBlocks$1(30, new ECB$1(15, 24), new ECB$1(5, 25)), new ECBlocks$1(28, new ECB$1(15, 15), new ECB$1(10, 16))),\n        new Version$1(21, Int32Array.from([6, 28, 50, 72, 94]), new ECBlocks$1(28, new ECB$1(4, 116), new ECB$1(4, 117)), new ECBlocks$1(26, new ECB$1(17, 42)), new ECBlocks$1(28, new ECB$1(17, 22), new ECB$1(6, 23)), new ECBlocks$1(30, new ECB$1(19, 16), new ECB$1(6, 17))),\n        new Version$1(22, Int32Array.from([6, 26, 50, 74, 98]), new ECBlocks$1(28, new ECB$1(2, 111), new ECB$1(7, 112)), new ECBlocks$1(28, new ECB$1(17, 46)), new ECBlocks$1(30, new ECB$1(7, 24), new ECB$1(16, 25)), new ECBlocks$1(24, new ECB$1(34, 13))),\n        new Version$1(23, Int32Array.from([6, 30, 54, 78, 102]), new ECBlocks$1(30, new ECB$1(4, 121), new ECB$1(5, 122)), new ECBlocks$1(28, new ECB$1(4, 47), new ECB$1(14, 48)), new ECBlocks$1(30, new ECB$1(11, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(16, 15), new ECB$1(14, 16))),\n        new Version$1(24, Int32Array.from([6, 28, 54, 80, 106]), new ECBlocks$1(30, new ECB$1(6, 117), new ECB$1(4, 118)), new ECBlocks$1(28, new ECB$1(6, 45), new ECB$1(14, 46)), new ECBlocks$1(30, new ECB$1(11, 24), new ECB$1(16, 25)), new ECBlocks$1(30, new ECB$1(30, 16), new ECB$1(2, 17))),\n        new Version$1(25, Int32Array.from([6, 32, 58, 84, 110]), new ECBlocks$1(26, new ECB$1(8, 106), new ECB$1(4, 107)), new ECBlocks$1(28, new ECB$1(8, 47), new ECB$1(13, 48)), new ECBlocks$1(30, new ECB$1(7, 24), new ECB$1(22, 25)), new ECBlocks$1(30, new ECB$1(22, 15), new ECB$1(13, 16))),\n        new Version$1(26, Int32Array.from([6, 30, 58, 86, 114]), new ECBlocks$1(28, new ECB$1(10, 114), new ECB$1(2, 115)), new ECBlocks$1(28, new ECB$1(19, 46), new ECB$1(4, 47)), new ECBlocks$1(28, new ECB$1(28, 22), new ECB$1(6, 23)), new ECBlocks$1(30, new ECB$1(33, 16), new ECB$1(4, 17))),\n        new Version$1(27, Int32Array.from([6, 34, 62, 90, 118]), new ECBlocks$1(30, new ECB$1(8, 122), new ECB$1(4, 123)), new ECBlocks$1(28, new ECB$1(22, 45), new ECB$1(3, 46)), new ECBlocks$1(30, new ECB$1(8, 23), new ECB$1(26, 24)), new ECBlocks$1(30, new ECB$1(12, 15), new ECB$1(28, 16))),\n        new Version$1(28, Int32Array.from([6, 26, 50, 74, 98, 122]), new ECBlocks$1(30, new ECB$1(3, 117), new ECB$1(10, 118)), new ECBlocks$1(28, new ECB$1(3, 45), new ECB$1(23, 46)), new ECBlocks$1(30, new ECB$1(4, 24), new ECB$1(31, 25)), new ECBlocks$1(30, new ECB$1(11, 15), new ECB$1(31, 16))),\n        new Version$1(29, Int32Array.from([6, 30, 54, 78, 102, 126]), new ECBlocks$1(30, new ECB$1(7, 116), new ECB$1(7, 117)), new ECBlocks$1(28, new ECB$1(21, 45), new ECB$1(7, 46)), new ECBlocks$1(30, new ECB$1(1, 23), new ECB$1(37, 24)), new ECBlocks$1(30, new ECB$1(19, 15), new ECB$1(26, 16))),\n        new Version$1(30, Int32Array.from([6, 26, 52, 78, 104, 130]), new ECBlocks$1(30, new ECB$1(5, 115), new ECB$1(10, 116)), new ECBlocks$1(28, new ECB$1(19, 47), new ECB$1(10, 48)), new ECBlocks$1(30, new ECB$1(15, 24), new ECB$1(25, 25)), new ECBlocks$1(30, new ECB$1(23, 15), new ECB$1(25, 16))),\n        new Version$1(31, Int32Array.from([6, 30, 56, 82, 108, 134]), new ECBlocks$1(30, new ECB$1(13, 115), new ECB$1(3, 116)), new ECBlocks$1(28, new ECB$1(2, 46), new ECB$1(29, 47)), new ECBlocks$1(30, new ECB$1(42, 24), new ECB$1(1, 25)), new ECBlocks$1(30, new ECB$1(23, 15), new ECB$1(28, 16))),\n        new Version$1(32, Int32Array.from([6, 34, 60, 86, 112, 138]), new ECBlocks$1(30, new ECB$1(17, 115)), new ECBlocks$1(28, new ECB$1(10, 46), new ECB$1(23, 47)), new ECBlocks$1(30, new ECB$1(10, 24), new ECB$1(35, 25)), new ECBlocks$1(30, new ECB$1(19, 15), new ECB$1(35, 16))),\n        new Version$1(33, Int32Array.from([6, 30, 58, 86, 114, 142]), new ECBlocks$1(30, new ECB$1(17, 115), new ECB$1(1, 116)), new ECBlocks$1(28, new ECB$1(14, 46), new ECB$1(21, 47)), new ECBlocks$1(30, new ECB$1(29, 24), new ECB$1(19, 25)), new ECBlocks$1(30, new ECB$1(11, 15), new ECB$1(46, 16))),\n        new Version$1(34, Int32Array.from([6, 34, 62, 90, 118, 146]), new ECBlocks$1(30, new ECB$1(13, 115), new ECB$1(6, 116)), new ECBlocks$1(28, new ECB$1(14, 46), new ECB$1(23, 47)), new ECBlocks$1(30, new ECB$1(44, 24), new ECB$1(7, 25)), new ECBlocks$1(30, new ECB$1(59, 16), new ECB$1(1, 17))),\n        new Version$1(35, Int32Array.from([6, 30, 54, 78, 102, 126, 150]), new ECBlocks$1(30, new ECB$1(12, 121), new ECB$1(7, 122)), new ECBlocks$1(28, new ECB$1(12, 47), new ECB$1(26, 48)), new ECBlocks$1(30, new ECB$1(39, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(22, 15), new ECB$1(41, 16))),\n        new Version$1(36, Int32Array.from([6, 24, 50, 76, 102, 128, 154]), new ECBlocks$1(30, new ECB$1(6, 121), new ECB$1(14, 122)), new ECBlocks$1(28, new ECB$1(6, 47), new ECB$1(34, 48)), new ECBlocks$1(30, new ECB$1(46, 24), new ECB$1(10, 25)), new ECBlocks$1(30, new ECB$1(2, 15), new ECB$1(64, 16))),\n        new Version$1(37, Int32Array.from([6, 28, 54, 80, 106, 132, 158]), new ECBlocks$1(30, new ECB$1(17, 122), new ECB$1(4, 123)), new ECBlocks$1(28, new ECB$1(29, 46), new ECB$1(14, 47)), new ECBlocks$1(30, new ECB$1(49, 24), new ECB$1(10, 25)), new ECBlocks$1(30, new ECB$1(24, 15), new ECB$1(46, 16))),\n        new Version$1(38, Int32Array.from([6, 32, 58, 84, 110, 136, 162]), new ECBlocks$1(30, new ECB$1(4, 122), new ECB$1(18, 123)), new ECBlocks$1(28, new ECB$1(13, 46), new ECB$1(32, 47)), new ECBlocks$1(30, new ECB$1(48, 24), new ECB$1(14, 25)), new ECBlocks$1(30, new ECB$1(42, 15), new ECB$1(32, 16))),\n        new Version$1(39, Int32Array.from([6, 26, 54, 82, 110, 138, 166]), new ECBlocks$1(30, new ECB$1(20, 117), new ECB$1(4, 118)), new ECBlocks$1(28, new ECB$1(40, 47), new ECB$1(7, 48)), new ECBlocks$1(30, new ECB$1(43, 24), new ECB$1(22, 25)), new ECBlocks$1(30, new ECB$1(10, 15), new ECB$1(67, 16))),\n        new Version$1(40, Int32Array.from([6, 30, 58, 86, 114, 142, 170]), new ECBlocks$1(30, new ECB$1(19, 118), new ECB$1(6, 119)), new ECBlocks$1(28, new ECB$1(18, 47), new ECB$1(31, 48)), new ECBlocks$1(30, new ECB$1(34, 24), new ECB$1(34, 25)), new ECBlocks$1(30, new ECB$1(20, 15), new ECB$1(61, 16)))\n    ];\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var DataMaskValues;\n    (function (DataMaskValues) {\n        DataMaskValues[DataMaskValues[\"DATA_MASK_000\"] = 0] = \"DATA_MASK_000\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_001\"] = 1] = \"DATA_MASK_001\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_010\"] = 2] = \"DATA_MASK_010\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_011\"] = 3] = \"DATA_MASK_011\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_100\"] = 4] = \"DATA_MASK_100\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_101\"] = 5] = \"DATA_MASK_101\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_110\"] = 6] = \"DATA_MASK_110\";\n        DataMaskValues[DataMaskValues[\"DATA_MASK_111\"] = 7] = \"DATA_MASK_111\";\n    })(DataMaskValues || (DataMaskValues = {}));\n    /**\n     * <p>Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations\n     * of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,\n     * including areas used for finder patterns, timing patterns, etc. These areas should be unused\n     * after the point they are unmasked anyway.</p>\n     *\n     * <p>Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position\n     * and j is row position. In fact, as the text says, i is row position and j is column position.</p>\n     *\n     * @author Sean Owen\n     */\n    class DataMask {\n        // See ISO 18004:2006 6.8.1\n        constructor(value, isMasked) {\n            this.value = value;\n            this.isMasked = isMasked;\n        }\n        // End of enum constants.\n        /**\n         * <p>Implementations of this method reverse the data masking process applied to a QR Code and\n         * make its bits ready to read.</p>\n         *\n         * @param bits representation of QR Code bits\n         * @param dimension dimension of QR Code, represented by bits, being unmasked\n         */\n        unmaskBitMatrix(bits, dimension /*int*/) {\n            for (let i = 0; i < dimension; i++) {\n                for (let j = 0; j < dimension; j++) {\n                    if (this.isMasked(i, j)) {\n                        bits.flip(j, i);\n                    }\n                }\n            }\n        }\n    }\n    DataMask.values = new Map([\n        /**\n         * 000: mask bits for which (x + y) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_000, new DataMask(DataMaskValues.DATA_MASK_000, (i /*int*/, j /*int*/) => { return ((i + j) & 0x01) === 0; })],\n        /**\n         * 001: mask bits for which x mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_001, new DataMask(DataMaskValues.DATA_MASK_001, (i /*int*/, j /*int*/) => { return (i & 0x01) === 0; })],\n        /**\n         * 010: mask bits for which y mod 3 == 0\n         */\n        [DataMaskValues.DATA_MASK_010, new DataMask(DataMaskValues.DATA_MASK_010, (i /*int*/, j /*int*/) => { return j % 3 === 0; })],\n        /**\n         * 011: mask bits for which (x + y) mod 3 == 0\n         */\n        [DataMaskValues.DATA_MASK_011, new DataMask(DataMaskValues.DATA_MASK_011, (i /*int*/, j /*int*/) => { return (i + j) % 3 === 0; })],\n        /**\n         * 100: mask bits for which (x/2 + y/3) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_100, new DataMask(DataMaskValues.DATA_MASK_100, (i /*int*/, j /*int*/) => { return ((Math.floor(i / 2) + Math.floor(j / 3)) & 0x01) === 0; })],\n        /**\n         * 101: mask bits for which xy mod 2 + xy mod 3 == 0\n         * equivalently, such that xy mod 6 == 0\n         */\n        [DataMaskValues.DATA_MASK_101, new DataMask(DataMaskValues.DATA_MASK_101, (i /*int*/, j /*int*/) => { return (i * j) % 6 === 0; })],\n        /**\n         * 110: mask bits for which (xy mod 2 + xy mod 3) mod 2 == 0\n         * equivalently, such that xy mod 6 < 3\n         */\n        [DataMaskValues.DATA_MASK_110, new DataMask(DataMaskValues.DATA_MASK_110, (i /*int*/, j /*int*/) => { return ((i * j) % 6) < 3; })],\n        /**\n         * 111: mask bits for which ((x+y)mod 2 + xy mod 3) mod 2 == 0\n         * equivalently, such that (x + y + xy mod 3) mod 2 == 0\n         */\n        [DataMaskValues.DATA_MASK_111, new DataMask(DataMaskValues.DATA_MASK_111, (i /*int*/, j /*int*/) => { return ((i + j + ((i * j) % 3)) & 0x01) === 0; })],\n    ]);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Sean Owen\n     */\n    class BitMatrixParser$1 {\n        /**\n         * @param bitMatrix {@link BitMatrix} to parse\n         * @throws FormatException if dimension is not >= 21 and 1 mod 4\n         */\n        constructor(bitMatrix) {\n            const dimension = bitMatrix.getHeight();\n            if (dimension < 21 || (dimension & 0x03) !== 1) {\n                throw new FormatException();\n            }\n            this.bitMatrix = bitMatrix;\n        }\n        /**\n         * <p>Reads format information from one of its two locations within the QR Code.</p>\n         *\n         * @return {@link FormatInformation} encapsulating the QR Code's format info\n         * @throws FormatException if both format information locations cannot be parsed as\n         * the valid encoding of format information\n         */\n        readFormatInformation() {\n            if (this.parsedFormatInfo !== null && this.parsedFormatInfo !== undefined) {\n                return this.parsedFormatInfo;\n            }\n            // Read top-left format info bits\n            let formatInfoBits1 = 0;\n            for (let i = 0; i < 6; i++) {\n                formatInfoBits1 = this.copyBit(i, 8, formatInfoBits1);\n            }\n            // .. and skip a bit in the timing pattern ...\n            formatInfoBits1 = this.copyBit(7, 8, formatInfoBits1);\n            formatInfoBits1 = this.copyBit(8, 8, formatInfoBits1);\n            formatInfoBits1 = this.copyBit(8, 7, formatInfoBits1);\n            // .. and skip a bit in the timing pattern ...\n            for (let j = 5; j >= 0; j--) {\n                formatInfoBits1 = this.copyBit(8, j, formatInfoBits1);\n            }\n            // Read the top-right/bottom-left pattern too\n            const dimension = this.bitMatrix.getHeight();\n            let formatInfoBits2 = 0;\n            const jMin = dimension - 7;\n            for (let j = dimension - 1; j >= jMin; j--) {\n                formatInfoBits2 = this.copyBit(8, j, formatInfoBits2);\n            }\n            for (let i = dimension - 8; i < dimension; i++) {\n                formatInfoBits2 = this.copyBit(i, 8, formatInfoBits2);\n            }\n            this.parsedFormatInfo = FormatInformation.decodeFormatInformation(formatInfoBits1, formatInfoBits2);\n            if (this.parsedFormatInfo !== null) {\n                return this.parsedFormatInfo;\n            }\n            throw new FormatException();\n        }\n        /**\n         * <p>Reads version information from one of its two locations within the QR Code.</p>\n         *\n         * @return {@link Version} encapsulating the QR Code's version\n         * @throws FormatException if both version information locations cannot be parsed as\n         * the valid encoding of version information\n         */\n        readVersion() {\n            if (this.parsedVersion !== null && this.parsedVersion !== undefined) {\n                return this.parsedVersion;\n            }\n            const dimension = this.bitMatrix.getHeight();\n            const provisionalVersion = Math.floor((dimension - 17) / 4);\n            if (provisionalVersion <= 6) {\n                return Version$1.getVersionForNumber(provisionalVersion);\n            }\n            // Read top-right version info: 3 wide by 6 tall\n            let versionBits = 0;\n            const ijMin = dimension - 11;\n            for (let j = 5; j >= 0; j--) {\n                for (let i = dimension - 9; i >= ijMin; i--) {\n                    versionBits = this.copyBit(i, j, versionBits);\n                }\n            }\n            let theParsedVersion = Version$1.decodeVersionInformation(versionBits);\n            if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n                this.parsedVersion = theParsedVersion;\n                return theParsedVersion;\n            }\n            // Hmm, failed. Try bottom left: 6 wide by 3 tall\n            versionBits = 0;\n            for (let i = 5; i >= 0; i--) {\n                for (let j = dimension - 9; j >= ijMin; j--) {\n                    versionBits = this.copyBit(i, j, versionBits);\n                }\n            }\n            theParsedVersion = Version$1.decodeVersionInformation(versionBits);\n            if (theParsedVersion !== null && theParsedVersion.getDimensionForVersion() === dimension) {\n                this.parsedVersion = theParsedVersion;\n                return theParsedVersion;\n            }\n            throw new FormatException();\n        }\n        copyBit(i /*int*/, j /*int*/, versionBits /*int*/) {\n            const bit = this.isMirror ? this.bitMatrix.get(j, i) : this.bitMatrix.get(i, j);\n            return bit ? (versionBits << 1) | 0x1 : versionBits << 1;\n        }\n        /**\n         * <p>Reads the bits in the {@link BitMatrix} representing the finder pattern in the\n         * correct order in order to reconstruct the codewords bytes contained within the\n         * QR Code.</p>\n         *\n         * @return bytes encoded within the QR Code\n         * @throws FormatException if the exact number of bytes expected is not read\n         */\n        readCodewords() {\n            const formatInfo = this.readFormatInformation();\n            const version = this.readVersion();\n            // Get the data mask for the format used in this QR Code. This will exclude\n            // some bits from reading as we wind through the bit matrix.\n            const dataMask = DataMask.values.get(formatInfo.getDataMask());\n            const dimension = this.bitMatrix.getHeight();\n            dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n            const functionPattern = version.buildFunctionPattern();\n            let readingUp = true;\n            const result = new Uint8Array(version.getTotalCodewords());\n            let resultOffset = 0;\n            let currentByte = 0;\n            let bitsRead = 0;\n            // Read columns in pairs, from right to left\n            for (let j = dimension - 1; j > 0; j -= 2) {\n                if (j === 6) {\n                    // Skip whole column with vertical alignment pattern\n                    // saves time and makes the other code proceed more cleanly\n                    j--;\n                }\n                // Read alternatingly from bottom to top then top to bottom\n                for (let count = 0; count < dimension; count++) {\n                    const i = readingUp ? dimension - 1 - count : count;\n                    for (let col = 0; col < 2; col++) {\n                        // Ignore bits covered by the function pattern\n                        if (!functionPattern.get(j - col, i)) {\n                            // Read a bit\n                            bitsRead++;\n                            currentByte <<= 1;\n                            if (this.bitMatrix.get(j - col, i)) {\n                                currentByte |= 1;\n                            }\n                            // If we've made a whole byte, save it off\n                            if (bitsRead === 8) {\n                                result[resultOffset++] = /*(byte) */ currentByte;\n                                bitsRead = 0;\n                                currentByte = 0;\n                            }\n                        }\n                    }\n                }\n                readingUp = !readingUp; // readingUp ^= true; // readingUp = !readingUp; // switch directions\n            }\n            if (resultOffset !== version.getTotalCodewords()) {\n                throw new FormatException();\n            }\n            return result;\n        }\n        /**\n         * Revert the mask removal done while reading the code words. The bit matrix should revert to its original state.\n         */\n        remask() {\n            if (this.parsedFormatInfo === null) {\n                return; // We have no format information, and have no data mask\n            }\n            const dataMask = DataMask.values[this.parsedFormatInfo.getDataMask()];\n            const dimension = this.bitMatrix.getHeight();\n            dataMask.unmaskBitMatrix(this.bitMatrix, dimension);\n        }\n        /**\n         * Prepare the parser for a mirrored operation.\n         * This flag has effect only on the {@link #readFormatInformation()} and the\n         * {@link #readVersion()}. Before proceeding with {@link #readCodewords()} the\n         * {@link #mirror()} method should be called.\n         *\n         * @param mirror Whether to read version and format information mirrored.\n         */\n        setMirror(isMirror) {\n            this.parsedVersion = null;\n            this.parsedFormatInfo = null;\n            this.isMirror = isMirror;\n        }\n        /** Mirror the bit matrix in order to attempt a second reading. */\n        mirror() {\n            const bitMatrix = this.bitMatrix;\n            for (let x = 0, width = bitMatrix.getWidth(); x < width; x++) {\n                for (let y = x + 1, height = bitMatrix.getHeight(); y < height; y++) {\n                    if (bitMatrix.get(x, y) !== bitMatrix.get(y, x)) {\n                        bitMatrix.flip(y, x);\n                        bitMatrix.flip(x, y);\n                    }\n                }\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a block of data within a QR Code. QR Codes may split their data into\n     * multiple blocks, each of which is a unit of data and error-correction codewords. Each\n     * is represented by an instance of this class.</p>\n     *\n     * @author Sean Owen\n     */\n    class DataBlock$1 {\n        constructor(numDataCodewords /*int*/, codewords) {\n            this.numDataCodewords = numDataCodewords;\n            this.codewords = codewords;\n        }\n        /**\n         * <p>When QR Codes use multiple data blocks, they are actually interleaved.\n         * That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This\n         * method will separate the data into original blocks.</p>\n         *\n         * @param rawCodewords bytes as read directly from the QR Code\n         * @param version version of the QR Code\n         * @param ecLevel error-correction level of the QR Code\n         * @return DataBlocks containing original bytes, \"de-interleaved\" from representation in the\n         *         QR Code\n         */\n        static getDataBlocks(rawCodewords, version, ecLevel) {\n            if (rawCodewords.length !== version.getTotalCodewords()) {\n                throw new IllegalArgumentException();\n            }\n            // Figure out the number and size of data blocks used by this version and\n            // error correction level\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            // First count the total number of data blocks\n            let totalBlocks = 0;\n            const ecBlockArray = ecBlocks.getECBlocks();\n            for (const ecBlock of ecBlockArray) {\n                totalBlocks += ecBlock.getCount();\n            }\n            // Now establish DataBlocks of the appropriate size and number of data codewords\n            const result = new Array(totalBlocks);\n            let numResultBlocks = 0;\n            for (const ecBlock of ecBlockArray) {\n                for (let i = 0; i < ecBlock.getCount(); i++) {\n                    const numDataCodewords = ecBlock.getDataCodewords();\n                    const numBlockCodewords = ecBlocks.getECCodewordsPerBlock() + numDataCodewords;\n                    result[numResultBlocks++] = new DataBlock$1(numDataCodewords, new Uint8Array(numBlockCodewords));\n                }\n            }\n            // All blocks have the same amount of data, except that the last n\n            // (where n may be 0) have 1 more byte. Figure out where these start.\n            const shorterBlocksTotalCodewords = result[0].codewords.length;\n            let longerBlocksStartAt = result.length - 1;\n            // TYPESCRIPTPORT: check length is correct here\n            while (longerBlocksStartAt >= 0) {\n                const numCodewords = result[longerBlocksStartAt].codewords.length;\n                if (numCodewords === shorterBlocksTotalCodewords) {\n                    break;\n                }\n                longerBlocksStartAt--;\n            }\n            longerBlocksStartAt++;\n            const shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.getECCodewordsPerBlock();\n            // The last elements of result may be 1 element longer\n            // first fill out as many elements as all of them have\n            let rawCodewordsOffset = 0;\n            for (let i = 0; i < shorterBlocksNumDataCodewords; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    result[j].codewords[i] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            // Fill out the last data block in the longer ones\n            for (let j = longerBlocksStartAt; j < numResultBlocks; j++) {\n                result[j].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];\n            }\n            // Now add in error correction blocks\n            const max = result[0].codewords.length;\n            for (let i = shorterBlocksNumDataCodewords; i < max; i++) {\n                for (let j = 0; j < numResultBlocks; j++) {\n                    const iOffset = j < longerBlocksStartAt ? i : i + 1;\n                    result[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];\n                }\n            }\n            return result;\n        }\n        getNumDataCodewords() {\n            return this.numDataCodewords;\n        }\n        getCodewords() {\n            return this.codewords;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    var ModeValues;\n    (function (ModeValues) {\n        ModeValues[ModeValues[\"TERMINATOR\"] = 0] = \"TERMINATOR\";\n        ModeValues[ModeValues[\"NUMERIC\"] = 1] = \"NUMERIC\";\n        ModeValues[ModeValues[\"ALPHANUMERIC\"] = 2] = \"ALPHANUMERIC\";\n        ModeValues[ModeValues[\"STRUCTURED_APPEND\"] = 3] = \"STRUCTURED_APPEND\";\n        ModeValues[ModeValues[\"BYTE\"] = 4] = \"BYTE\";\n        ModeValues[ModeValues[\"ECI\"] = 5] = \"ECI\";\n        ModeValues[ModeValues[\"KANJI\"] = 6] = \"KANJI\";\n        ModeValues[ModeValues[\"FNC1_FIRST_POSITION\"] = 7] = \"FNC1_FIRST_POSITION\";\n        ModeValues[ModeValues[\"FNC1_SECOND_POSITION\"] = 8] = \"FNC1_SECOND_POSITION\";\n        /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n        ModeValues[ModeValues[\"HANZI\"] = 9] = \"HANZI\";\n    })(ModeValues || (ModeValues = {}));\n    /**\n     * <p>See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which\n     * data can be encoded to bits in the QR code standard.</p>\n     *\n     * @author Sean Owen\n     */\n    class Mode$1 {\n        constructor(value, stringValue, characterCountBitsForVersions, bits /*int*/) {\n            this.value = value;\n            this.stringValue = stringValue;\n            this.characterCountBitsForVersions = characterCountBitsForVersions;\n            this.bits = bits;\n            Mode$1.FOR_BITS.set(bits, this);\n            Mode$1.FOR_VALUE.set(value, this);\n        }\n        /**\n         * @param bits four bits encoding a QR Code data mode\n         * @return Mode encoded by these bits\n         * @throws IllegalArgumentException if bits do not correspond to a known mode\n         */\n        static forBits(bits /*int*/) {\n            const mode = Mode$1.FOR_BITS.get(bits);\n            if (undefined === mode) {\n                throw new IllegalArgumentException();\n            }\n            return mode;\n        }\n        /**\n         * @param version version in question\n         * @return number of bits used, in this QR Code symbol {@link Version}, to encode the\n         *         count of characters that will follow encoded in this Mode\n         */\n        getCharacterCountBits(version) {\n            const versionNumber = version.getVersionNumber();\n            let offset;\n            if (versionNumber <= 9) {\n                offset = 0;\n            }\n            else if (versionNumber <= 26) {\n                offset = 1;\n            }\n            else {\n                offset = 2;\n            }\n            return this.characterCountBitsForVersions[offset];\n        }\n        getValue() {\n            return this.value;\n        }\n        getBits() {\n            return this.bits;\n        }\n        equals(o) {\n            if (!(o instanceof Mode$1)) {\n                return false;\n            }\n            const other = o;\n            return this.value === other.value;\n        }\n        toString() {\n            return this.stringValue;\n        }\n    }\n    Mode$1.FOR_BITS = new Map();\n    Mode$1.FOR_VALUE = new Map();\n    Mode$1.TERMINATOR = new Mode$1(ModeValues.TERMINATOR, 'TERMINATOR', Int32Array.from([0, 0, 0]), 0x00); // Not really a mode...\n    Mode$1.NUMERIC = new Mode$1(ModeValues.NUMERIC, 'NUMERIC', Int32Array.from([10, 12, 14]), 0x01);\n    Mode$1.ALPHANUMERIC = new Mode$1(ModeValues.ALPHANUMERIC, 'ALPHANUMERIC', Int32Array.from([9, 11, 13]), 0x02);\n    Mode$1.STRUCTURED_APPEND = new Mode$1(ModeValues.STRUCTURED_APPEND, 'STRUCTURED_APPEND', Int32Array.from([0, 0, 0]), 0x03); // Not supported\n    Mode$1.BYTE = new Mode$1(ModeValues.BYTE, 'BYTE', Int32Array.from([8, 16, 16]), 0x04);\n    Mode$1.ECI = new Mode$1(ModeValues.ECI, 'ECI', Int32Array.from([0, 0, 0]), 0x07); // character counts don't apply\n    Mode$1.KANJI = new Mode$1(ModeValues.KANJI, 'KANJI', Int32Array.from([8, 10, 12]), 0x08);\n    Mode$1.FNC1_FIRST_POSITION = new Mode$1(ModeValues.FNC1_FIRST_POSITION, 'FNC1_FIRST_POSITION', Int32Array.from([0, 0, 0]), 0x05);\n    Mode$1.FNC1_SECOND_POSITION = new Mode$1(ModeValues.FNC1_SECOND_POSITION, 'FNC1_SECOND_POSITION', Int32Array.from([0, 0, 0]), 0x09);\n    /** See GBT 18284-2000; \"Hanzi\" is a transliteration of this mode name. */\n    Mode$1.HANZI = new Mode$1(ModeValues.HANZI, 'HANZI', Int32Array.from([8, 10, 12]), 0x0D);\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.io.UnsupportedEncodingException;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collection;*/\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * <p>QR Codes can encode text as bits in one of several modes, and can use multiple modes\n     * in one QR Code. This class decodes the bits back into text.</p>\n     *\n     * <p>See ISO 18004:2006, 6.4.3 - 6.4.7</p>\n     *\n     * @author Sean Owen\n     */\n    class DecodedBitStreamParser$1 {\n        static decode(bytes, version, ecLevel, hints) {\n            const bits = new BitSource(bytes);\n            let result = new StringBuilder();\n            const byteSegments = new Array(); // 1\n            // TYPESCRIPTPORT: I do not use constructor with size 1 as in original Java means capacity and the array length is checked below\n            let symbolSequence = -1;\n            let parityData = -1;\n            try {\n                let currentCharacterSetECI = null;\n                let fc1InEffect = false;\n                let mode;\n                do {\n                    // While still another segment to read...\n                    if (bits.available() < 4) {\n                        // OK, assume we're done. Really, a TERMINATOR mode should have been recorded here\n                        mode = Mode$1.TERMINATOR;\n                    }\n                    else {\n                        const modeBits = bits.readBits(4);\n                        mode = Mode$1.forBits(modeBits); // mode is encoded by 4 bits\n                    }\n                    switch (mode) {\n                        case Mode$1.TERMINATOR:\n                            break;\n                        case Mode$1.FNC1_FIRST_POSITION:\n                        case Mode$1.FNC1_SECOND_POSITION:\n                            // We do little with FNC1 except alter the parsed result a bit according to the spec\n                            fc1InEffect = true;\n                            break;\n                        case Mode$1.STRUCTURED_APPEND:\n                            if (bits.available() < 16) {\n                                throw new FormatException();\n                            }\n                            // sequence number and parity is added later to the result metadata\n                            // Read next 8 bits (symbol sequence #) and 8 bits (data: parity), then continue\n                            symbolSequence = bits.readBits(8);\n                            parityData = bits.readBits(8);\n                            break;\n                        case Mode$1.ECI:\n                            // Count doesn't apply to ECI\n                            const value = DecodedBitStreamParser$1.parseECIValue(bits);\n                            currentCharacterSetECI = CharacterSetECI.getCharacterSetECIByValue(value);\n                            if (currentCharacterSetECI === null) {\n                                throw new FormatException();\n                            }\n                            break;\n                        case Mode$1.HANZI:\n                            // First handle Hanzi mode which does not start with character count\n                            // Chinese mode contains a sub set indicator right after mode indicator\n                            const subset = bits.readBits(4);\n                            const countHanzi = bits.readBits(mode.getCharacterCountBits(version));\n                            if (subset === DecodedBitStreamParser$1.GB2312_SUBSET) {\n                                DecodedBitStreamParser$1.decodeHanziSegment(bits, result, countHanzi);\n                            }\n                            break;\n                        default:\n                            // \"Normal\" QR code modes:\n                            // How many characters will follow, encoded in this mode?\n                            const count = bits.readBits(mode.getCharacterCountBits(version));\n                            switch (mode) {\n                                case Mode$1.NUMERIC:\n                                    DecodedBitStreamParser$1.decodeNumericSegment(bits, result, count);\n                                    break;\n                                case Mode$1.ALPHANUMERIC:\n                                    DecodedBitStreamParser$1.decodeAlphanumericSegment(bits, result, count, fc1InEffect);\n                                    break;\n                                case Mode$1.BYTE:\n                                    DecodedBitStreamParser$1.decodeByteSegment(bits, result, count, currentCharacterSetECI, byteSegments, hints);\n                                    break;\n                                case Mode$1.KANJI:\n                                    DecodedBitStreamParser$1.decodeKanjiSegment(bits, result, count);\n                                    break;\n                                default:\n                                    throw new FormatException();\n                            }\n                            break;\n                    }\n                } while (mode !== Mode$1.TERMINATOR);\n            }\n            catch (iae /*: IllegalArgumentException*/) {\n                // from readBits() calls\n                throw new FormatException();\n            }\n            return new DecoderResult(bytes, result.toString(), byteSegments.length === 0 ? null : byteSegments, ecLevel === null ? null : ecLevel.toString(), symbolSequence, parityData);\n        }\n        /**\n         * See specification GBT 18284-2000\n         */\n        static decodeHanziSegment(bits, result, count /*int*/) {\n            // Don't crash trying to read more bits than we have available.\n            if (count * 13 > bits.available()) {\n                throw new FormatException();\n            }\n            // Each character will require 2 bytes. Read the characters as 2-byte pairs\n            // and decode as GB2312 afterwards\n            const buffer = new Uint8Array(2 * count);\n            let offset = 0;\n            while (count > 0) {\n                // Each 13 bits encodes a 2-byte character\n                const twoBytes = bits.readBits(13);\n                let assembledTwoBytes = (((twoBytes / 0x060) << 8) & 0xFFFFFFFF) | (twoBytes % 0x060);\n                if (assembledTwoBytes < 0x003BF) {\n                    // In the 0xA1A1 to 0xAAFE range\n                    assembledTwoBytes += 0x0A1A1;\n                }\n                else {\n                    // In the 0xB0A1 to 0xFAFE range\n                    assembledTwoBytes += 0x0A6A1;\n                }\n                buffer[offset] = /*(byte) */ ((assembledTwoBytes >> 8) & 0xFF);\n                buffer[offset + 1] = /*(byte) */ (assembledTwoBytes & 0xFF);\n                offset += 2;\n                count--;\n            }\n            try {\n                result.append(StringEncoding.decode(buffer, StringUtils.GB2312));\n                // TYPESCRIPTPORT: TODO: implement GB2312 decode. StringView from MDN could be a starting point\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n        }\n        static decodeKanjiSegment(bits, result, count /*int*/) {\n            // Don't crash trying to read more bits than we have available.\n            if (count * 13 > bits.available()) {\n                throw new FormatException();\n            }\n            // Each character will require 2 bytes. Read the characters as 2-byte pairs\n            // and decode as Shift_JIS afterwards\n            const buffer = new Uint8Array(2 * count);\n            let offset = 0;\n            while (count > 0) {\n                // Each 13 bits encodes a 2-byte character\n                const twoBytes = bits.readBits(13);\n                let assembledTwoBytes = (((twoBytes / 0x0C0) << 8) & 0xFFFFFFFF) | (twoBytes % 0x0C0);\n                if (assembledTwoBytes < 0x01F00) {\n                    // In the 0x8140 to 0x9FFC range\n                    assembledTwoBytes += 0x08140;\n                }\n                else {\n                    // In the 0xE040 to 0xEBBF range\n                    assembledTwoBytes += 0x0C140;\n                }\n                buffer[offset] = /*(byte) */ (assembledTwoBytes >> 8);\n                buffer[offset + 1] = /*(byte) */ assembledTwoBytes;\n                offset += 2;\n                count--;\n            }\n            // Shift_JIS may not be supported in some environments:\n            try {\n                result.append(StringEncoding.decode(buffer, StringUtils.SHIFT_JIS));\n                // TYPESCRIPTPORT: TODO: implement SHIFT_JIS decode. StringView from MDN could be a starting point\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n        }\n        static decodeByteSegment(bits, result, count /*int*/, currentCharacterSetECI, byteSegments, hints) {\n            // Don't crash trying to read more bits than we have available.\n            if (8 * count > bits.available()) {\n                throw new FormatException();\n            }\n            const readBytes = new Uint8Array(count);\n            for (let i = 0; i < count; i++) {\n                readBytes[i] = /*(byte) */ bits.readBits(8);\n            }\n            let encoding;\n            if (currentCharacterSetECI === null) {\n                // The spec isn't clear on this mode; see\n                // section 6.4.5: t does not say which encoding to assuming\n                // upon decoding. I have seen ISO-8859-1 used as well as\n                // Shift_JIS -- without anything like an ECI designator to\n                // give a hint.\n                encoding = StringUtils.guessEncoding(readBytes, hints);\n            }\n            else {\n                encoding = currentCharacterSetECI.getName();\n            }\n            try {\n                result.append(StringEncoding.decode(readBytes, encoding));\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                throw new FormatException(ignored);\n            }\n            byteSegments.push(readBytes);\n        }\n        static toAlphaNumericChar(value /*int*/) {\n            if (value >= DecodedBitStreamParser$1.ALPHANUMERIC_CHARS.length) {\n                throw new FormatException();\n            }\n            return DecodedBitStreamParser$1.ALPHANUMERIC_CHARS[value];\n        }\n        static decodeAlphanumericSegment(bits, result, count /*int*/, fc1InEffect) {\n            // Read two characters at a time\n            const start = result.length();\n            while (count > 1) {\n                if (bits.available() < 11) {\n                    throw new FormatException();\n                }\n                const nextTwoCharsBits = bits.readBits(11);\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(nextTwoCharsBits / 45)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(nextTwoCharsBits % 45));\n                count -= 2;\n            }\n            if (count === 1) {\n                // special case: one character left\n                if (bits.available() < 6) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(bits.readBits(6)));\n            }\n            // See section 6.4.8.1, 6.4.8.2\n            if (fc1InEffect) {\n                // We need to massage the result a bit if in an FNC1 mode:\n                for (let i = start; i < result.length(); i++) {\n                    if (result.charAt(i) === '%') {\n                        if (i < result.length() - 1 && result.charAt(i + 1) === '%') {\n                            // %% is rendered as %\n                            result.deleteCharAt(i + 1);\n                        }\n                        else {\n                            // In alpha mode, % should be converted to FNC1 separator 0x1D\n                            result.setCharAt(i, String.fromCharCode(0x1D));\n                        }\n                    }\n                }\n            }\n        }\n        static decodeNumericSegment(bits, result, count /*int*/) {\n            // Read three digits at a time\n            while (count >= 3) {\n                // Each 10 bits encodes three digits\n                if (bits.available() < 10) {\n                    throw new FormatException();\n                }\n                const threeDigitsBits = bits.readBits(10);\n                if (threeDigitsBits >= 1000) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits / 100)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(threeDigitsBits / 10) % 10));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(threeDigitsBits % 10));\n                count -= 3;\n            }\n            if (count === 2) {\n                // Two digits left over to read, encoded in 7 bits\n                if (bits.available() < 7) {\n                    throw new FormatException();\n                }\n                const twoDigitsBits = bits.readBits(7);\n                if (twoDigitsBits >= 100) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(Math.floor(twoDigitsBits / 10)));\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(twoDigitsBits % 10));\n            }\n            else if (count === 1) {\n                // One digit left over to read\n                if (bits.available() < 4) {\n                    throw new FormatException();\n                }\n                const digitBits = bits.readBits(4);\n                if (digitBits >= 10) {\n                    throw new FormatException();\n                }\n                result.append(DecodedBitStreamParser$1.toAlphaNumericChar(digitBits));\n            }\n        }\n        static parseECIValue(bits) {\n            const firstByte = bits.readBits(8);\n            if ((firstByte & 0x80) === 0) {\n                // just one byte\n                return firstByte & 0x7F;\n            }\n            if ((firstByte & 0xC0) === 0x80) {\n                // two bytes\n                const secondByte = bits.readBits(8);\n                return (((firstByte & 0x3F) << 8) & 0xFFFFFFFF) | secondByte;\n            }\n            if ((firstByte & 0xE0) === 0xC0) {\n                // three bytes\n                const secondThirdBytes = bits.readBits(16);\n                return (((firstByte & 0x1F) << 16) & 0xFFFFFFFF) | secondThirdBytes;\n            }\n            throw new FormatException();\n        }\n    }\n    /**\n     * See ISO 18004:2006, 6.4.4 Table 5\n     */\n    DecodedBitStreamParser$1.ALPHANUMERIC_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:';\n    DecodedBitStreamParser$1.GB2312_SUBSET = 1;\n    // function Uint8ArrayToString(a: Uint8Array): string {\n    //     const CHUNK_SZ = 0x8000;\n    //     const c = new StringBuilder();\n    //     for (let i = 0, length = a.length; i < length; i += CHUNK_SZ) {\n    //         c.append(String.fromCharCode.apply(null, a.subarray(i, i + CHUNK_SZ)));\n    //     }\n    //     return c.toString();\n    // }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * Meta-data container for QR Code decoding. Instances of this class may be used to convey information back to the\n     * decoding caller. Callers are expected to process this.\n     *\n     * @see com.google.zxing.common.DecoderResult#getOther()\n     */\n    class QRCodeDecoderMetaData {\n        constructor(mirrored) {\n            this.mirrored = mirrored;\n        }\n        /**\n         * @return true if the QR Code was mirrored.\n         */\n        isMirrored() {\n            return this.mirrored;\n        }\n        /**\n         * Apply the result points' order correction due to mirroring.\n         *\n         * @param points Array of points to apply mirror correction to.\n         */\n        applyMirroredCorrection(points) {\n            if (!this.mirrored || points === null || points.length < 3) {\n                return;\n            }\n            const bottomLeft = points[0];\n            points[0] = points[2];\n            points[2] = bottomLeft;\n            // No need to 'fix' top-left and alignment pattern.\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * <p>The main class which implements QR Code decoding -- as opposed to locating and extracting\n     * the QR Code from an image.</p>\n     *\n     * @author Sean Owen\n     */\n    class Decoder$2 {\n        constructor() {\n            this.rsDecoder = new ReedSolomonDecoder(GenericGF.QR_CODE_FIELD_256);\n        }\n        // public decode(image: boolean[][]): DecoderResult /*throws ChecksumException, FormatException*/ {\n        //   return decode(image, null)\n        // }\n        /**\n         * <p>Convenience method that can decode a QR Code represented as a 2D array of booleans.\n         * \"true\" is taken to mean a black module.</p>\n         *\n         * @param image booleans representing white/black QR Code modules\n         * @param hints decoding hints that should be used to influence decoding\n         * @return text and bytes encoded within the QR Code\n         * @throws FormatException if the QR Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decodeBooleanArray(image, hints) {\n            return this.decodeBitMatrix(BitMatrix.parseFromBooleanArray(image), hints);\n        }\n        // public decodeBitMatrix(bits: BitMatrix): DecoderResult /*throws ChecksumException, FormatException*/ {\n        //   return decode(bits, null)\n        // }\n        /**\n         * <p>Decodes a QR Code represented as a {@link BitMatrix}. A 1 or \"true\" is taken to mean a black module.</p>\n         *\n         * @param bits booleans representing white/black QR Code modules\n         * @param hints decoding hints that should be used to influence decoding\n         * @return text and bytes encoded within the QR Code\n         * @throws FormatException if the QR Code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        decodeBitMatrix(bits, hints) {\n            // Construct a parser and read version, error-correction level\n            const parser = new BitMatrixParser$1(bits);\n            let ex = null;\n            try {\n                return this.decodeBitMatrixParser(parser, hints);\n            }\n            catch (e /*: FormatException, ChecksumException*/) {\n                ex = e;\n            }\n            try {\n                // Revert the bit matrix\n                parser.remask();\n                // Will be attempting a mirrored reading of the version and format info.\n                parser.setMirror(true);\n                // Preemptively read the version.\n                parser.readVersion();\n                // Preemptively read the format information.\n                parser.readFormatInformation();\n                /*\n                 * Since we're here, this means we have successfully detected some kind\n                 * of version and format information when mirrored. This is a good sign,\n                 * that the QR code may be mirrored, and we should try once more with a\n                 * mirrored content.\n                 */\n                // Prepare for a mirrored reading.\n                parser.mirror();\n                const result = this.decodeBitMatrixParser(parser, hints);\n                // Success! Notify the caller that the code was mirrored.\n                result.setOther(new QRCodeDecoderMetaData(true));\n                return result;\n            }\n            catch (e /*FormatException | ChecksumException*/) {\n                // Throw the exception from the original reading\n                if (ex !== null) {\n                    throw ex;\n                }\n                throw e;\n            }\n        }\n        decodeBitMatrixParser(parser, hints) {\n            const version = parser.readVersion();\n            const ecLevel = parser.readFormatInformation().getErrorCorrectionLevel();\n            // Read codewords\n            const codewords = parser.readCodewords();\n            // Separate into data blocks\n            const dataBlocks = DataBlock$1.getDataBlocks(codewords, version, ecLevel);\n            // Count total number of data bytes\n            let totalBytes = 0;\n            for (const dataBlock of dataBlocks) {\n                totalBytes += dataBlock.getNumDataCodewords();\n            }\n            const resultBytes = new Uint8Array(totalBytes);\n            let resultOffset = 0;\n            // Error-correct and copy data blocks together into a stream of bytes\n            for (const dataBlock of dataBlocks) {\n                const codewordBytes = dataBlock.getCodewords();\n                const numDataCodewords = dataBlock.getNumDataCodewords();\n                this.correctErrors(codewordBytes, numDataCodewords);\n                for (let i = 0; i < numDataCodewords; i++) {\n                    resultBytes[resultOffset++] = codewordBytes[i];\n                }\n            }\n            // Decode the contents of that stream of bytes\n            return DecodedBitStreamParser$1.decode(resultBytes, version, ecLevel, hints);\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place using Reed-Solomon error correction.</p>\n         *\n         * @param codewordBytes data and error correction codewords\n         * @param numDataCodewords number of codewords that are data bytes\n         * @throws ChecksumException if error correction fails\n         */\n        correctErrors(codewordBytes, numDataCodewords /*int*/) {\n            // const numCodewords = codewordBytes.length;\n            // First read into an array of ints\n            const codewordsInts = new Int32Array(codewordBytes);\n            // TYPESCRIPTPORT: not realy necessary to transform to ints? could redesign everything to work with unsigned bytes?\n            // const codewordsInts = new Int32Array(numCodewords)\n            // for (let i = 0; i < numCodewords; i++) {\n            //   codewordsInts[i] = codewordBytes[i] & 0xFF\n            // }\n            try {\n                this.rsDecoder.decode(codewordsInts, codewordBytes.length - numDataCodewords);\n            }\n            catch (ignored /*: ReedSolomonException*/) {\n                throw new ChecksumException();\n            }\n            // Copy back into array of bytes -- only need to worry about the bytes that were data\n            // We don't care about errors in the error-correction codewords\n            for (let i = 0; i < numDataCodewords; i++) {\n                codewordBytes[i] = /*(byte) */ codewordsInts[i];\n            }\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates an alignment pattern, which are the smaller square patterns found in\n     * all but the simplest QR Codes.</p>\n     *\n     * @author Sean Owen\n     */\n    class AlignmentPattern extends ResultPoint {\n        constructor(posX /*float*/, posY /*float*/, estimatedModuleSize /*float*/) {\n            super(posX, posY);\n            this.estimatedModuleSize = estimatedModuleSize;\n        }\n        /**\n         * <p>Determines if this alignment pattern \"about equals\" an alignment pattern at the stated\n         * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\n         */\n        aboutEquals(moduleSize /*float*/, i /*float*/, j /*float*/) {\n            if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n                const moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n            }\n            return false;\n        }\n        /**\n         * Combines this object's current estimate of a finder pattern position and module size\n         * with a new estimate. It returns a new {@code FinderPattern} containing an average of the two.\n         */\n        combineEstimate(i /*float*/, j /*float*/, newModuleSize /*float*/) {\n            const combinedX = (this.getX() + j) / 2.0;\n            const combinedY = (this.getY() + i) / 2.0;\n            const combinedModuleSize = (this.estimatedModuleSize + newModuleSize) / 2.0;\n            return new AlignmentPattern(combinedX, combinedY, combinedModuleSize);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.ArrayList;*/\n    /*import java.util.List;*/\n    /**\n     * <p>This class attempts to find alignment patterns in a QR Code. Alignment patterns look like finder\n     * patterns but are smaller and appear at regular intervals throughout the image.</p>\n     *\n     * <p>At the moment this only looks for the bottom-right alignment pattern.</p>\n     *\n     * <p>This is mostly a simplified copy of {@link FinderPatternFinder}. It is copied,\n     * pasted and stripped down here for maximum performance but does unfortunately duplicate\n     * some code.</p>\n     *\n     * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.</p>\n     *\n     * @author Sean Owen\n     */\n    class AlignmentPatternFinder {\n        /**\n         * <p>Creates a finder that will look in a portion of the whole image.</p>\n         *\n         * @param image image to search\n         * @param startX left column from which to start searching\n         * @param startY top row from which to start searching\n         * @param width width of region to search\n         * @param height height of region to search\n         * @param moduleSize estimated module size so far\n         */\n        constructor(image, startX /*int*/, startY /*int*/, width /*int*/, height /*int*/, moduleSize /*float*/, resultPointCallback) {\n            this.image = image;\n            this.startX = startX;\n            this.startY = startY;\n            this.width = width;\n            this.height = height;\n            this.moduleSize = moduleSize;\n            this.resultPointCallback = resultPointCallback;\n            this.possibleCenters = []; // new Array<any>(5))\n            // TYPESCRIPTPORT: array initialization without size as the length is checked below\n            this.crossCheckStateCount = new Int32Array(3);\n        }\n        /**\n         * <p>This method attempts to find the bottom-right alignment pattern in the image. It is a bit messy since\n         * it's pretty performance-critical and so is written to be fast foremost.</p>\n         *\n         * @return {@link AlignmentPattern} if found\n         * @throws NotFoundException if not found\n         */\n        find() {\n            const startX = this.startX;\n            const height = this.height;\n            const width = this.width;\n            const maxJ = startX + width;\n            const middleI = this.startY + (height / 2);\n            // We are looking for black/white/black modules in 1:1:1 ratio\n            // this tracks the number of black/white/black modules seen so far\n            const stateCount = new Int32Array(3);\n            const image = this.image;\n            for (let iGen = 0; iGen < height; iGen++) {\n                // Search from middle outwards\n                const i = middleI + ((iGen & 0x01) === 0 ? Math.floor((iGen + 1) / 2) : -Math.floor((iGen + 1) / 2));\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n                let j = startX;\n                // Burn off leading white pixels before anything else; if we start in the middle of\n                // a white run, it doesn't make sense to count its length, since we don't know if the\n                // white run continued to the left of the start point\n                while (j < maxJ && !image.get(j, i)) {\n                    j++;\n                }\n                let currentState = 0;\n                while (j < maxJ) {\n                    if (image.get(j, i)) {\n                        // Black pixel\n                        if (currentState === 1) { // Counting black pixels\n                            stateCount[1]++;\n                        }\n                        else { // Counting white pixels\n                            if (currentState === 2) { // A winner?\n                                if (this.foundPatternCross(stateCount)) { // Yes\n                                    const confirmed = this.handlePossibleCenter(stateCount, i, j);\n                                    if (confirmed !== null) {\n                                        return confirmed;\n                                    }\n                                }\n                                stateCount[0] = stateCount[2];\n                                stateCount[1] = 1;\n                                stateCount[2] = 0;\n                                currentState = 1;\n                            }\n                            else {\n                                stateCount[++currentState]++;\n                            }\n                        }\n                    }\n                    else { // White pixel\n                        if (currentState === 1) { // Counting black pixels\n                            currentState++;\n                        }\n                        stateCount[currentState]++;\n                    }\n                    j++;\n                }\n                if (this.foundPatternCross(stateCount)) {\n                    const confirmed = this.handlePossibleCenter(stateCount, i, maxJ);\n                    if (confirmed !== null) {\n                        return confirmed;\n                    }\n                }\n            }\n            // Hmm, nothing we saw was observed and confirmed twice. If we had\n            // any guess at all, return it.\n            if (this.possibleCenters.length !== 0) {\n                return this.possibleCenters[0];\n            }\n            throw new NotFoundException();\n        }\n        /**\n         * Given a count of black/white/black pixels just seen and an end position,\n         * figures the location of the center of this black/white/black run.\n         */\n        static centerFromEnd(stateCount, end /*int*/) {\n            return (end - stateCount[2]) - stateCount[1] / 2.0;\n        }\n        /**\n         * @param stateCount count of black/white/black pixels just read\n         * @return true iff the proportions of the counts is close enough to the 1/1/1 ratios\n         *         used by alignment patterns to be considered a match\n         */\n        foundPatternCross(stateCount) {\n            const moduleSize = this.moduleSize;\n            const maxVariance = moduleSize / 2.0;\n            for (let i = 0; i < 3; i++) {\n                if (Math.abs(moduleSize - stateCount[i]) >= maxVariance) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n         * <p>After a horizontal scan finds a potential alignment pattern, this method\n         * \"cross-checks\" by scanning down vertically through the center of the possible\n         * alignment pattern to see if the same proportion is detected.</p>\n         *\n         * @param startI row where an alignment pattern was detected\n         * @param centerJ center of the section that appears to cross an alignment pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         * observed in any reading state, based on the results of the horizontal scan\n         * @return vertical center of alignment pattern, or {@link Float#NaN} if not found\n         */\n        crossCheckVertical(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxI = image.getHeight();\n            const stateCount = this.crossCheckStateCount;\n            stateCount[0] = 0;\n            stateCount[1] = 0;\n            stateCount[2] = 0;\n            // Start counting up from center\n            let i = startI;\n            while (i >= 0 && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i--;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (i < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i >= 0 && !image.get(centerJ, i) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            // Now also count down from center\n            i = startI + 1;\n            while (i < maxI && image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i++;\n            }\n            if (i === maxI || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i < maxI && !image.get(centerJ, i) && stateCount[2] <= maxCount) {\n                stateCount[2]++;\n                i++;\n            }\n            if (stateCount[2] > maxCount) {\n                return NaN;\n            }\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                return NaN;\n            }\n            return this.foundPatternCross(stateCount) ? AlignmentPatternFinder.centerFromEnd(stateCount, i) : NaN;\n        }\n        /**\n         * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\n         * cross check with a vertical scan, and if successful, will see if this pattern had been\n         * found on a previous horizontal scan. If so, we consider it confirmed and conclude we have\n         * found the alignment pattern.</p>\n         *\n         * @param stateCount reading state module counts from horizontal scan\n         * @param i row where alignment pattern may be found\n         * @param j end of possible alignment pattern in row\n         * @return {@link AlignmentPattern} if we have found the same pattern twice, or null if not\n         */\n        handlePossibleCenter(stateCount, i /*int*/, j /*int*/) {\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];\n            const centerJ = AlignmentPatternFinder.centerFromEnd(stateCount, j);\n            const centerI = this.crossCheckVertical(i, /*(int) */ centerJ, 2 * stateCount[1], stateCountTotal);\n            if (!isNaN(centerI)) {\n                const estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3.0;\n                for (const center of this.possibleCenters) {\n                    // Look for about the same center and module size:\n                    if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                        return center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n                    }\n                }\n                // Hadn't found this before; save it\n                const point = new AlignmentPattern(centerJ, centerI, estimatedModuleSize);\n                this.possibleCenters.push(point);\n                if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n                    this.resultPointCallback.foundPossibleResultPoint(point);\n                }\n            }\n            return null;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates a finder pattern, which are the three square patterns found in\n     * the corners of QR Codes. It also encapsulates a count of similar finder patterns,\n     * as a convenience to the finder's bookkeeping.</p>\n     *\n     * @author Sean Owen\n     */\n    class FinderPattern$1 extends ResultPoint {\n        // FinderPattern(posX: number/*float*/, posY: number/*float*/, estimatedModuleSize: number/*float*/) {\n        //   this(posX, posY, estimatedModuleSize, 1)\n        // }\n        constructor(posX /*float*/, posY /*float*/, estimatedModuleSize /*float*/, count /*int*/) {\n            super(posX, posY);\n            this.estimatedModuleSize = estimatedModuleSize;\n            this.count = count;\n            if (undefined === count) {\n                this.count = 1;\n            }\n        }\n        getEstimatedModuleSize() {\n            return this.estimatedModuleSize;\n        }\n        getCount() {\n            return this.count;\n        }\n        /*\n        void incrementCount() {\n          this.count++\n        }\n         */\n        /**\n         * <p>Determines if this finder pattern \"about equals\" a finder pattern at the stated\n         * position and size -- meaning, it is at nearly the same center with nearly the same size.</p>\n         */\n        aboutEquals(moduleSize /*float*/, i /*float*/, j /*float*/) {\n            if (Math.abs(i - this.getY()) <= moduleSize && Math.abs(j - this.getX()) <= moduleSize) {\n                const moduleSizeDiff = Math.abs(moduleSize - this.estimatedModuleSize);\n                return moduleSizeDiff <= 1.0 || moduleSizeDiff <= this.estimatedModuleSize;\n            }\n            return false;\n        }\n        /**\n         * Combines this object's current estimate of a finder pattern position and module size\n         * with a new estimate. It returns a new {@code FinderPattern} containing a weighted average\n         * based on count.\n         */\n        combineEstimate(i /*float*/, j /*float*/, newModuleSize /*float*/) {\n            const combinedCount = this.count + 1;\n            const combinedX = (this.count * this.getX() + j) / combinedCount;\n            const combinedY = (this.count * this.getY() + i) / combinedCount;\n            const combinedModuleSize = (this.count * this.estimatedModuleSize + newModuleSize) / combinedCount;\n            return new FinderPattern$1(combinedX, combinedY, combinedModuleSize, combinedCount);\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Encapsulates information about finder patterns in an image, including the location of\n     * the three finder patterns, and their estimated module size.</p>\n     *\n     * @author Sean Owen\n     */\n    class FinderPatternInfo {\n        constructor(patternCenters) {\n            this.bottomLeft = patternCenters[0];\n            this.topLeft = patternCenters[1];\n            this.topRight = patternCenters[2];\n        }\n        getBottomLeft() {\n            return this.bottomLeft;\n        }\n        getTopLeft() {\n            return this.topLeft;\n        }\n        getTopRight() {\n            return this.topRight;\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.io.Serializable;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collections;*/\n    /*import java.util.Comparator;*/\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * <p>This class attempts to find finder patterns in a QR Code. Finder patterns are the square\n     * markers at three corners of a QR Code.</p>\n     *\n     * <p>This class is thread-safe but not reentrant. Each thread must allocate its own object.\n     *\n     * @author Sean Owen\n     */\n    class FinderPatternFinder {\n        /**\n         * <p>Creates a finder that will search the image for three finder patterns.</p>\n         *\n         * @param image image to search\n         */\n        // public constructor(image: BitMatrix) {\n        //   this(image, null)\n        // }\n        constructor(image, resultPointCallback) {\n            this.image = image;\n            this.resultPointCallback = resultPointCallback;\n            this.possibleCenters = [];\n            this.crossCheckStateCount = new Int32Array(5);\n            this.resultPointCallback = resultPointCallback;\n        }\n        getImage() {\n            return this.image;\n        }\n        getPossibleCenters() {\n            return this.possibleCenters;\n        }\n        find(hints) {\n            const tryHarder = (hints !== null && hints !== undefined) && undefined !== hints.get(DecodeHintType$1.TRY_HARDER);\n            const pureBarcode = (hints !== null && hints !== undefined) && undefined !== hints.get(DecodeHintType$1.PURE_BARCODE);\n            const image = this.image;\n            const maxI = image.getHeight();\n            const maxJ = image.getWidth();\n            // We are looking for black/white/black/white/black modules in\n            // 1:1:3:1:1 ratio; this tracks the number of such modules seen so far\n            // Let's assume that the maximum version QR Code we support takes up 1/4 the height of the\n            // image, and then account for the center being 3 modules in size. This gives the smallest\n            // number of pixels the center could be, so skip this often. When trying harder, look for all\n            // QR versions regardless of how dense they are.\n            let iSkip = Math.floor((3 * maxI) / (4 * FinderPatternFinder.MAX_MODULES));\n            if (iSkip < FinderPatternFinder.MIN_SKIP || tryHarder) {\n                iSkip = FinderPatternFinder.MIN_SKIP;\n            }\n            let done = false;\n            const stateCount = new Int32Array(5);\n            for (let i = iSkip - 1; i < maxI && !done; i += iSkip) {\n                // Get a row of black/white values\n                stateCount[0] = 0;\n                stateCount[1] = 0;\n                stateCount[2] = 0;\n                stateCount[3] = 0;\n                stateCount[4] = 0;\n                let currentState = 0;\n                for (let j = 0; j < maxJ; j++) {\n                    if (image.get(j, i)) {\n                        // Black pixel\n                        if ((currentState & 1) === 1) { // Counting white pixels\n                            currentState++;\n                        }\n                        stateCount[currentState]++;\n                    }\n                    else { // White pixel\n                        if ((currentState & 1) === 0) { // Counting black pixels\n                            if (currentState === 4) { // A winner?\n                                if (FinderPatternFinder.foundPatternCross(stateCount)) { // Yes\n                                    const confirmed = this.handlePossibleCenter(stateCount, i, j, pureBarcode);\n                                    if (confirmed === true) {\n                                        // Start examining every other line. Checking each line turned out to be too\n                                        // expensive and didn't improve performance.\n                                        iSkip = 2;\n                                        if (this.hasSkipped === true) {\n                                            done = this.haveMultiplyConfirmedCenters();\n                                        }\n                                        else {\n                                            const rowSkip = this.findRowSkip();\n                                            if (rowSkip > stateCount[2]) {\n                                                // Skip rows between row of lower confirmed center\n                                                // and top of presumed third confirmed center\n                                                // but back up a bit to get a full chance of detecting\n                                                // it, entire width of center of finder pattern\n                                                // Skip by rowSkip, but back off by stateCount[2] (size of last center\n                                                // of pattern we saw) to be conservative, and also back off by iSkip which\n                                                // is about to be re-added\n                                                i += rowSkip - stateCount[2] - iSkip;\n                                                j = maxJ - 1;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        stateCount[0] = stateCount[2];\n                                        stateCount[1] = stateCount[3];\n                                        stateCount[2] = stateCount[4];\n                                        stateCount[3] = 1;\n                                        stateCount[4] = 0;\n                                        currentState = 3;\n                                        continue;\n                                    }\n                                    // Clear state to start looking again\n                                    currentState = 0;\n                                    stateCount[0] = 0;\n                                    stateCount[1] = 0;\n                                    stateCount[2] = 0;\n                                    stateCount[3] = 0;\n                                    stateCount[4] = 0;\n                                }\n                                else { // No, shift counts back by two\n                                    stateCount[0] = stateCount[2];\n                                    stateCount[1] = stateCount[3];\n                                    stateCount[2] = stateCount[4];\n                                    stateCount[3] = 1;\n                                    stateCount[4] = 0;\n                                    currentState = 3;\n                                }\n                            }\n                            else {\n                                stateCount[++currentState]++;\n                            }\n                        }\n                        else { // Counting white pixels\n                            stateCount[currentState]++;\n                        }\n                    }\n                }\n                if (FinderPatternFinder.foundPatternCross(stateCount)) {\n                    const confirmed = this.handlePossibleCenter(stateCount, i, maxJ, pureBarcode);\n                    if (confirmed === true) {\n                        iSkip = stateCount[0];\n                        if (this.hasSkipped) {\n                            // Found a third one\n                            done = this.haveMultiplyConfirmedCenters();\n                        }\n                    }\n                }\n            }\n            const patternInfo = this.selectBestPatterns();\n            ResultPoint.orderBestPatterns(patternInfo);\n            return new FinderPatternInfo(patternInfo);\n        }\n        /**\n         * Given a count of black/white/black/white/black pixels just seen and an end position,\n         * figures the location of the center of this run.\n         */\n        static centerFromEnd(stateCount, end /*int*/) {\n            return (end - stateCount[4] - stateCount[3]) - stateCount[2] / 2.0;\n        }\n        /**\n         * @param stateCount count of black/white/black/white/black pixels just read\n         * @return true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios\n         *         used by finder patterns to be considered a match\n         */\n        static foundPatternCross(stateCount) {\n            let totalModuleSize = 0;\n            for (let i = 0; i < 5; i++) {\n                const count = stateCount[i];\n                if (count === 0) {\n                    return false;\n                }\n                totalModuleSize += count;\n            }\n            if (totalModuleSize < 7) {\n                return false;\n            }\n            const moduleSize = totalModuleSize / 7.0;\n            const maxVariance = moduleSize / 2.0;\n            // Allow less than 50% variance from 1-1-3-1-1 proportions\n            return Math.abs(moduleSize - stateCount[0]) < maxVariance &&\n                Math.abs(moduleSize - stateCount[1]) < maxVariance &&\n                Math.abs(3.0 * moduleSize - stateCount[2]) < 3 * maxVariance &&\n                Math.abs(moduleSize - stateCount[3]) < maxVariance &&\n                Math.abs(moduleSize - stateCount[4]) < maxVariance;\n        }\n        getCrossCheckStateCount() {\n            const crossCheckStateCount = this.crossCheckStateCount;\n            crossCheckStateCount[0] = 0;\n            crossCheckStateCount[1] = 0;\n            crossCheckStateCount[2] = 0;\n            crossCheckStateCount[3] = 0;\n            crossCheckStateCount[4] = 0;\n            return crossCheckStateCount;\n        }\n        /**\n         * After a vertical and horizontal scan finds a potential finder pattern, this method\n         * \"cross-cross-cross-checks\" by scanning down diagonally through the center of the possible\n         * finder pattern to see if the same proportion is detected.\n         *\n         * @param startI row where a finder pattern was detected\n         * @param centerJ center of the section that appears to cross a finder pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         *  observed in any reading state, based on the results of the horizontal scan\n         * @param originalStateCountTotal The original state count total.\n         * @return true if proportions are withing expected limits\n         */\n        crossCheckDiagonal(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const stateCount = this.getCrossCheckStateCount();\n            // Start counting up, left from center finding black center mass\n            let i = 0;\n            const image = this.image;\n            while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i)) {\n                stateCount[2]++;\n                i++;\n            }\n            if (startI < i || centerJ < i) {\n                return false;\n            }\n            // Continue up, left finding white space\n            while (startI >= i && centerJ >= i && !image.get(centerJ - i, startI - i) &&\n                stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i++;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (startI < i || centerJ < i || stateCount[1] > maxCount) {\n                return false;\n            }\n            // Continue up, left finding black border\n            while (startI >= i && centerJ >= i && image.get(centerJ - i, startI - i) &&\n                stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i++;\n            }\n            if (stateCount[0] > maxCount) {\n                return false;\n            }\n            const maxI = image.getHeight();\n            const maxJ = image.getWidth();\n            // Now also count down, right from center\n            i = 1;\n            while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i)) {\n                stateCount[2]++;\n                i++;\n            }\n            // Ran off the edge?\n            if (startI + i >= maxI || centerJ + i >= maxJ) {\n                return false;\n            }\n            while (startI + i < maxI && centerJ + i < maxJ && !image.get(centerJ + i, startI + i) &&\n                stateCount[3] < maxCount) {\n                stateCount[3]++;\n                i++;\n            }\n            if (startI + i >= maxI || centerJ + i >= maxJ || stateCount[3] >= maxCount) {\n                return false;\n            }\n            while (startI + i < maxI && centerJ + i < maxJ && image.get(centerJ + i, startI + i) &&\n                stateCount[4] < maxCount) {\n                stateCount[4]++;\n                i++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return false;\n            }\n            // If we found a finder-pattern-like section, but its size is more than 100% different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];\n            return Math.abs(stateCountTotal - originalStateCountTotal) < 2 * originalStateCountTotal &&\n                FinderPatternFinder.foundPatternCross(stateCount);\n        }\n        /**\n         * <p>After a horizontal scan finds a potential finder pattern, this method\n         * \"cross-checks\" by scanning down vertically through the center of the possible\n         * finder pattern to see if the same proportion is detected.</p>\n         *\n         * @param startI row where a finder pattern was detected\n         * @param centerJ center of the section that appears to cross a finder pattern\n         * @param maxCount maximum reasonable number of modules that should be\n         * observed in any reading state, based on the results of the horizontal scan\n         * @return vertical center of finder pattern, or {@link Float#NaN} if not found\n         */\n        crossCheckVertical(startI /*int*/, centerJ /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxI = image.getHeight();\n            const stateCount = this.getCrossCheckStateCount();\n            // Start counting up from center\n            let i = startI;\n            while (i >= 0 && image.get(centerJ, i)) {\n                stateCount[2]++;\n                i--;\n            }\n            if (i < 0) {\n                return NaN;\n            }\n            while (i >= 0 && !image.get(centerJ, i) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                i--;\n            }\n            // If already too many modules in this state or ran off the edge:\n            if (i < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (i >= 0 && image.get(centerJ, i) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                i--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            // Now also count down from center\n            i = startI + 1;\n            while (i < maxI && image.get(centerJ, i)) {\n                stateCount[2]++;\n                i++;\n            }\n            if (i === maxI) {\n                return NaN;\n            }\n            while (i < maxI && !image.get(centerJ, i) && stateCount[3] < maxCount) {\n                stateCount[3]++;\n                i++;\n            }\n            if (i === maxI || stateCount[3] >= maxCount) {\n                return NaN;\n            }\n            while (i < maxI && image.get(centerJ, i) && stateCount[4] < maxCount) {\n                stateCount[4]++;\n                i++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return NaN;\n            }\n            // If we found a finder-pattern-like section, but its size is more than 40% different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {\n                return NaN;\n            }\n            return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, i) : NaN;\n        }\n        /**\n         * <p>Like {@link #crossCheckVertical(int, int, int, int)}, and in fact is basically identical,\n         * except it reads horizontally instead of vertically. This is used to cross-cross\n         * check a vertical cross check and locate the real center of the alignment pattern.</p>\n         */\n        crossCheckHorizontal(startJ /*int*/, centerI /*int*/, maxCount /*int*/, originalStateCountTotal /*int*/) {\n            const image = this.image;\n            const maxJ = image.getWidth();\n            const stateCount = this.getCrossCheckStateCount();\n            let j = startJ;\n            while (j >= 0 && image.get(j, centerI)) {\n                stateCount[2]++;\n                j--;\n            }\n            if (j < 0) {\n                return NaN;\n            }\n            while (j >= 0 && !image.get(j, centerI) && stateCount[1] <= maxCount) {\n                stateCount[1]++;\n                j--;\n            }\n            if (j < 0 || stateCount[1] > maxCount) {\n                return NaN;\n            }\n            while (j >= 0 && image.get(j, centerI) && stateCount[0] <= maxCount) {\n                stateCount[0]++;\n                j--;\n            }\n            if (stateCount[0] > maxCount) {\n                return NaN;\n            }\n            j = startJ + 1;\n            while (j < maxJ && image.get(j, centerI)) {\n                stateCount[2]++;\n                j++;\n            }\n            if (j === maxJ) {\n                return NaN;\n            }\n            while (j < maxJ && !image.get(j, centerI) && stateCount[3] < maxCount) {\n                stateCount[3]++;\n                j++;\n            }\n            if (j === maxJ || stateCount[3] >= maxCount) {\n                return NaN;\n            }\n            while (j < maxJ && image.get(j, centerI) && stateCount[4] < maxCount) {\n                stateCount[4]++;\n                j++;\n            }\n            if (stateCount[4] >= maxCount) {\n                return NaN;\n            }\n            // If we found a finder-pattern-like section, but its size is significantly different than\n            // the original, assume it's a false positive\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            if (5 * Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal) {\n                return NaN;\n            }\n            return FinderPatternFinder.foundPatternCross(stateCount) ? FinderPatternFinder.centerFromEnd(stateCount, j) : NaN;\n        }\n        /**\n         * <p>This is called when a horizontal scan finds a possible alignment pattern. It will\n         * cross check with a vertical scan, and if successful, will, ah, cross-cross-check\n         * with another horizontal scan. This is needed primarily to locate the real horizontal\n         * center of the pattern in cases of extreme skew.\n         * And then we cross-cross-cross check with another diagonal scan.</p>\n         *\n         * <p>If that succeeds the finder pattern location is added to a list that tracks\n         * the number of times each location has been nearly-matched as a finder pattern.\n         * Each additional find is more evidence that the location is in fact a finder\n         * pattern center\n         *\n         * @param stateCount reading state module counts from horizontal scan\n         * @param i row where finder pattern may be found\n         * @param j end of possible finder pattern in row\n         * @param pureBarcode true if in \"pure barcode\" mode\n         * @return true if a finder pattern candidate was found this time\n         */\n        handlePossibleCenter(stateCount, i /*int*/, j /*int*/, pureBarcode) {\n            const stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] +\n                stateCount[4];\n            let centerJ = FinderPatternFinder.centerFromEnd(stateCount, j);\n            let centerI = this.crossCheckVertical(i, /*(int) */ Math.floor(centerJ), stateCount[2], stateCountTotal);\n            if (!isNaN(centerI)) {\n                // Re-cross check\n                centerJ = this.crossCheckHorizontal(/*(int) */ Math.floor(centerJ), /*(int) */ Math.floor(centerI), stateCount[2], stateCountTotal);\n                if (!isNaN(centerJ) &&\n                    (!pureBarcode || this.crossCheckDiagonal(/*(int) */ Math.floor(centerI), /*(int) */ Math.floor(centerJ), stateCount[2], stateCountTotal))) {\n                    const estimatedModuleSize = stateCountTotal / 7.0;\n                    let found = false;\n                    const possibleCenters = this.possibleCenters;\n                    for (let index = 0, length = possibleCenters.length; index < length; index++) {\n                        const center = possibleCenters[index];\n                        // Look for about the same center and module size:\n                        if (center.aboutEquals(estimatedModuleSize, centerI, centerJ)) {\n                            possibleCenters[index] = center.combineEstimate(centerI, centerJ, estimatedModuleSize);\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        const point = new FinderPattern$1(centerJ, centerI, estimatedModuleSize);\n                        possibleCenters.push(point);\n                        if (this.resultPointCallback !== null && this.resultPointCallback !== undefined) {\n                            this.resultPointCallback.foundPossibleResultPoint(point);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n        /**\n         * @return number of rows we could safely skip during scanning, based on the first\n         *         two finder patterns that have been located. In some cases their position will\n         *         allow us to infer that the third pattern must lie below a certain point farther\n         *         down in the image.\n         */\n        findRowSkip() {\n            const max = this.possibleCenters.length;\n            if (max <= 1) {\n                return 0;\n            }\n            let firstConfirmedCenter = null;\n            for (const center of this.possibleCenters) {\n                if (center.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n                    if (firstConfirmedCenter == null) {\n                        firstConfirmedCenter = center;\n                    }\n                    else {\n                        // We have two confirmed centers\n                        // How far down can we skip before resuming looking for the next\n                        // pattern? In the worst case, only the difference between the\n                        // difference in the x / y coordinates of the two centers.\n                        // This is the case where you find top left last.\n                        this.hasSkipped = true;\n                        return /*(int) */ Math.floor((Math.abs(firstConfirmedCenter.getX() - center.getX()) -\n                            Math.abs(firstConfirmedCenter.getY() - center.getY())) / 2);\n                    }\n                }\n            }\n            return 0;\n        }\n        /**\n         * @return true iff we have found at least 3 finder patterns that have been detected\n         *         at least {@link #CENTER_QUORUM} times each, and, the estimated module size of the\n         *         candidates is \"pretty similar\"\n         */\n        haveMultiplyConfirmedCenters() {\n            let confirmedCount = 0;\n            let totalModuleSize = 0.0;\n            const max = this.possibleCenters.length;\n            for (const pattern of this.possibleCenters) {\n                if (pattern.getCount() >= FinderPatternFinder.CENTER_QUORUM) {\n                    confirmedCount++;\n                    totalModuleSize += pattern.getEstimatedModuleSize();\n                }\n            }\n            if (confirmedCount < 3) {\n                return false;\n            }\n            // OK, we have at least 3 confirmed centers, but, it's possible that one is a \"false positive\"\n            // and that we need to keep looking. We detect this by asking if the estimated module sizes\n            // vary too much. We arbitrarily say that when the total deviation from average exceeds\n            // 5% of the total module size estimates, it's too much.\n            const average = totalModuleSize / max;\n            let totalDeviation = 0.0;\n            for (const pattern of this.possibleCenters) {\n                totalDeviation += Math.abs(pattern.getEstimatedModuleSize() - average);\n            }\n            return totalDeviation <= 0.05 * totalModuleSize;\n        }\n        /**\n         * @return the 3 best {@link FinderPattern}s from our list of candidates. The \"best\" are\n         *         those that have been detected at least {@link #CENTER_QUORUM} times, and whose module\n         *         size differs from the average among those patterns the least\n         * @throws NotFoundException if 3 such finder patterns do not exist\n         */\n        selectBestPatterns() {\n            const startSize = this.possibleCenters.length;\n            if (startSize < 3) {\n                // Couldn't find enough finder patterns\n                throw new NotFoundException();\n            }\n            const possibleCenters = this.possibleCenters;\n            let average;\n            // Filter outlier possibilities whose module size is too different\n            if (startSize > 3) {\n                // But we can only afford to do so if we have at least 4 possibilities to choose from\n                let totalModuleSize = 0.0;\n                let square = 0.0;\n                for (const center of this.possibleCenters) {\n                    const size = center.getEstimatedModuleSize();\n                    totalModuleSize += size;\n                    square += size * size;\n                }\n                average = totalModuleSize / startSize;\n                let stdDev = Math.sqrt(square / startSize - average * average);\n                possibleCenters.sort(\n                /**\n                 * <p>Orders by furthest from average</p>\n                 */\n                // FurthestFromAverageComparator implements Comparator<FinderPattern>\n                (center1, center2) => {\n                    const dA = Math.abs(center2.getEstimatedModuleSize() - average);\n                    const dB = Math.abs(center1.getEstimatedModuleSize() - average);\n                    return dA < dB ? -1 : dA > dB ? 1 : 0;\n                });\n                const limit = Math.max(0.2 * average, stdDev);\n                for (let i = 0; i < possibleCenters.length && possibleCenters.length > 3; i++) {\n                    const pattern = possibleCenters[i];\n                    if (Math.abs(pattern.getEstimatedModuleSize() - average) > limit) {\n                        possibleCenters.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n            if (possibleCenters.length > 3) {\n                // Throw away all but those first size candidate points we found.\n                let totalModuleSize = 0.0;\n                for (const possibleCenter of possibleCenters) {\n                    totalModuleSize += possibleCenter.getEstimatedModuleSize();\n                }\n                average = totalModuleSize / possibleCenters.length;\n                possibleCenters.sort(\n                /**\n                 * <p>Orders by {@link FinderPattern#getCount()}, descending.</p>\n                 */\n                // CenterComparator implements Comparator<FinderPattern>\n                (center1, center2) => {\n                    if (center2.getCount() === center1.getCount()) {\n                        const dA = Math.abs(center2.getEstimatedModuleSize() - average);\n                        const dB = Math.abs(center1.getEstimatedModuleSize() - average);\n                        return dA < dB ? 1 : dA > dB ? -1 : 0;\n                    }\n                    else {\n                        return center2.getCount() - center1.getCount();\n                    }\n                });\n                possibleCenters.splice(3); // this is not realy necessary as we only return first 3 anyway\n            }\n            return [\n                possibleCenters[0],\n                possibleCenters[1],\n                possibleCenters[2]\n            ];\n        }\n    }\n    FinderPatternFinder.CENTER_QUORUM = 2;\n    FinderPatternFinder.MIN_SKIP = 3; // 1 pixel/module times 3 modules/center\n    FinderPatternFinder.MAX_MODULES = 57; // support up to version 10 for mobile clients\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * <p>Encapsulates logic that can detect a QR Code in an image, even if the QR Code\n     * is rotated or skewed, or partially obscured.</p>\n     *\n     * @author Sean Owen\n     */\n    class Detector$2 {\n        constructor(image) {\n            this.image = image;\n        }\n        getImage() {\n            return this.image;\n        }\n        getResultPointCallback() {\n            return this.resultPointCallback;\n        }\n        /**\n         * <p>Detects a QR Code in an image.</p>\n         *\n         * @return {@link DetectorResult} encapsulating results of detecting a QR Code\n         * @throws NotFoundException if QR Code cannot be found\n         * @throws FormatException if a QR Code cannot be decoded\n         */\n        // public detect(): DetectorResult /*throws NotFoundException, FormatException*/ {\n        //   return detect(null)\n        // }\n        /**\n         * <p>Detects a QR Code in an image.</p>\n         *\n         * @param hints optional hints to detector\n         * @return {@link DetectorResult} encapsulating results of detecting a QR Code\n         * @throws NotFoundException if QR Code cannot be found\n         * @throws FormatException if a QR Code cannot be decoded\n         */\n        detect(hints) {\n            this.resultPointCallback = (hints === null || hints === undefined) ? null :\n                /*(ResultPointCallback) */ hints.get(DecodeHintType$1.NEED_RESULT_POINT_CALLBACK);\n            const finder = new FinderPatternFinder(this.image, this.resultPointCallback);\n            const info = finder.find(hints);\n            return this.processFinderPatternInfo(info);\n        }\n        processFinderPatternInfo(info) {\n            const topLeft = info.getTopLeft();\n            const topRight = info.getTopRight();\n            const bottomLeft = info.getBottomLeft();\n            const moduleSize = this.calculateModuleSize(topLeft, topRight, bottomLeft);\n            if (moduleSize < 1.0) {\n                throw new NotFoundException('No pattern found in proccess finder.');\n            }\n            const dimension = Detector$2.computeDimension(topLeft, topRight, bottomLeft, moduleSize);\n            const provisionalVersion = Version$1.getProvisionalVersionForDimension(dimension);\n            const modulesBetweenFPCenters = provisionalVersion.getDimensionForVersion() - 7;\n            let alignmentPattern = null;\n            // Anything above version 1 has an alignment pattern\n            if (provisionalVersion.getAlignmentPatternCenters().length > 0) {\n                // Guess where a \"bottom right\" finder pattern would have been\n                const bottomRightX = topRight.getX() - topLeft.getX() + bottomLeft.getX();\n                const bottomRightY = topRight.getY() - topLeft.getY() + bottomLeft.getY();\n                // Estimate that alignment pattern is closer by 3 modules\n                // from \"bottom right\" to known top left location\n                const correctionToTopLeft = 1.0 - 3.0 / modulesBetweenFPCenters;\n                const estAlignmentX = /*(int) */ Math.floor(topLeft.getX() + correctionToTopLeft * (bottomRightX - topLeft.getX()));\n                const estAlignmentY = /*(int) */ Math.floor(topLeft.getY() + correctionToTopLeft * (bottomRightY - topLeft.getY()));\n                // Kind of arbitrary -- expand search radius before giving up\n                for (let i = 4; i <= 16; i <<= 1) {\n                    try {\n                        alignmentPattern = this.findAlignmentInRegion(moduleSize, estAlignmentX, estAlignmentY, i);\n                        break;\n                    }\n                    catch (re /*NotFoundException*/) {\n                        if (!(re instanceof NotFoundException)) {\n                            throw re;\n                        }\n                        // try next round\n                    }\n                }\n                // If we didn't find alignment pattern... well try anyway without it\n            }\n            const transform = Detector$2.createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);\n            const bits = Detector$2.sampleGrid(this.image, transform, dimension);\n            let points;\n            if (alignmentPattern === null) {\n                points = [bottomLeft, topLeft, topRight];\n            }\n            else {\n                points = [bottomLeft, topLeft, topRight, alignmentPattern];\n            }\n            return new DetectorResult(bits, points);\n        }\n        static createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension /*int*/) {\n            const dimMinusThree = dimension - 3.5;\n            let bottomRightX; /*float*/\n            let bottomRightY; /*float*/\n            let sourceBottomRightX; /*float*/\n            let sourceBottomRightY; /*float*/\n            if (alignmentPattern !== null) {\n                bottomRightX = alignmentPattern.getX();\n                bottomRightY = alignmentPattern.getY();\n                sourceBottomRightX = dimMinusThree - 3.0;\n                sourceBottomRightY = sourceBottomRightX;\n            }\n            else {\n                // Don't have an alignment pattern, just make up the bottom-right point\n                bottomRightX = (topRight.getX() - topLeft.getX()) + bottomLeft.getX();\n                bottomRightY = (topRight.getY() - topLeft.getY()) + bottomLeft.getY();\n                sourceBottomRightX = dimMinusThree;\n                sourceBottomRightY = dimMinusThree;\n            }\n            return PerspectiveTransform.quadrilateralToQuadrilateral(3.5, 3.5, dimMinusThree, 3.5, sourceBottomRightX, sourceBottomRightY, 3.5, dimMinusThree, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRightX, bottomRightY, bottomLeft.getX(), bottomLeft.getY());\n        }\n        static sampleGrid(image, transform, dimension /*int*/) {\n            const sampler = GridSamplerInstance.getInstance();\n            return sampler.sampleGridWithTransform(image, dimension, dimension, transform);\n        }\n        /**\n         * <p>Computes the dimension (number of modules on a size) of the QR Code based on the position\n         * of the finder patterns and estimated module size.</p>\n         */\n        static computeDimension(topLeft, topRight, bottomLeft, moduleSize /*float*/) {\n            const tltrCentersDimension = MathUtils.round(ResultPoint.distance(topLeft, topRight) / moduleSize);\n            const tlblCentersDimension = MathUtils.round(ResultPoint.distance(topLeft, bottomLeft) / moduleSize);\n            let dimension = Math.floor((tltrCentersDimension + tlblCentersDimension) / 2) + 7;\n            switch (dimension & 0x03) { // mod 4\n                case 0:\n                    dimension++;\n                    break;\n                // 1? do nothing\n                case 2:\n                    dimension--;\n                    break;\n                case 3:\n                    throw new NotFoundException('Dimensions could be not found.');\n            }\n            return dimension;\n        }\n        /**\n         * <p>Computes an average estimated module size based on estimated derived from the positions\n         * of the three finder patterns.</p>\n         *\n         * @param topLeft detected top-left finder pattern center\n         * @param topRight detected top-right finder pattern center\n         * @param bottomLeft detected bottom-left finder pattern center\n         * @return estimated module size\n         */\n        calculateModuleSize(topLeft, topRight, bottomLeft) {\n            // Take the average\n            return (this.calculateModuleSizeOneWay(topLeft, topRight) +\n                this.calculateModuleSizeOneWay(topLeft, bottomLeft)) / 2.0;\n        }\n        /**\n         * <p>Estimates module size based on two finder patterns -- it uses\n         * {@link #sizeOfBlackWhiteBlackRunBothWays(int, int, int, int)} to figure the\n         * width of each, measuring along the axis between their centers.</p>\n         */\n        calculateModuleSizeOneWay(pattern, otherPattern) {\n            const moduleSizeEst1 = this.sizeOfBlackWhiteBlackRunBothWays(/*(int) */ Math.floor(pattern.getX()), \n            /*(int) */ Math.floor(pattern.getY()), \n            /*(int) */ Math.floor(otherPattern.getX()), \n            /*(int) */ Math.floor(otherPattern.getY()));\n            const moduleSizeEst2 = this.sizeOfBlackWhiteBlackRunBothWays(/*(int) */ Math.floor(otherPattern.getX()), \n            /*(int) */ Math.floor(otherPattern.getY()), \n            /*(int) */ Math.floor(pattern.getX()), \n            /*(int) */ Math.floor(pattern.getY()));\n            if (isNaN(moduleSizeEst1)) {\n                return moduleSizeEst2 / 7.0;\n            }\n            if (isNaN(moduleSizeEst2)) {\n                return moduleSizeEst1 / 7.0;\n            }\n            // Average them, and divide by 7 since we've counted the width of 3 black modules,\n            // and 1 white and 1 black module on either side. Ergo, divide sum by 14.\n            return (moduleSizeEst1 + moduleSizeEst2) / 14.0;\n        }\n        /**\n         * See {@link #sizeOfBlackWhiteBlackRun(int, int, int, int)}; computes the total width of\n         * a finder pattern by looking for a black-white-black run from the center in the direction\n         * of another point (another finder pattern center), and in the opposite direction too.\n         */\n        sizeOfBlackWhiteBlackRunBothWays(fromX /*int*/, fromY /*int*/, toX /*int*/, toY /*int*/) {\n            let result = this.sizeOfBlackWhiteBlackRun(fromX, fromY, toX, toY);\n            // Now count other way -- don't run off image though of course\n            let scale = 1.0;\n            let otherToX = fromX - (toX - fromX);\n            if (otherToX < 0) {\n                scale = fromX / /*(float) */ (fromX - otherToX);\n                otherToX = 0;\n            }\n            else if (otherToX >= this.image.getWidth()) {\n                scale = (this.image.getWidth() - 1 - fromX) / /*(float) */ (otherToX - fromX);\n                otherToX = this.image.getWidth() - 1;\n            }\n            let otherToY = /*(int) */ Math.floor(fromY - (toY - fromY) * scale);\n            scale = 1.0;\n            if (otherToY < 0) {\n                scale = fromY / /*(float) */ (fromY - otherToY);\n                otherToY = 0;\n            }\n            else if (otherToY >= this.image.getHeight()) {\n                scale = (this.image.getHeight() - 1 - fromY) / /*(float) */ (otherToY - fromY);\n                otherToY = this.image.getHeight() - 1;\n            }\n            otherToX = /*(int) */ Math.floor(fromX + (otherToX - fromX) * scale);\n            result += this.sizeOfBlackWhiteBlackRun(fromX, fromY, otherToX, otherToY);\n            // Middle pixel is double-counted this way; subtract 1\n            return result - 1.0;\n        }\n        /**\n         * <p>This method traces a line from a point in the image, in the direction towards another point.\n         * It begins in a black region, and keeps going until it finds white, then black, then white again.\n         * It reports the distance from the start to this point.</p>\n         *\n         * <p>This is used when figuring out how wide a finder pattern is, when the finder pattern\n         * may be skewed or rotated.</p>\n         */\n        sizeOfBlackWhiteBlackRun(fromX /*int*/, fromY /*int*/, toX /*int*/, toY /*int*/) {\n            // Mild variant of Bresenham's algorithm\n            // see http://en.wikipedia.org/wiki/Bresenham's_line_algorithm\n            const steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n            if (steep) {\n                let temp = fromX;\n                fromX = fromY;\n                fromY = temp;\n                temp = toX;\n                toX = toY;\n                toY = temp;\n            }\n            const dx = Math.abs(toX - fromX);\n            const dy = Math.abs(toY - fromY);\n            let error = -dx / 2;\n            const xstep = fromX < toX ? 1 : -1;\n            const ystep = fromY < toY ? 1 : -1;\n            // In black pixels, looking for white, first or second time.\n            let state = 0;\n            // Loop up until x == toX, but not beyond\n            const xLimit = toX + xstep;\n            for (let x = fromX, y = fromY; x !== xLimit; x += xstep) {\n                const realX = steep ? y : x;\n                const realY = steep ? x : y;\n                // Does current pixel mean we have moved white to black or vice versa?\n                // Scanning black in state 0,2 and white in state 1, so if we find the wrong\n                // color, advance to next state or end if we are in state 2 already\n                if ((state === 1) === this.image.get(realX, realY)) {\n                    if (state === 2) {\n                        return MathUtils.distance(x, y, fromX, fromY);\n                    }\n                    state++;\n                }\n                error += dy;\n                if (error > 0) {\n                    if (y === toY) {\n                        break;\n                    }\n                    y += ystep;\n                    error -= dx;\n                }\n            }\n            // Found black-white-black; give the benefit of the doubt that the next pixel outside the image\n            // is \"white\" so this last point at (toX+xStep,toY) is the right ending. This is really a\n            // small approximation; (toX+xStep,toY+yStep) might be really correct. Ignore this.\n            if (state === 2) {\n                return MathUtils.distance(toX + xstep, toY, fromX, fromY);\n            }\n            // else we didn't find even black-white-black; no estimate is really possible\n            return NaN;\n        }\n        /**\n         * <p>Attempts to locate an alignment pattern in a limited region of the image, which is\n         * guessed to contain it. This method uses {@link AlignmentPattern}.</p>\n         *\n         * @param overallEstModuleSize estimated module size so far\n         * @param estAlignmentX x coordinate of center of area probably containing alignment pattern\n         * @param estAlignmentY y coordinate of above\n         * @param allowanceFactor number of pixels in all directions to search from the center\n         * @return {@link AlignmentPattern} if found, or null otherwise\n         * @throws NotFoundException if an unexpected error occurs during detection\n         */\n        findAlignmentInRegion(overallEstModuleSize /*float*/, estAlignmentX /*int*/, estAlignmentY /*int*/, allowanceFactor /*float*/) {\n            // Look for an alignment pattern (3 modules in size) around where it\n            // should be\n            const allowance = /*(int) */ Math.floor(allowanceFactor * overallEstModuleSize);\n            const alignmentAreaLeftX = Math.max(0, estAlignmentX - allowance);\n            const alignmentAreaRightX = Math.min(this.image.getWidth() - 1, estAlignmentX + allowance);\n            if (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3) {\n                throw new NotFoundException('Alignment top exceeds estimated module size.');\n            }\n            const alignmentAreaTopY = Math.max(0, estAlignmentY - allowance);\n            const alignmentAreaBottomY = Math.min(this.image.getHeight() - 1, estAlignmentY + allowance);\n            if (alignmentAreaBottomY - alignmentAreaTopY < overallEstModuleSize * 3) {\n                throw new NotFoundException('Alignment bottom exceeds estimated module size.');\n            }\n            const alignmentFinder = new AlignmentPatternFinder(this.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize, this.resultPointCallback);\n            return alignmentFinder.find();\n        }\n    }\n\n    /*\n     * Copyright 2007 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.List;*/\n    /*import java.util.Map;*/\n    /**\n     * This implementation can detect and decode QR Codes in an image.\n     *\n     * @author Sean Owen\n     */\n    class QRCodeReader {\n        constructor() {\n            this.decoder = new Decoder$2();\n        }\n        getDecoder() {\n            return this.decoder;\n        }\n        /**\n         * Locates and decodes a QR code in an image.\n         *\n         * @return a representing: string the content encoded by the QR code\n         * @throws NotFoundException if a QR code cannot be found\n         * @throws FormatException if a QR code cannot be decoded\n         * @throws ChecksumException if error correction fails\n         */\n        /*@Override*/\n        // public decode(image: BinaryBitmap): Result /*throws NotFoundException, ChecksumException, FormatException */ {\n        //   return this.decode(image, null)\n        // }\n        /*@Override*/\n        decode(image, hints) {\n            let decoderResult;\n            let points;\n            if (hints !== undefined && hints !== null && undefined !== hints.get(DecodeHintType$1.PURE_BARCODE)) {\n                const bits = QRCodeReader.extractPureBits(image.getBlackMatrix());\n                decoderResult = this.decoder.decodeBitMatrix(bits, hints);\n                points = QRCodeReader.NO_POINTS;\n            }\n            else {\n                const detectorResult = new Detector$2(image.getBlackMatrix()).detect(hints);\n                decoderResult = this.decoder.decodeBitMatrix(detectorResult.getBits(), hints);\n                points = detectorResult.getPoints();\n            }\n            // If the code was mirrored: swap the bottom-left and the top-right points.\n            if (decoderResult.getOther() instanceof QRCodeDecoderMetaData) {\n                decoderResult.getOther().applyMirroredCorrection(points);\n            }\n            const result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat$1.QR_CODE, undefined);\n            const byteSegments = decoderResult.getByteSegments();\n            if (byteSegments !== null) {\n                result.putMetadata(ResultMetadataType$1.BYTE_SEGMENTS, byteSegments);\n            }\n            const ecLevel = decoderResult.getECLevel();\n            if (ecLevel !== null) {\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, ecLevel);\n            }\n            if (decoderResult.hasStructuredAppend()) {\n                result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_SEQUENCE, decoderResult.getStructuredAppendSequenceNumber());\n                result.putMetadata(ResultMetadataType$1.STRUCTURED_APPEND_PARITY, decoderResult.getStructuredAppendParity());\n            }\n            return result;\n        }\n        /*@Override*/\n        reset() {\n            // do nothing\n        }\n        /**\n         * This method detects a code in a \"pure\" image -- that is, pure monochrome image\n         * which contains only an unrotated, unskewed, image of a code, with some white border\n         * around it. This is a specialized method that works exceptionally fast in this special\n         * case.\n         *\n         * @see com.google.zxing.datamatrix.DataMatrixReader#extractPureBits(BitMatrix)\n         */\n        static extractPureBits(image) {\n            const leftTopBlack = image.getTopLeftOnBit();\n            const rightBottomBlack = image.getBottomRightOnBit();\n            if (leftTopBlack === null || rightBottomBlack === null) {\n                throw new NotFoundException();\n            }\n            const moduleSize = this.moduleSize(leftTopBlack, image);\n            let top = leftTopBlack[1];\n            let bottom = rightBottomBlack[1];\n            let left = leftTopBlack[0];\n            let right = rightBottomBlack[0];\n            // Sanity check!\n            if (left >= right || top >= bottom) {\n                throw new NotFoundException();\n            }\n            if (bottom - top !== right - left) {\n                // Special case, where bottom-right module wasn't black so we found something else in the last row\n                // Assume it's a square, so use height as the width\n                right = left + (bottom - top);\n                if (right >= image.getWidth()) {\n                    // Abort if that would not make sense -- off image\n                    throw new NotFoundException();\n                }\n            }\n            const matrixWidth = Math.round((right - left + 1) / moduleSize);\n            const matrixHeight = Math.round((bottom - top + 1) / moduleSize);\n            if (matrixWidth <= 0 || matrixHeight <= 0) {\n                throw new NotFoundException();\n            }\n            if (matrixHeight !== matrixWidth) {\n                // Only possibly decode square regions\n                throw new NotFoundException();\n            }\n            // Push in the \"border\" by half the module width so that we start\n            // sampling in the middle of the module. Just in case the image is a\n            // little off, this will help recover.\n            const nudge = /*(int) */ Math.floor(moduleSize / 2.0);\n            top += nudge;\n            left += nudge;\n            // But careful that this does not sample off the edge\n            // \"right\" is the farthest-right valid pixel location -- right+1 is not necessarily\n            // This is positive by how much the inner x loop below would be too large\n            const nudgedTooFarRight = left + /*(int) */ Math.floor((matrixWidth - 1) * moduleSize) - right;\n            if (nudgedTooFarRight > 0) {\n                if (nudgedTooFarRight > nudge) {\n                    // Neither way fits; abort\n                    throw new NotFoundException();\n                }\n                left -= nudgedTooFarRight;\n            }\n            // See logic above\n            const nudgedTooFarDown = top + /*(int) */ Math.floor((matrixHeight - 1) * moduleSize) - bottom;\n            if (nudgedTooFarDown > 0) {\n                if (nudgedTooFarDown > nudge) {\n                    // Neither way fits; abort\n                    throw new NotFoundException();\n                }\n                top -= nudgedTooFarDown;\n            }\n            // Now just read off the bits\n            const bits = new BitMatrix(matrixWidth, matrixHeight);\n            for (let y = 0; y < matrixHeight; y++) {\n                const iOffset = top + /*(int) */ Math.floor(y * moduleSize);\n                for (let x = 0; x < matrixWidth; x++) {\n                    if (image.get(left + /*(int) */ Math.floor(x * moduleSize), iOffset)) {\n                        bits.set(x, y);\n                    }\n                }\n            }\n            return bits;\n        }\n        static moduleSize(leftTopBlack, image) {\n            const height = image.getHeight();\n            const width = image.getWidth();\n            let x = leftTopBlack[0];\n            let y = leftTopBlack[1];\n            let inBlack = true;\n            let transitions = 0;\n            while (x < width && y < height) {\n                if (inBlack !== image.get(x, y)) {\n                    if (++transitions === 5) {\n                        break;\n                    }\n                    inBlack = !inBlack;\n                }\n                x++;\n                y++;\n            }\n            if (x === width || y === height) {\n                throw new NotFoundException();\n            }\n            return (x - leftTopBlack[0]) / 7.0;\n        }\n    }\n    QRCodeReader.NO_POINTS = new Array();\n\n    /*\n    * Copyright 2009 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417Common {\n        PDF417Common() {\n        }\n        /**\n         * @param moduleBitCount values to sum\n         * @return sum of values\n         * @deprecated call {@link MathUtils#sum(int[])}\n         */\n        // @Deprecated\n        static getBitCountSum(moduleBitCount) {\n            return MathUtils.sum(moduleBitCount);\n        }\n        static toIntArray(list) {\n            if (list == null || !list.length) {\n                return PDF417Common.EMPTY_INT_ARRAY;\n            }\n            const result = new Int32Array(list.length);\n            let i = 0;\n            for (const integer of list) {\n                result[i++] = integer;\n            }\n            return result;\n        }\n        /**\n         * @param symbol encoded symbol to translate to a codeword\n         * @return the codeword corresponding to the symbol.\n         */\n        static getCodeword(symbol /*int*/) {\n            const i = Arrays.binarySearch(PDF417Common.SYMBOL_TABLE, symbol & 0x3FFFF);\n            if (i < 0) {\n                return -1;\n            }\n            return (PDF417Common.CODEWORD_TABLE[i] - 1) % PDF417Common.NUMBER_OF_CODEWORDS;\n        }\n    }\n    PDF417Common.NUMBER_OF_CODEWORDS = 929;\n    // Maximum Codewords (Data + Error).\n    PDF417Common.MAX_CODEWORDS_IN_BARCODE = PDF417Common.NUMBER_OF_CODEWORDS - 1;\n    PDF417Common.MIN_ROWS_IN_BARCODE = 3;\n    PDF417Common.MAX_ROWS_IN_BARCODE = 90;\n    // One left row indication column + max 30 data columns + one right row indicator column\n    // public static /*final*/ MAX_CODEWORDS_IN_ROW: /*int*/ number = 32;\n    PDF417Common.MODULES_IN_CODEWORD = 17;\n    PDF417Common.MODULES_IN_STOP_PATTERN = 18;\n    PDF417Common.BARS_IN_MODULE = 8;\n    PDF417Common.EMPTY_INT_ARRAY = new Int32Array([]);\n    /**\n     * The sorted table of all possible symbols. Extracted from the PDF417\n     * specification. The index of a symbol in this table corresponds to the\n     * index into the codeword table.\n     */\n    PDF417Common.SYMBOL_TABLE = Int32Array.from([\n        0x1025e, 0x1027a, 0x1029e, 0x102bc, 0x102f2, 0x102f4, 0x1032e, 0x1034e, 0x1035c, 0x10396, 0x103a6, 0x103ac,\n        0x10422, 0x10428, 0x10436, 0x10442, 0x10444, 0x10448, 0x10450, 0x1045e, 0x10466, 0x1046c, 0x1047a, 0x10482,\n        0x1049e, 0x104a0, 0x104bc, 0x104c6, 0x104d8, 0x104ee, 0x104f2, 0x104f4, 0x10504, 0x10508, 0x10510, 0x1051e,\n        0x10520, 0x1053c, 0x10540, 0x10578, 0x10586, 0x1058c, 0x10598, 0x105b0, 0x105be, 0x105ce, 0x105dc, 0x105e2,\n        0x105e4, 0x105e8, 0x105f6, 0x1062e, 0x1064e, 0x1065c, 0x1068e, 0x1069c, 0x106b8, 0x106de, 0x106fa, 0x10716,\n        0x10726, 0x1072c, 0x10746, 0x1074c, 0x10758, 0x1076e, 0x10792, 0x10794, 0x107a2, 0x107a4, 0x107a8, 0x107b6,\n        0x10822, 0x10828, 0x10842, 0x10848, 0x10850, 0x1085e, 0x10866, 0x1086c, 0x1087a, 0x10882, 0x10884, 0x10890,\n        0x1089e, 0x108a0, 0x108bc, 0x108c6, 0x108cc, 0x108d8, 0x108ee, 0x108f2, 0x108f4, 0x10902, 0x10908, 0x1091e,\n        0x10920, 0x1093c, 0x10940, 0x10978, 0x10986, 0x10998, 0x109b0, 0x109be, 0x109ce, 0x109dc, 0x109e2, 0x109e4,\n        0x109e8, 0x109f6, 0x10a08, 0x10a10, 0x10a1e, 0x10a20, 0x10a3c, 0x10a40, 0x10a78, 0x10af0, 0x10b06, 0x10b0c,\n        0x10b18, 0x10b30, 0x10b3e, 0x10b60, 0x10b7c, 0x10b8e, 0x10b9c, 0x10bb8, 0x10bc2, 0x10bc4, 0x10bc8, 0x10bd0,\n        0x10bde, 0x10be6, 0x10bec, 0x10c2e, 0x10c4e, 0x10c5c, 0x10c62, 0x10c64, 0x10c68, 0x10c76, 0x10c8e, 0x10c9c,\n        0x10cb8, 0x10cc2, 0x10cc4, 0x10cc8, 0x10cd0, 0x10cde, 0x10ce6, 0x10cec, 0x10cfa, 0x10d0e, 0x10d1c, 0x10d38,\n        0x10d70, 0x10d7e, 0x10d82, 0x10d84, 0x10d88, 0x10d90, 0x10d9e, 0x10da0, 0x10dbc, 0x10dc6, 0x10dcc, 0x10dd8,\n        0x10dee, 0x10df2, 0x10df4, 0x10e16, 0x10e26, 0x10e2c, 0x10e46, 0x10e58, 0x10e6e, 0x10e86, 0x10e8c, 0x10e98,\n        0x10eb0, 0x10ebe, 0x10ece, 0x10edc, 0x10f0a, 0x10f12, 0x10f14, 0x10f22, 0x10f28, 0x10f36, 0x10f42, 0x10f44,\n        0x10f48, 0x10f50, 0x10f5e, 0x10f66, 0x10f6c, 0x10fb2, 0x10fb4, 0x11022, 0x11028, 0x11042, 0x11048, 0x11050,\n        0x1105e, 0x1107a, 0x11082, 0x11084, 0x11090, 0x1109e, 0x110a0, 0x110bc, 0x110c6, 0x110cc, 0x110d8, 0x110ee,\n        0x110f2, 0x110f4, 0x11102, 0x1111e, 0x11120, 0x1113c, 0x11140, 0x11178, 0x11186, 0x11198, 0x111b0, 0x111be,\n        0x111ce, 0x111dc, 0x111e2, 0x111e4, 0x111e8, 0x111f6, 0x11208, 0x1121e, 0x11220, 0x11278, 0x112f0, 0x1130c,\n        0x11330, 0x1133e, 0x11360, 0x1137c, 0x1138e, 0x1139c, 0x113b8, 0x113c2, 0x113c8, 0x113d0, 0x113de, 0x113e6,\n        0x113ec, 0x11408, 0x11410, 0x1141e, 0x11420, 0x1143c, 0x11440, 0x11478, 0x114f0, 0x115e0, 0x1160c, 0x11618,\n        0x11630, 0x1163e, 0x11660, 0x1167c, 0x116c0, 0x116f8, 0x1171c, 0x11738, 0x11770, 0x1177e, 0x11782, 0x11784,\n        0x11788, 0x11790, 0x1179e, 0x117a0, 0x117bc, 0x117c6, 0x117cc, 0x117d8, 0x117ee, 0x1182e, 0x11834, 0x1184e,\n        0x1185c, 0x11862, 0x11864, 0x11868, 0x11876, 0x1188e, 0x1189c, 0x118b8, 0x118c2, 0x118c8, 0x118d0, 0x118de,\n        0x118e6, 0x118ec, 0x118fa, 0x1190e, 0x1191c, 0x11938, 0x11970, 0x1197e, 0x11982, 0x11984, 0x11990, 0x1199e,\n        0x119a0, 0x119bc, 0x119c6, 0x119cc, 0x119d8, 0x119ee, 0x119f2, 0x119f4, 0x11a0e, 0x11a1c, 0x11a38, 0x11a70,\n        0x11a7e, 0x11ae0, 0x11afc, 0x11b08, 0x11b10, 0x11b1e, 0x11b20, 0x11b3c, 0x11b40, 0x11b78, 0x11b8c, 0x11b98,\n        0x11bb0, 0x11bbe, 0x11bce, 0x11bdc, 0x11be2, 0x11be4, 0x11be8, 0x11bf6, 0x11c16, 0x11c26, 0x11c2c, 0x11c46,\n        0x11c4c, 0x11c58, 0x11c6e, 0x11c86, 0x11c98, 0x11cb0, 0x11cbe, 0x11cce, 0x11cdc, 0x11ce2, 0x11ce4, 0x11ce8,\n        0x11cf6, 0x11d06, 0x11d0c, 0x11d18, 0x11d30, 0x11d3e, 0x11d60, 0x11d7c, 0x11d8e, 0x11d9c, 0x11db8, 0x11dc4,\n        0x11dc8, 0x11dd0, 0x11dde, 0x11de6, 0x11dec, 0x11dfa, 0x11e0a, 0x11e12, 0x11e14, 0x11e22, 0x11e24, 0x11e28,\n        0x11e36, 0x11e42, 0x11e44, 0x11e50, 0x11e5e, 0x11e66, 0x11e6c, 0x11e82, 0x11e84, 0x11e88, 0x11e90, 0x11e9e,\n        0x11ea0, 0x11ebc, 0x11ec6, 0x11ecc, 0x11ed8, 0x11eee, 0x11f1a, 0x11f2e, 0x11f32, 0x11f34, 0x11f4e, 0x11f5c,\n        0x11f62, 0x11f64, 0x11f68, 0x11f76, 0x12048, 0x1205e, 0x12082, 0x12084, 0x12090, 0x1209e, 0x120a0, 0x120bc,\n        0x120d8, 0x120f2, 0x120f4, 0x12108, 0x1211e, 0x12120, 0x1213c, 0x12140, 0x12178, 0x12186, 0x12198, 0x121b0,\n        0x121be, 0x121e2, 0x121e4, 0x121e8, 0x121f6, 0x12204, 0x12210, 0x1221e, 0x12220, 0x12278, 0x122f0, 0x12306,\n        0x1230c, 0x12330, 0x1233e, 0x12360, 0x1237c, 0x1238e, 0x1239c, 0x123b8, 0x123c2, 0x123c8, 0x123d0, 0x123e6,\n        0x123ec, 0x1241e, 0x12420, 0x1243c, 0x124f0, 0x125e0, 0x12618, 0x1263e, 0x12660, 0x1267c, 0x126c0, 0x126f8,\n        0x12738, 0x12770, 0x1277e, 0x12782, 0x12784, 0x12790, 0x1279e, 0x127a0, 0x127bc, 0x127c6, 0x127cc, 0x127d8,\n        0x127ee, 0x12820, 0x1283c, 0x12840, 0x12878, 0x128f0, 0x129e0, 0x12bc0, 0x12c18, 0x12c30, 0x12c3e, 0x12c60,\n        0x12c7c, 0x12cc0, 0x12cf8, 0x12df0, 0x12e1c, 0x12e38, 0x12e70, 0x12e7e, 0x12ee0, 0x12efc, 0x12f04, 0x12f08,\n        0x12f10, 0x12f20, 0x12f3c, 0x12f40, 0x12f78, 0x12f86, 0x12f8c, 0x12f98, 0x12fb0, 0x12fbe, 0x12fce, 0x12fdc,\n        0x1302e, 0x1304e, 0x1305c, 0x13062, 0x13068, 0x1308e, 0x1309c, 0x130b8, 0x130c2, 0x130c8, 0x130d0, 0x130de,\n        0x130ec, 0x130fa, 0x1310e, 0x13138, 0x13170, 0x1317e, 0x13182, 0x13184, 0x13190, 0x1319e, 0x131a0, 0x131bc,\n        0x131c6, 0x131cc, 0x131d8, 0x131f2, 0x131f4, 0x1320e, 0x1321c, 0x13270, 0x1327e, 0x132e0, 0x132fc, 0x13308,\n        0x1331e, 0x13320, 0x1333c, 0x13340, 0x13378, 0x13386, 0x13398, 0x133b0, 0x133be, 0x133ce, 0x133dc, 0x133e2,\n        0x133e4, 0x133e8, 0x133f6, 0x1340e, 0x1341c, 0x13438, 0x13470, 0x1347e, 0x134e0, 0x134fc, 0x135c0, 0x135f8,\n        0x13608, 0x13610, 0x1361e, 0x13620, 0x1363c, 0x13640, 0x13678, 0x136f0, 0x1370c, 0x13718, 0x13730, 0x1373e,\n        0x13760, 0x1377c, 0x1379c, 0x137b8, 0x137c2, 0x137c4, 0x137c8, 0x137d0, 0x137de, 0x137e6, 0x137ec, 0x13816,\n        0x13826, 0x1382c, 0x13846, 0x1384c, 0x13858, 0x1386e, 0x13874, 0x13886, 0x13898, 0x138b0, 0x138be, 0x138ce,\n        0x138dc, 0x138e2, 0x138e4, 0x138e8, 0x13906, 0x1390c, 0x13930, 0x1393e, 0x13960, 0x1397c, 0x1398e, 0x1399c,\n        0x139b8, 0x139c8, 0x139d0, 0x139de, 0x139e6, 0x139ec, 0x139fa, 0x13a06, 0x13a0c, 0x13a18, 0x13a30, 0x13a3e,\n        0x13a60, 0x13a7c, 0x13ac0, 0x13af8, 0x13b0e, 0x13b1c, 0x13b38, 0x13b70, 0x13b7e, 0x13b88, 0x13b90, 0x13b9e,\n        0x13ba0, 0x13bbc, 0x13bcc, 0x13bd8, 0x13bee, 0x13bf2, 0x13bf4, 0x13c12, 0x13c14, 0x13c22, 0x13c24, 0x13c28,\n        0x13c36, 0x13c42, 0x13c48, 0x13c50, 0x13c5e, 0x13c66, 0x13c6c, 0x13c82, 0x13c84, 0x13c90, 0x13c9e, 0x13ca0,\n        0x13cbc, 0x13cc6, 0x13ccc, 0x13cd8, 0x13cee, 0x13d02, 0x13d04, 0x13d08, 0x13d10, 0x13d1e, 0x13d20, 0x13d3c,\n        0x13d40, 0x13d78, 0x13d86, 0x13d8c, 0x13d98, 0x13db0, 0x13dbe, 0x13dce, 0x13ddc, 0x13de4, 0x13de8, 0x13df6,\n        0x13e1a, 0x13e2e, 0x13e32, 0x13e34, 0x13e4e, 0x13e5c, 0x13e62, 0x13e64, 0x13e68, 0x13e76, 0x13e8e, 0x13e9c,\n        0x13eb8, 0x13ec2, 0x13ec4, 0x13ec8, 0x13ed0, 0x13ede, 0x13ee6, 0x13eec, 0x13f26, 0x13f2c, 0x13f3a, 0x13f46,\n        0x13f4c, 0x13f58, 0x13f6e, 0x13f72, 0x13f74, 0x14082, 0x1409e, 0x140a0, 0x140bc, 0x14104, 0x14108, 0x14110,\n        0x1411e, 0x14120, 0x1413c, 0x14140, 0x14178, 0x1418c, 0x14198, 0x141b0, 0x141be, 0x141e2, 0x141e4, 0x141e8,\n        0x14208, 0x14210, 0x1421e, 0x14220, 0x1423c, 0x14240, 0x14278, 0x142f0, 0x14306, 0x1430c, 0x14318, 0x14330,\n        0x1433e, 0x14360, 0x1437c, 0x1438e, 0x143c2, 0x143c4, 0x143c8, 0x143d0, 0x143e6, 0x143ec, 0x14408, 0x14410,\n        0x1441e, 0x14420, 0x1443c, 0x14440, 0x14478, 0x144f0, 0x145e0, 0x1460c, 0x14618, 0x14630, 0x1463e, 0x14660,\n        0x1467c, 0x146c0, 0x146f8, 0x1471c, 0x14738, 0x14770, 0x1477e, 0x14782, 0x14784, 0x14788, 0x14790, 0x147a0,\n        0x147bc, 0x147c6, 0x147cc, 0x147d8, 0x147ee, 0x14810, 0x14820, 0x1483c, 0x14840, 0x14878, 0x148f0, 0x149e0,\n        0x14bc0, 0x14c30, 0x14c3e, 0x14c60, 0x14c7c, 0x14cc0, 0x14cf8, 0x14df0, 0x14e38, 0x14e70, 0x14e7e, 0x14ee0,\n        0x14efc, 0x14f04, 0x14f08, 0x14f10, 0x14f1e, 0x14f20, 0x14f3c, 0x14f40, 0x14f78, 0x14f86, 0x14f8c, 0x14f98,\n        0x14fb0, 0x14fce, 0x14fdc, 0x15020, 0x15040, 0x15078, 0x150f0, 0x151e0, 0x153c0, 0x15860, 0x1587c, 0x158c0,\n        0x158f8, 0x159f0, 0x15be0, 0x15c70, 0x15c7e, 0x15ce0, 0x15cfc, 0x15dc0, 0x15df8, 0x15e08, 0x15e10, 0x15e20,\n        0x15e40, 0x15e78, 0x15ef0, 0x15f0c, 0x15f18, 0x15f30, 0x15f60, 0x15f7c, 0x15f8e, 0x15f9c, 0x15fb8, 0x1604e,\n        0x1605c, 0x1608e, 0x1609c, 0x160b8, 0x160c2, 0x160c4, 0x160c8, 0x160de, 0x1610e, 0x1611c, 0x16138, 0x16170,\n        0x1617e, 0x16184, 0x16188, 0x16190, 0x1619e, 0x161a0, 0x161bc, 0x161c6, 0x161cc, 0x161d8, 0x161f2, 0x161f4,\n        0x1620e, 0x1621c, 0x16238, 0x16270, 0x1627e, 0x162e0, 0x162fc, 0x16304, 0x16308, 0x16310, 0x1631e, 0x16320,\n        0x1633c, 0x16340, 0x16378, 0x16386, 0x1638c, 0x16398, 0x163b0, 0x163be, 0x163ce, 0x163dc, 0x163e2, 0x163e4,\n        0x163e8, 0x163f6, 0x1640e, 0x1641c, 0x16438, 0x16470, 0x1647e, 0x164e0, 0x164fc, 0x165c0, 0x165f8, 0x16610,\n        0x1661e, 0x16620, 0x1663c, 0x16640, 0x16678, 0x166f0, 0x16718, 0x16730, 0x1673e, 0x16760, 0x1677c, 0x1678e,\n        0x1679c, 0x167b8, 0x167c2, 0x167c4, 0x167c8, 0x167d0, 0x167de, 0x167e6, 0x167ec, 0x1681c, 0x16838, 0x16870,\n        0x168e0, 0x168fc, 0x169c0, 0x169f8, 0x16bf0, 0x16c10, 0x16c1e, 0x16c20, 0x16c3c, 0x16c40, 0x16c78, 0x16cf0,\n        0x16de0, 0x16e18, 0x16e30, 0x16e3e, 0x16e60, 0x16e7c, 0x16ec0, 0x16ef8, 0x16f1c, 0x16f38, 0x16f70, 0x16f7e,\n        0x16f84, 0x16f88, 0x16f90, 0x16f9e, 0x16fa0, 0x16fbc, 0x16fc6, 0x16fcc, 0x16fd8, 0x17026, 0x1702c, 0x17046,\n        0x1704c, 0x17058, 0x1706e, 0x17086, 0x1708c, 0x17098, 0x170b0, 0x170be, 0x170ce, 0x170dc, 0x170e8, 0x17106,\n        0x1710c, 0x17118, 0x17130, 0x1713e, 0x17160, 0x1717c, 0x1718e, 0x1719c, 0x171b8, 0x171c2, 0x171c4, 0x171c8,\n        0x171d0, 0x171de, 0x171e6, 0x171ec, 0x171fa, 0x17206, 0x1720c, 0x17218, 0x17230, 0x1723e, 0x17260, 0x1727c,\n        0x172c0, 0x172f8, 0x1730e, 0x1731c, 0x17338, 0x17370, 0x1737e, 0x17388, 0x17390, 0x1739e, 0x173a0, 0x173bc,\n        0x173cc, 0x173d8, 0x173ee, 0x173f2, 0x173f4, 0x1740c, 0x17418, 0x17430, 0x1743e, 0x17460, 0x1747c, 0x174c0,\n        0x174f8, 0x175f0, 0x1760e, 0x1761c, 0x17638, 0x17670, 0x1767e, 0x176e0, 0x176fc, 0x17708, 0x17710, 0x1771e,\n        0x17720, 0x1773c, 0x17740, 0x17778, 0x17798, 0x177b0, 0x177be, 0x177dc, 0x177e2, 0x177e4, 0x177e8, 0x17822,\n        0x17824, 0x17828, 0x17836, 0x17842, 0x17844, 0x17848, 0x17850, 0x1785e, 0x17866, 0x1786c, 0x17882, 0x17884,\n        0x17888, 0x17890, 0x1789e, 0x178a0, 0x178bc, 0x178c6, 0x178cc, 0x178d8, 0x178ee, 0x178f2, 0x178f4, 0x17902,\n        0x17904, 0x17908, 0x17910, 0x1791e, 0x17920, 0x1793c, 0x17940, 0x17978, 0x17986, 0x1798c, 0x17998, 0x179b0,\n        0x179be, 0x179ce, 0x179dc, 0x179e2, 0x179e4, 0x179e8, 0x179f6, 0x17a04, 0x17a08, 0x17a10, 0x17a1e, 0x17a20,\n        0x17a3c, 0x17a40, 0x17a78, 0x17af0, 0x17b06, 0x17b0c, 0x17b18, 0x17b30, 0x17b3e, 0x17b60, 0x17b7c, 0x17b8e,\n        0x17b9c, 0x17bb8, 0x17bc4, 0x17bc8, 0x17bd0, 0x17bde, 0x17be6, 0x17bec, 0x17c2e, 0x17c32, 0x17c34, 0x17c4e,\n        0x17c5c, 0x17c62, 0x17c64, 0x17c68, 0x17c76, 0x17c8e, 0x17c9c, 0x17cb8, 0x17cc2, 0x17cc4, 0x17cc8, 0x17cd0,\n        0x17cde, 0x17ce6, 0x17cec, 0x17d0e, 0x17d1c, 0x17d38, 0x17d70, 0x17d82, 0x17d84, 0x17d88, 0x17d90, 0x17d9e,\n        0x17da0, 0x17dbc, 0x17dc6, 0x17dcc, 0x17dd8, 0x17dee, 0x17e26, 0x17e2c, 0x17e3a, 0x17e46, 0x17e4c, 0x17e58,\n        0x17e6e, 0x17e72, 0x17e74, 0x17e86, 0x17e8c, 0x17e98, 0x17eb0, 0x17ece, 0x17edc, 0x17ee2, 0x17ee4, 0x17ee8,\n        0x17ef6, 0x1813a, 0x18172, 0x18174, 0x18216, 0x18226, 0x1823a, 0x1824c, 0x18258, 0x1826e, 0x18272, 0x18274,\n        0x18298, 0x182be, 0x182e2, 0x182e4, 0x182e8, 0x182f6, 0x1835e, 0x1837a, 0x183ae, 0x183d6, 0x18416, 0x18426,\n        0x1842c, 0x1843a, 0x18446, 0x18458, 0x1846e, 0x18472, 0x18474, 0x18486, 0x184b0, 0x184be, 0x184ce, 0x184dc,\n        0x184e2, 0x184e4, 0x184e8, 0x184f6, 0x18506, 0x1850c, 0x18518, 0x18530, 0x1853e, 0x18560, 0x1857c, 0x1858e,\n        0x1859c, 0x185b8, 0x185c2, 0x185c4, 0x185c8, 0x185d0, 0x185de, 0x185e6, 0x185ec, 0x185fa, 0x18612, 0x18614,\n        0x18622, 0x18628, 0x18636, 0x18642, 0x18650, 0x1865e, 0x1867a, 0x18682, 0x18684, 0x18688, 0x18690, 0x1869e,\n        0x186a0, 0x186bc, 0x186c6, 0x186cc, 0x186d8, 0x186ee, 0x186f2, 0x186f4, 0x1872e, 0x1874e, 0x1875c, 0x18796,\n        0x187a6, 0x187ac, 0x187d2, 0x187d4, 0x18826, 0x1882c, 0x1883a, 0x18846, 0x1884c, 0x18858, 0x1886e, 0x18872,\n        0x18874, 0x18886, 0x18898, 0x188b0, 0x188be, 0x188ce, 0x188dc, 0x188e2, 0x188e4, 0x188e8, 0x188f6, 0x1890c,\n        0x18930, 0x1893e, 0x18960, 0x1897c, 0x1898e, 0x189b8, 0x189c2, 0x189c8, 0x189d0, 0x189de, 0x189e6, 0x189ec,\n        0x189fa, 0x18a18, 0x18a30, 0x18a3e, 0x18a60, 0x18a7c, 0x18ac0, 0x18af8, 0x18b1c, 0x18b38, 0x18b70, 0x18b7e,\n        0x18b82, 0x18b84, 0x18b88, 0x18b90, 0x18b9e, 0x18ba0, 0x18bbc, 0x18bc6, 0x18bcc, 0x18bd8, 0x18bee, 0x18bf2,\n        0x18bf4, 0x18c22, 0x18c24, 0x18c28, 0x18c36, 0x18c42, 0x18c48, 0x18c50, 0x18c5e, 0x18c66, 0x18c7a, 0x18c82,\n        0x18c84, 0x18c90, 0x18c9e, 0x18ca0, 0x18cbc, 0x18ccc, 0x18cf2, 0x18cf4, 0x18d04, 0x18d08, 0x18d10, 0x18d1e,\n        0x18d20, 0x18d3c, 0x18d40, 0x18d78, 0x18d86, 0x18d98, 0x18dce, 0x18de2, 0x18de4, 0x18de8, 0x18e2e, 0x18e32,\n        0x18e34, 0x18e4e, 0x18e5c, 0x18e62, 0x18e64, 0x18e68, 0x18e8e, 0x18e9c, 0x18eb8, 0x18ec2, 0x18ec4, 0x18ec8,\n        0x18ed0, 0x18efa, 0x18f16, 0x18f26, 0x18f2c, 0x18f46, 0x18f4c, 0x18f58, 0x18f6e, 0x18f8a, 0x18f92, 0x18f94,\n        0x18fa2, 0x18fa4, 0x18fa8, 0x18fb6, 0x1902c, 0x1903a, 0x19046, 0x1904c, 0x19058, 0x19072, 0x19074, 0x19086,\n        0x19098, 0x190b0, 0x190be, 0x190ce, 0x190dc, 0x190e2, 0x190e8, 0x190f6, 0x19106, 0x1910c, 0x19130, 0x1913e,\n        0x19160, 0x1917c, 0x1918e, 0x1919c, 0x191b8, 0x191c2, 0x191c8, 0x191d0, 0x191de, 0x191e6, 0x191ec, 0x191fa,\n        0x19218, 0x1923e, 0x19260, 0x1927c, 0x192c0, 0x192f8, 0x19338, 0x19370, 0x1937e, 0x19382, 0x19384, 0x19390,\n        0x1939e, 0x193a0, 0x193bc, 0x193c6, 0x193cc, 0x193d8, 0x193ee, 0x193f2, 0x193f4, 0x19430, 0x1943e, 0x19460,\n        0x1947c, 0x194c0, 0x194f8, 0x195f0, 0x19638, 0x19670, 0x1967e, 0x196e0, 0x196fc, 0x19702, 0x19704, 0x19708,\n        0x19710, 0x19720, 0x1973c, 0x19740, 0x19778, 0x19786, 0x1978c, 0x19798, 0x197b0, 0x197be, 0x197ce, 0x197dc,\n        0x197e2, 0x197e4, 0x197e8, 0x19822, 0x19824, 0x19842, 0x19848, 0x19850, 0x1985e, 0x19866, 0x1987a, 0x19882,\n        0x19884, 0x19890, 0x1989e, 0x198a0, 0x198bc, 0x198cc, 0x198f2, 0x198f4, 0x19902, 0x19908, 0x1991e, 0x19920,\n        0x1993c, 0x19940, 0x19978, 0x19986, 0x19998, 0x199ce, 0x199e2, 0x199e4, 0x199e8, 0x19a08, 0x19a10, 0x19a1e,\n        0x19a20, 0x19a3c, 0x19a40, 0x19a78, 0x19af0, 0x19b18, 0x19b3e, 0x19b60, 0x19b9c, 0x19bc2, 0x19bc4, 0x19bc8,\n        0x19bd0, 0x19be6, 0x19c2e, 0x19c34, 0x19c4e, 0x19c5c, 0x19c62, 0x19c64, 0x19c68, 0x19c8e, 0x19c9c, 0x19cb8,\n        0x19cc2, 0x19cc8, 0x19cd0, 0x19ce6, 0x19cfa, 0x19d0e, 0x19d1c, 0x19d38, 0x19d70, 0x19d7e, 0x19d82, 0x19d84,\n        0x19d88, 0x19d90, 0x19da0, 0x19dcc, 0x19df2, 0x19df4, 0x19e16, 0x19e26, 0x19e2c, 0x19e46, 0x19e4c, 0x19e58,\n        0x19e74, 0x19e86, 0x19e8c, 0x19e98, 0x19eb0, 0x19ebe, 0x19ece, 0x19ee2, 0x19ee4, 0x19ee8, 0x19f0a, 0x19f12,\n        0x19f14, 0x19f22, 0x19f24, 0x19f28, 0x19f42, 0x19f44, 0x19f48, 0x19f50, 0x19f5e, 0x19f6c, 0x19f9a, 0x19fae,\n        0x19fb2, 0x19fb4, 0x1a046, 0x1a04c, 0x1a072, 0x1a074, 0x1a086, 0x1a08c, 0x1a098, 0x1a0b0, 0x1a0be, 0x1a0e2,\n        0x1a0e4, 0x1a0e8, 0x1a0f6, 0x1a106, 0x1a10c, 0x1a118, 0x1a130, 0x1a13e, 0x1a160, 0x1a17c, 0x1a18e, 0x1a19c,\n        0x1a1b8, 0x1a1c2, 0x1a1c4, 0x1a1c8, 0x1a1d0, 0x1a1de, 0x1a1e6, 0x1a1ec, 0x1a218, 0x1a230, 0x1a23e, 0x1a260,\n        0x1a27c, 0x1a2c0, 0x1a2f8, 0x1a31c, 0x1a338, 0x1a370, 0x1a37e, 0x1a382, 0x1a384, 0x1a388, 0x1a390, 0x1a39e,\n        0x1a3a0, 0x1a3bc, 0x1a3c6, 0x1a3cc, 0x1a3d8, 0x1a3ee, 0x1a3f2, 0x1a3f4, 0x1a418, 0x1a430, 0x1a43e, 0x1a460,\n        0x1a47c, 0x1a4c0, 0x1a4f8, 0x1a5f0, 0x1a61c, 0x1a638, 0x1a670, 0x1a67e, 0x1a6e0, 0x1a6fc, 0x1a702, 0x1a704,\n        0x1a708, 0x1a710, 0x1a71e, 0x1a720, 0x1a73c, 0x1a740, 0x1a778, 0x1a786, 0x1a78c, 0x1a798, 0x1a7b0, 0x1a7be,\n        0x1a7ce, 0x1a7dc, 0x1a7e2, 0x1a7e4, 0x1a7e8, 0x1a830, 0x1a860, 0x1a87c, 0x1a8c0, 0x1a8f8, 0x1a9f0, 0x1abe0,\n        0x1ac70, 0x1ac7e, 0x1ace0, 0x1acfc, 0x1adc0, 0x1adf8, 0x1ae04, 0x1ae08, 0x1ae10, 0x1ae20, 0x1ae3c, 0x1ae40,\n        0x1ae78, 0x1aef0, 0x1af06, 0x1af0c, 0x1af18, 0x1af30, 0x1af3e, 0x1af60, 0x1af7c, 0x1af8e, 0x1af9c, 0x1afb8,\n        0x1afc4, 0x1afc8, 0x1afd0, 0x1afde, 0x1b042, 0x1b05e, 0x1b07a, 0x1b082, 0x1b084, 0x1b088, 0x1b090, 0x1b09e,\n        0x1b0a0, 0x1b0bc, 0x1b0cc, 0x1b0f2, 0x1b0f4, 0x1b102, 0x1b104, 0x1b108, 0x1b110, 0x1b11e, 0x1b120, 0x1b13c,\n        0x1b140, 0x1b178, 0x1b186, 0x1b198, 0x1b1ce, 0x1b1e2, 0x1b1e4, 0x1b1e8, 0x1b204, 0x1b208, 0x1b210, 0x1b21e,\n        0x1b220, 0x1b23c, 0x1b240, 0x1b278, 0x1b2f0, 0x1b30c, 0x1b33e, 0x1b360, 0x1b39c, 0x1b3c2, 0x1b3c4, 0x1b3c8,\n        0x1b3d0, 0x1b3e6, 0x1b410, 0x1b41e, 0x1b420, 0x1b43c, 0x1b440, 0x1b478, 0x1b4f0, 0x1b5e0, 0x1b618, 0x1b660,\n        0x1b67c, 0x1b6c0, 0x1b738, 0x1b782, 0x1b784, 0x1b788, 0x1b790, 0x1b79e, 0x1b7a0, 0x1b7cc, 0x1b82e, 0x1b84e,\n        0x1b85c, 0x1b88e, 0x1b89c, 0x1b8b8, 0x1b8c2, 0x1b8c4, 0x1b8c8, 0x1b8d0, 0x1b8e6, 0x1b8fa, 0x1b90e, 0x1b91c,\n        0x1b938, 0x1b970, 0x1b97e, 0x1b982, 0x1b984, 0x1b988, 0x1b990, 0x1b99e, 0x1b9a0, 0x1b9cc, 0x1b9f2, 0x1b9f4,\n        0x1ba0e, 0x1ba1c, 0x1ba38, 0x1ba70, 0x1ba7e, 0x1bae0, 0x1bafc, 0x1bb08, 0x1bb10, 0x1bb20, 0x1bb3c, 0x1bb40,\n        0x1bb98, 0x1bbce, 0x1bbe2, 0x1bbe4, 0x1bbe8, 0x1bc16, 0x1bc26, 0x1bc2c, 0x1bc46, 0x1bc4c, 0x1bc58, 0x1bc72,\n        0x1bc74, 0x1bc86, 0x1bc8c, 0x1bc98, 0x1bcb0, 0x1bcbe, 0x1bcce, 0x1bce2, 0x1bce4, 0x1bce8, 0x1bd06, 0x1bd0c,\n        0x1bd18, 0x1bd30, 0x1bd3e, 0x1bd60, 0x1bd7c, 0x1bd9c, 0x1bdc2, 0x1bdc4, 0x1bdc8, 0x1bdd0, 0x1bde6, 0x1bdfa,\n        0x1be12, 0x1be14, 0x1be22, 0x1be24, 0x1be28, 0x1be42, 0x1be44, 0x1be48, 0x1be50, 0x1be5e, 0x1be66, 0x1be82,\n        0x1be84, 0x1be88, 0x1be90, 0x1be9e, 0x1bea0, 0x1bebc, 0x1becc, 0x1bef4, 0x1bf1a, 0x1bf2e, 0x1bf32, 0x1bf34,\n        0x1bf4e, 0x1bf5c, 0x1bf62, 0x1bf64, 0x1bf68, 0x1c09a, 0x1c0b2, 0x1c0b4, 0x1c11a, 0x1c132, 0x1c134, 0x1c162,\n        0x1c164, 0x1c168, 0x1c176, 0x1c1ba, 0x1c21a, 0x1c232, 0x1c234, 0x1c24e, 0x1c25c, 0x1c262, 0x1c264, 0x1c268,\n        0x1c276, 0x1c28e, 0x1c2c2, 0x1c2c4, 0x1c2c8, 0x1c2d0, 0x1c2de, 0x1c2e6, 0x1c2ec, 0x1c2fa, 0x1c316, 0x1c326,\n        0x1c33a, 0x1c346, 0x1c34c, 0x1c372, 0x1c374, 0x1c41a, 0x1c42e, 0x1c432, 0x1c434, 0x1c44e, 0x1c45c, 0x1c462,\n        0x1c464, 0x1c468, 0x1c476, 0x1c48e, 0x1c49c, 0x1c4b8, 0x1c4c2, 0x1c4c8, 0x1c4d0, 0x1c4de, 0x1c4e6, 0x1c4ec,\n        0x1c4fa, 0x1c51c, 0x1c538, 0x1c570, 0x1c57e, 0x1c582, 0x1c584, 0x1c588, 0x1c590, 0x1c59e, 0x1c5a0, 0x1c5bc,\n        0x1c5c6, 0x1c5cc, 0x1c5d8, 0x1c5ee, 0x1c5f2, 0x1c5f4, 0x1c616, 0x1c626, 0x1c62c, 0x1c63a, 0x1c646, 0x1c64c,\n        0x1c658, 0x1c66e, 0x1c672, 0x1c674, 0x1c686, 0x1c68c, 0x1c698, 0x1c6b0, 0x1c6be, 0x1c6ce, 0x1c6dc, 0x1c6e2,\n        0x1c6e4, 0x1c6e8, 0x1c712, 0x1c714, 0x1c722, 0x1c728, 0x1c736, 0x1c742, 0x1c744, 0x1c748, 0x1c750, 0x1c75e,\n        0x1c766, 0x1c76c, 0x1c77a, 0x1c7ae, 0x1c7d6, 0x1c7ea, 0x1c81a, 0x1c82e, 0x1c832, 0x1c834, 0x1c84e, 0x1c85c,\n        0x1c862, 0x1c864, 0x1c868, 0x1c876, 0x1c88e, 0x1c89c, 0x1c8b8, 0x1c8c2, 0x1c8c8, 0x1c8d0, 0x1c8de, 0x1c8e6,\n        0x1c8ec, 0x1c8fa, 0x1c90e, 0x1c938, 0x1c970, 0x1c97e, 0x1c982, 0x1c984, 0x1c990, 0x1c99e, 0x1c9a0, 0x1c9bc,\n        0x1c9c6, 0x1c9cc, 0x1c9d8, 0x1c9ee, 0x1c9f2, 0x1c9f4, 0x1ca38, 0x1ca70, 0x1ca7e, 0x1cae0, 0x1cafc, 0x1cb02,\n        0x1cb04, 0x1cb08, 0x1cb10, 0x1cb20, 0x1cb3c, 0x1cb40, 0x1cb78, 0x1cb86, 0x1cb8c, 0x1cb98, 0x1cbb0, 0x1cbbe,\n        0x1cbce, 0x1cbdc, 0x1cbe2, 0x1cbe4, 0x1cbe8, 0x1cbf6, 0x1cc16, 0x1cc26, 0x1cc2c, 0x1cc3a, 0x1cc46, 0x1cc58,\n        0x1cc72, 0x1cc74, 0x1cc86, 0x1ccb0, 0x1ccbe, 0x1ccce, 0x1cce2, 0x1cce4, 0x1cce8, 0x1cd06, 0x1cd0c, 0x1cd18,\n        0x1cd30, 0x1cd3e, 0x1cd60, 0x1cd7c, 0x1cd9c, 0x1cdc2, 0x1cdc4, 0x1cdc8, 0x1cdd0, 0x1cdde, 0x1cde6, 0x1cdfa,\n        0x1ce22, 0x1ce28, 0x1ce42, 0x1ce50, 0x1ce5e, 0x1ce66, 0x1ce7a, 0x1ce82, 0x1ce84, 0x1ce88, 0x1ce90, 0x1ce9e,\n        0x1cea0, 0x1cebc, 0x1cecc, 0x1cef2, 0x1cef4, 0x1cf2e, 0x1cf32, 0x1cf34, 0x1cf4e, 0x1cf5c, 0x1cf62, 0x1cf64,\n        0x1cf68, 0x1cf96, 0x1cfa6, 0x1cfac, 0x1cfca, 0x1cfd2, 0x1cfd4, 0x1d02e, 0x1d032, 0x1d034, 0x1d04e, 0x1d05c,\n        0x1d062, 0x1d064, 0x1d068, 0x1d076, 0x1d08e, 0x1d09c, 0x1d0b8, 0x1d0c2, 0x1d0c4, 0x1d0c8, 0x1d0d0, 0x1d0de,\n        0x1d0e6, 0x1d0ec, 0x1d0fa, 0x1d11c, 0x1d138, 0x1d170, 0x1d17e, 0x1d182, 0x1d184, 0x1d188, 0x1d190, 0x1d19e,\n        0x1d1a0, 0x1d1bc, 0x1d1c6, 0x1d1cc, 0x1d1d8, 0x1d1ee, 0x1d1f2, 0x1d1f4, 0x1d21c, 0x1d238, 0x1d270, 0x1d27e,\n        0x1d2e0, 0x1d2fc, 0x1d302, 0x1d304, 0x1d308, 0x1d310, 0x1d31e, 0x1d320, 0x1d33c, 0x1d340, 0x1d378, 0x1d386,\n        0x1d38c, 0x1d398, 0x1d3b0, 0x1d3be, 0x1d3ce, 0x1d3dc, 0x1d3e2, 0x1d3e4, 0x1d3e8, 0x1d3f6, 0x1d470, 0x1d47e,\n        0x1d4e0, 0x1d4fc, 0x1d5c0, 0x1d5f8, 0x1d604, 0x1d608, 0x1d610, 0x1d620, 0x1d640, 0x1d678, 0x1d6f0, 0x1d706,\n        0x1d70c, 0x1d718, 0x1d730, 0x1d73e, 0x1d760, 0x1d77c, 0x1d78e, 0x1d79c, 0x1d7b8, 0x1d7c2, 0x1d7c4, 0x1d7c8,\n        0x1d7d0, 0x1d7de, 0x1d7e6, 0x1d7ec, 0x1d826, 0x1d82c, 0x1d83a, 0x1d846, 0x1d84c, 0x1d858, 0x1d872, 0x1d874,\n        0x1d886, 0x1d88c, 0x1d898, 0x1d8b0, 0x1d8be, 0x1d8ce, 0x1d8e2, 0x1d8e4, 0x1d8e8, 0x1d8f6, 0x1d90c, 0x1d918,\n        0x1d930, 0x1d93e, 0x1d960, 0x1d97c, 0x1d99c, 0x1d9c2, 0x1d9c4, 0x1d9c8, 0x1d9d0, 0x1d9e6, 0x1d9fa, 0x1da0c,\n        0x1da18, 0x1da30, 0x1da3e, 0x1da60, 0x1da7c, 0x1dac0, 0x1daf8, 0x1db38, 0x1db82, 0x1db84, 0x1db88, 0x1db90,\n        0x1db9e, 0x1dba0, 0x1dbcc, 0x1dbf2, 0x1dbf4, 0x1dc22, 0x1dc42, 0x1dc44, 0x1dc48, 0x1dc50, 0x1dc5e, 0x1dc66,\n        0x1dc7a, 0x1dc82, 0x1dc84, 0x1dc88, 0x1dc90, 0x1dc9e, 0x1dca0, 0x1dcbc, 0x1dccc, 0x1dcf2, 0x1dcf4, 0x1dd04,\n        0x1dd08, 0x1dd10, 0x1dd1e, 0x1dd20, 0x1dd3c, 0x1dd40, 0x1dd78, 0x1dd86, 0x1dd98, 0x1ddce, 0x1dde2, 0x1dde4,\n        0x1dde8, 0x1de2e, 0x1de32, 0x1de34, 0x1de4e, 0x1de5c, 0x1de62, 0x1de64, 0x1de68, 0x1de8e, 0x1de9c, 0x1deb8,\n        0x1dec2, 0x1dec4, 0x1dec8, 0x1ded0, 0x1dee6, 0x1defa, 0x1df16, 0x1df26, 0x1df2c, 0x1df46, 0x1df4c, 0x1df58,\n        0x1df72, 0x1df74, 0x1df8a, 0x1df92, 0x1df94, 0x1dfa2, 0x1dfa4, 0x1dfa8, 0x1e08a, 0x1e092, 0x1e094, 0x1e0a2,\n        0x1e0a4, 0x1e0a8, 0x1e0b6, 0x1e0da, 0x1e10a, 0x1e112, 0x1e114, 0x1e122, 0x1e124, 0x1e128, 0x1e136, 0x1e142,\n        0x1e144, 0x1e148, 0x1e150, 0x1e166, 0x1e16c, 0x1e17a, 0x1e19a, 0x1e1b2, 0x1e1b4, 0x1e20a, 0x1e212, 0x1e214,\n        0x1e222, 0x1e224, 0x1e228, 0x1e236, 0x1e242, 0x1e248, 0x1e250, 0x1e25e, 0x1e266, 0x1e26c, 0x1e27a, 0x1e282,\n        0x1e284, 0x1e288, 0x1e290, 0x1e2a0, 0x1e2bc, 0x1e2c6, 0x1e2cc, 0x1e2d8, 0x1e2ee, 0x1e2f2, 0x1e2f4, 0x1e31a,\n        0x1e332, 0x1e334, 0x1e35c, 0x1e362, 0x1e364, 0x1e368, 0x1e3ba, 0x1e40a, 0x1e412, 0x1e414, 0x1e422, 0x1e428,\n        0x1e436, 0x1e442, 0x1e448, 0x1e450, 0x1e45e, 0x1e466, 0x1e46c, 0x1e47a, 0x1e482, 0x1e484, 0x1e490, 0x1e49e,\n        0x1e4a0, 0x1e4bc, 0x1e4c6, 0x1e4cc, 0x1e4d8, 0x1e4ee, 0x1e4f2, 0x1e4f4, 0x1e502, 0x1e504, 0x1e508, 0x1e510,\n        0x1e51e, 0x1e520, 0x1e53c, 0x1e540, 0x1e578, 0x1e586, 0x1e58c, 0x1e598, 0x1e5b0, 0x1e5be, 0x1e5ce, 0x1e5dc,\n        0x1e5e2, 0x1e5e4, 0x1e5e8, 0x1e5f6, 0x1e61a, 0x1e62e, 0x1e632, 0x1e634, 0x1e64e, 0x1e65c, 0x1e662, 0x1e668,\n        0x1e68e, 0x1e69c, 0x1e6b8, 0x1e6c2, 0x1e6c4, 0x1e6c8, 0x1e6d0, 0x1e6e6, 0x1e6fa, 0x1e716, 0x1e726, 0x1e72c,\n        0x1e73a, 0x1e746, 0x1e74c, 0x1e758, 0x1e772, 0x1e774, 0x1e792, 0x1e794, 0x1e7a2, 0x1e7a4, 0x1e7a8, 0x1e7b6,\n        0x1e812, 0x1e814, 0x1e822, 0x1e824, 0x1e828, 0x1e836, 0x1e842, 0x1e844, 0x1e848, 0x1e850, 0x1e85e, 0x1e866,\n        0x1e86c, 0x1e87a, 0x1e882, 0x1e884, 0x1e888, 0x1e890, 0x1e89e, 0x1e8a0, 0x1e8bc, 0x1e8c6, 0x1e8cc, 0x1e8d8,\n        0x1e8ee, 0x1e8f2, 0x1e8f4, 0x1e902, 0x1e904, 0x1e908, 0x1e910, 0x1e920, 0x1e93c, 0x1e940, 0x1e978, 0x1e986,\n        0x1e98c, 0x1e998, 0x1e9b0, 0x1e9be, 0x1e9ce, 0x1e9dc, 0x1e9e2, 0x1e9e4, 0x1e9e8, 0x1e9f6, 0x1ea04, 0x1ea08,\n        0x1ea10, 0x1ea20, 0x1ea40, 0x1ea78, 0x1eaf0, 0x1eb06, 0x1eb0c, 0x1eb18, 0x1eb30, 0x1eb3e, 0x1eb60, 0x1eb7c,\n        0x1eb8e, 0x1eb9c, 0x1ebb8, 0x1ebc2, 0x1ebc4, 0x1ebc8, 0x1ebd0, 0x1ebde, 0x1ebe6, 0x1ebec, 0x1ec1a, 0x1ec2e,\n        0x1ec32, 0x1ec34, 0x1ec4e, 0x1ec5c, 0x1ec62, 0x1ec64, 0x1ec68, 0x1ec8e, 0x1ec9c, 0x1ecb8, 0x1ecc2, 0x1ecc4,\n        0x1ecc8, 0x1ecd0, 0x1ece6, 0x1ecfa, 0x1ed0e, 0x1ed1c, 0x1ed38, 0x1ed70, 0x1ed7e, 0x1ed82, 0x1ed84, 0x1ed88,\n        0x1ed90, 0x1ed9e, 0x1eda0, 0x1edcc, 0x1edf2, 0x1edf4, 0x1ee16, 0x1ee26, 0x1ee2c, 0x1ee3a, 0x1ee46, 0x1ee4c,\n        0x1ee58, 0x1ee6e, 0x1ee72, 0x1ee74, 0x1ee86, 0x1ee8c, 0x1ee98, 0x1eeb0, 0x1eebe, 0x1eece, 0x1eedc, 0x1eee2,\n        0x1eee4, 0x1eee8, 0x1ef12, 0x1ef22, 0x1ef24, 0x1ef28, 0x1ef36, 0x1ef42, 0x1ef44, 0x1ef48, 0x1ef50, 0x1ef5e,\n        0x1ef66, 0x1ef6c, 0x1ef7a, 0x1efae, 0x1efb2, 0x1efb4, 0x1efd6, 0x1f096, 0x1f0a6, 0x1f0ac, 0x1f0ba, 0x1f0ca,\n        0x1f0d2, 0x1f0d4, 0x1f116, 0x1f126, 0x1f12c, 0x1f13a, 0x1f146, 0x1f14c, 0x1f158, 0x1f16e, 0x1f172, 0x1f174,\n        0x1f18a, 0x1f192, 0x1f194, 0x1f1a2, 0x1f1a4, 0x1f1a8, 0x1f1da, 0x1f216, 0x1f226, 0x1f22c, 0x1f23a, 0x1f246,\n        0x1f258, 0x1f26e, 0x1f272, 0x1f274, 0x1f286, 0x1f28c, 0x1f298, 0x1f2b0, 0x1f2be, 0x1f2ce, 0x1f2dc, 0x1f2e2,\n        0x1f2e4, 0x1f2e8, 0x1f2f6, 0x1f30a, 0x1f312, 0x1f314, 0x1f322, 0x1f328, 0x1f342, 0x1f344, 0x1f348, 0x1f350,\n        0x1f35e, 0x1f366, 0x1f37a, 0x1f39a, 0x1f3ae, 0x1f3b2, 0x1f3b4, 0x1f416, 0x1f426, 0x1f42c, 0x1f43a, 0x1f446,\n        0x1f44c, 0x1f458, 0x1f46e, 0x1f472, 0x1f474, 0x1f486, 0x1f48c, 0x1f498, 0x1f4b0, 0x1f4be, 0x1f4ce, 0x1f4dc,\n        0x1f4e2, 0x1f4e4, 0x1f4e8, 0x1f4f6, 0x1f506, 0x1f50c, 0x1f518, 0x1f530, 0x1f53e, 0x1f560, 0x1f57c, 0x1f58e,\n        0x1f59c, 0x1f5b8, 0x1f5c2, 0x1f5c4, 0x1f5c8, 0x1f5d0, 0x1f5de, 0x1f5e6, 0x1f5ec, 0x1f5fa, 0x1f60a, 0x1f612,\n        0x1f614, 0x1f622, 0x1f624, 0x1f628, 0x1f636, 0x1f642, 0x1f644, 0x1f648, 0x1f650, 0x1f65e, 0x1f666, 0x1f67a,\n        0x1f682, 0x1f684, 0x1f688, 0x1f690, 0x1f69e, 0x1f6a0, 0x1f6bc, 0x1f6cc, 0x1f6f2, 0x1f6f4, 0x1f71a, 0x1f72e,\n        0x1f732, 0x1f734, 0x1f74e, 0x1f75c, 0x1f762, 0x1f764, 0x1f768, 0x1f776, 0x1f796, 0x1f7a6, 0x1f7ac, 0x1f7ba,\n        0x1f7d2, 0x1f7d4, 0x1f89a, 0x1f8ae, 0x1f8b2, 0x1f8b4, 0x1f8d6, 0x1f8ea, 0x1f91a, 0x1f92e, 0x1f932, 0x1f934,\n        0x1f94e, 0x1f95c, 0x1f962, 0x1f964, 0x1f968, 0x1f976, 0x1f996, 0x1f9a6, 0x1f9ac, 0x1f9ba, 0x1f9ca, 0x1f9d2,\n        0x1f9d4, 0x1fa1a, 0x1fa2e, 0x1fa32, 0x1fa34, 0x1fa4e, 0x1fa5c, 0x1fa62, 0x1fa64, 0x1fa68, 0x1fa76, 0x1fa8e,\n        0x1fa9c, 0x1fab8, 0x1fac2, 0x1fac4, 0x1fac8, 0x1fad0, 0x1fade, 0x1fae6, 0x1faec, 0x1fb16, 0x1fb26, 0x1fb2c,\n        0x1fb3a, 0x1fb46, 0x1fb4c, 0x1fb58, 0x1fb6e, 0x1fb72, 0x1fb74, 0x1fb8a, 0x1fb92, 0x1fb94, 0x1fba2, 0x1fba4,\n        0x1fba8, 0x1fbb6, 0x1fbda\n    ]);\n    /**\n     * This table contains to codewords for all symbols.\n     */\n    PDF417Common.CODEWORD_TABLE = Int32Array.from([\n        2627, 1819, 2622, 2621, 1813, 1812, 2729, 2724, 2723, 2779, 2774, 2773, 902, 896, 908, 868, 865, 861, 859, 2511,\n        873, 871, 1780, 835, 2493, 825, 2491, 842, 837, 844, 1764, 1762, 811, 810, 809, 2483, 807, 2482, 806, 2480, 815,\n        814, 813, 812, 2484, 817, 816, 1745, 1744, 1742, 1746, 2655, 2637, 2635, 2626, 2625, 2623, 2628, 1820, 2752,\n        2739, 2737, 2728, 2727, 2725, 2730, 2785, 2783, 2778, 2777, 2775, 2780, 787, 781, 747, 739, 736, 2413, 754, 752,\n        1719, 692, 689, 681, 2371, 678, 2369, 700, 697, 694, 703, 1688, 1686, 642, 638, 2343, 631, 2341, 627, 2338, 651,\n        646, 643, 2345, 654, 652, 1652, 1650, 1647, 1654, 601, 599, 2322, 596, 2321, 594, 2319, 2317, 611, 610, 608, 606,\n        2324, 603, 2323, 615, 614, 612, 1617, 1616, 1614, 1612, 616, 1619, 1618, 2575, 2538, 2536, 905, 901, 898, 909,\n        2509, 2507, 2504, 870, 867, 864, 860, 2512, 875, 872, 1781, 2490, 2489, 2487, 2485, 1748, 836, 834, 832, 830,\n        2494, 827, 2492, 843, 841, 839, 845, 1765, 1763, 2701, 2676, 2674, 2653, 2648, 2656, 2634, 2633, 2631, 2629,\n        1821, 2638, 2636, 2770, 2763, 2761, 2750, 2745, 2753, 2736, 2735, 2733, 2731, 1848, 2740, 2738, 2786, 2784, 591,\n        588, 576, 569, 566, 2296, 1590, 537, 534, 526, 2276, 522, 2274, 545, 542, 539, 548, 1572, 1570, 481, 2245, 466,\n        2242, 462, 2239, 492, 485, 482, 2249, 496, 494, 1534, 1531, 1528, 1538, 413, 2196, 406, 2191, 2188, 425, 419,\n        2202, 415, 2199, 432, 430, 427, 1472, 1467, 1464, 433, 1476, 1474, 368, 367, 2160, 365, 2159, 362, 2157, 2155,\n        2152, 378, 377, 375, 2166, 372, 2165, 369, 2162, 383, 381, 379, 2168, 1419, 1418, 1416, 1414, 385, 1411, 384,\n        1423, 1422, 1420, 1424, 2461, 802, 2441, 2439, 790, 786, 783, 794, 2409, 2406, 2403, 750, 742, 738, 2414, 756,\n        753, 1720, 2367, 2365, 2362, 2359, 1663, 693, 691, 684, 2373, 680, 2370, 702, 699, 696, 704, 1690, 1687, 2337,\n        2336, 2334, 2332, 1624, 2329, 1622, 640, 637, 2344, 634, 2342, 630, 2340, 650, 648, 645, 2346, 655, 653, 1653,\n        1651, 1649, 1655, 2612, 2597, 2595, 2571, 2568, 2565, 2576, 2534, 2529, 2526, 1787, 2540, 2537, 907, 904, 900,\n        910, 2503, 2502, 2500, 2498, 1768, 2495, 1767, 2510, 2508, 2506, 869, 866, 863, 2513, 876, 874, 1782, 2720, 2713,\n        2711, 2697, 2694, 2691, 2702, 2672, 2670, 2664, 1828, 2678, 2675, 2647, 2646, 2644, 2642, 1823, 2639, 1822, 2654,\n        2652, 2650, 2657, 2771, 1855, 2765, 2762, 1850, 1849, 2751, 2749, 2747, 2754, 353, 2148, 344, 342, 336, 2142,\n        332, 2140, 345, 1375, 1373, 306, 2130, 299, 2128, 295, 2125, 319, 314, 311, 2132, 1354, 1352, 1349, 1356, 262,\n        257, 2101, 253, 2096, 2093, 274, 273, 267, 2107, 263, 2104, 280, 278, 275, 1316, 1311, 1308, 1320, 1318, 2052,\n        202, 2050, 2044, 2040, 219, 2063, 212, 2060, 208, 2055, 224, 221, 2066, 1260, 1258, 1252, 231, 1248, 229, 1266,\n        1264, 1261, 1268, 155, 1998, 153, 1996, 1994, 1991, 1988, 165, 164, 2007, 162, 2006, 159, 2003, 2000, 172, 171,\n        169, 2012, 166, 2010, 1186, 1184, 1182, 1179, 175, 1176, 173, 1192, 1191, 1189, 1187, 176, 1194, 1193, 2313,\n        2307, 2305, 592, 589, 2294, 2292, 2289, 578, 572, 568, 2297, 580, 1591, 2272, 2267, 2264, 1547, 538, 536, 529,\n        2278, 525, 2275, 547, 544, 541, 1574, 1571, 2237, 2235, 2229, 1493, 2225, 1489, 478, 2247, 470, 2244, 465, 2241,\n        493, 488, 484, 2250, 498, 495, 1536, 1533, 1530, 1539, 2187, 2186, 2184, 2182, 1432, 2179, 1430, 2176, 1427, 414,\n        412, 2197, 409, 2195, 405, 2193, 2190, 426, 424, 421, 2203, 418, 2201, 431, 429, 1473, 1471, 1469, 1466, 434,\n        1477, 1475, 2478, 2472, 2470, 2459, 2457, 2454, 2462, 803, 2437, 2432, 2429, 1726, 2443, 2440, 792, 789, 785,\n        2401, 2399, 2393, 1702, 2389, 1699, 2411, 2408, 2405, 745, 741, 2415, 758, 755, 1721, 2358, 2357, 2355, 2353,\n        1661, 2350, 1660, 2347, 1657, 2368, 2366, 2364, 2361, 1666, 690, 687, 2374, 683, 2372, 701, 698, 705, 1691, 1689,\n        2619, 2617, 2610, 2608, 2605, 2613, 2593, 2588, 2585, 1803, 2599, 2596, 2563, 2561, 2555, 1797, 2551, 1795, 2573,\n        2570, 2567, 2577, 2525, 2524, 2522, 2520, 1786, 2517, 1785, 2514, 1783, 2535, 2533, 2531, 2528, 1788, 2541, 2539,\n        906, 903, 911, 2721, 1844, 2715, 2712, 1838, 1836, 2699, 2696, 2693, 2703, 1827, 1826, 1824, 2673, 2671, 2669,\n        2666, 1829, 2679, 2677, 1858, 1857, 2772, 1854, 1853, 1851, 1856, 2766, 2764, 143, 1987, 139, 1986, 135, 133,\n        131, 1984, 128, 1983, 125, 1981, 138, 137, 136, 1985, 1133, 1132, 1130, 112, 110, 1974, 107, 1973, 104, 1971,\n        1969, 122, 121, 119, 117, 1977, 114, 1976, 124, 1115, 1114, 1112, 1110, 1117, 1116, 84, 83, 1953, 81, 1952, 78,\n        1950, 1948, 1945, 94, 93, 91, 1959, 88, 1958, 85, 1955, 99, 97, 95, 1961, 1086, 1085, 1083, 1081, 1078, 100,\n        1090, 1089, 1087, 1091, 49, 47, 1917, 44, 1915, 1913, 1910, 1907, 59, 1926, 56, 1925, 53, 1922, 1919, 66, 64,\n        1931, 61, 1929, 1042, 1040, 1038, 71, 1035, 70, 1032, 68, 1048, 1047, 1045, 1043, 1050, 1049, 12, 10, 1869, 1867,\n        1864, 1861, 21, 1880, 19, 1877, 1874, 1871, 28, 1888, 25, 1886, 22, 1883, 982, 980, 977, 974, 32, 30, 991, 989,\n        987, 984, 34, 995, 994, 992, 2151, 2150, 2147, 2146, 2144, 356, 355, 354, 2149, 2139, 2138, 2136, 2134, 1359,\n        343, 341, 338, 2143, 335, 2141, 348, 347, 346, 1376, 1374, 2124, 2123, 2121, 2119, 1326, 2116, 1324, 310, 308,\n        305, 2131, 302, 2129, 298, 2127, 320, 318, 316, 313, 2133, 322, 321, 1355, 1353, 1351, 1357, 2092, 2091, 2089,\n        2087, 1276, 2084, 1274, 2081, 1271, 259, 2102, 256, 2100, 252, 2098, 2095, 272, 269, 2108, 266, 2106, 281, 279,\n        277, 1317, 1315, 1313, 1310, 282, 1321, 1319, 2039, 2037, 2035, 2032, 1203, 2029, 1200, 1197, 207, 2053, 205,\n        2051, 201, 2049, 2046, 2043, 220, 218, 2064, 215, 2062, 211, 2059, 228, 226, 223, 2069, 1259, 1257, 1254, 232,\n        1251, 230, 1267, 1265, 1263, 2316, 2315, 2312, 2311, 2309, 2314, 2304, 2303, 2301, 2299, 1593, 2308, 2306, 590,\n        2288, 2287, 2285, 2283, 1578, 2280, 1577, 2295, 2293, 2291, 579, 577, 574, 571, 2298, 582, 581, 1592, 2263, 2262,\n        2260, 2258, 1545, 2255, 1544, 2252, 1541, 2273, 2271, 2269, 2266, 1550, 535, 532, 2279, 528, 2277, 546, 543, 549,\n        1575, 1573, 2224, 2222, 2220, 1486, 2217, 1485, 2214, 1482, 1479, 2238, 2236, 2234, 2231, 1496, 2228, 1492, 480,\n        477, 2248, 473, 2246, 469, 2243, 490, 487, 2251, 497, 1537, 1535, 1532, 2477, 2476, 2474, 2479, 2469, 2468, 2466,\n        2464, 1730, 2473, 2471, 2453, 2452, 2450, 2448, 1729, 2445, 1728, 2460, 2458, 2456, 2463, 805, 804, 2428, 2427,\n        2425, 2423, 1725, 2420, 1724, 2417, 1722, 2438, 2436, 2434, 2431, 1727, 2444, 2442, 793, 791, 788, 795, 2388,\n        2386, 2384, 1697, 2381, 1696, 2378, 1694, 1692, 2402, 2400, 2398, 2395, 1703, 2392, 1701, 2412, 2410, 2407, 751,\n        748, 744, 2416, 759, 757, 1807, 2620, 2618, 1806, 1805, 2611, 2609, 2607, 2614, 1802, 1801, 1799, 2594, 2592,\n        2590, 2587, 1804, 2600, 2598, 1794, 1793, 1791, 1789, 2564, 2562, 2560, 2557, 1798, 2554, 1796, 2574, 2572, 2569,\n        2578, 1847, 1846, 2722, 1843, 1842, 1840, 1845, 2716, 2714, 1835, 1834, 1832, 1830, 1839, 1837, 2700, 2698, 2695,\n        2704, 1817, 1811, 1810, 897, 862, 1777, 829, 826, 838, 1760, 1758, 808, 2481, 1741, 1740, 1738, 1743, 2624, 1818,\n        2726, 2776, 782, 740, 737, 1715, 686, 679, 695, 1682, 1680, 639, 628, 2339, 647, 644, 1645, 1643, 1640, 1648,\n        602, 600, 597, 595, 2320, 593, 2318, 609, 607, 604, 1611, 1610, 1608, 1606, 613, 1615, 1613, 2328, 926, 924, 892,\n        886, 899, 857, 850, 2505, 1778, 824, 823, 821, 819, 2488, 818, 2486, 833, 831, 828, 840, 1761, 1759, 2649, 2632,\n        2630, 2746, 2734, 2732, 2782, 2781, 570, 567, 1587, 531, 527, 523, 540, 1566, 1564, 476, 467, 463, 2240, 486,\n        483, 1524, 1521, 1518, 1529, 411, 403, 2192, 399, 2189, 423, 416, 1462, 1457, 1454, 428, 1468, 1465, 2210, 366,\n        363, 2158, 360, 2156, 357, 2153, 376, 373, 370, 2163, 1410, 1409, 1407, 1405, 382, 1402, 380, 1417, 1415, 1412,\n        1421, 2175, 2174, 777, 774, 771, 784, 732, 725, 722, 2404, 743, 1716, 676, 674, 668, 2363, 665, 2360, 685, 1684,\n        1681, 626, 624, 622, 2335, 620, 2333, 617, 2330, 641, 635, 649, 1646, 1644, 1642, 2566, 928, 925, 2530, 2527,\n        894, 891, 888, 2501, 2499, 2496, 858, 856, 854, 851, 1779, 2692, 2668, 2665, 2645, 2643, 2640, 2651, 2768, 2759,\n        2757, 2744, 2743, 2741, 2748, 352, 1382, 340, 337, 333, 1371, 1369, 307, 300, 296, 2126, 315, 312, 1347, 1342,\n        1350, 261, 258, 250, 2097, 246, 2094, 271, 268, 264, 1306, 1301, 1298, 276, 1312, 1309, 2115, 203, 2048, 195,\n        2045, 191, 2041, 213, 209, 2056, 1246, 1244, 1238, 225, 1234, 222, 1256, 1253, 1249, 1262, 2080, 2079, 154, 1997,\n        150, 1995, 147, 1992, 1989, 163, 160, 2004, 156, 2001, 1175, 1174, 1172, 1170, 1167, 170, 1164, 167, 1185, 1183,\n        1180, 1177, 174, 1190, 1188, 2025, 2024, 2022, 587, 586, 564, 559, 556, 2290, 573, 1588, 520, 518, 512, 2268,\n        508, 2265, 530, 1568, 1565, 461, 457, 2233, 450, 2230, 446, 2226, 479, 471, 489, 1526, 1523, 1520, 397, 395,\n        2185, 392, 2183, 389, 2180, 2177, 410, 2194, 402, 422, 1463, 1461, 1459, 1456, 1470, 2455, 799, 2433, 2430, 779,\n        776, 773, 2397, 2394, 2390, 734, 728, 724, 746, 1717, 2356, 2354, 2351, 2348, 1658, 677, 675, 673, 670, 667, 688,\n        1685, 1683, 2606, 2589, 2586, 2559, 2556, 2552, 927, 2523, 2521, 2518, 2515, 1784, 2532, 895, 893, 890, 2718,\n        2709, 2707, 2689, 2687, 2684, 2663, 2662, 2660, 2658, 1825, 2667, 2769, 1852, 2760, 2758, 142, 141, 1139, 1138,\n        134, 132, 129, 126, 1982, 1129, 1128, 1126, 1131, 113, 111, 108, 105, 1972, 101, 1970, 120, 118, 115, 1109, 1108,\n        1106, 1104, 123, 1113, 1111, 82, 79, 1951, 75, 1949, 72, 1946, 92, 89, 86, 1956, 1077, 1076, 1074, 1072, 98,\n        1069, 96, 1084, 1082, 1079, 1088, 1968, 1967, 48, 45, 1916, 42, 1914, 39, 1911, 1908, 60, 57, 54, 1923, 50, 1920,\n        1031, 1030, 1028, 1026, 67, 1023, 65, 1020, 62, 1041, 1039, 1036, 1033, 69, 1046, 1044, 1944, 1943, 1941, 11, 9,\n        1868, 7, 1865, 1862, 1859, 20, 1878, 16, 1875, 13, 1872, 970, 968, 966, 963, 29, 960, 26, 23, 983, 981, 978, 975,\n        33, 971, 31, 990, 988, 985, 1906, 1904, 1902, 993, 351, 2145, 1383, 331, 330, 328, 326, 2137, 323, 2135, 339,\n        1372, 1370, 294, 293, 291, 289, 2122, 286, 2120, 283, 2117, 309, 303, 317, 1348, 1346, 1344, 245, 244, 242, 2090,\n        239, 2088, 236, 2085, 2082, 260, 2099, 249, 270, 1307, 1305, 1303, 1300, 1314, 189, 2038, 186, 2036, 183, 2033,\n        2030, 2026, 206, 198, 2047, 194, 216, 1247, 1245, 1243, 1240, 227, 1237, 1255, 2310, 2302, 2300, 2286, 2284,\n        2281, 565, 563, 561, 558, 575, 1589, 2261, 2259, 2256, 2253, 1542, 521, 519, 517, 514, 2270, 511, 533, 1569,\n        1567, 2223, 2221, 2218, 2215, 1483, 2211, 1480, 459, 456, 453, 2232, 449, 474, 491, 1527, 1525, 1522, 2475, 2467,\n        2465, 2451, 2449, 2446, 801, 800, 2426, 2424, 2421, 2418, 1723, 2435, 780, 778, 775, 2387, 2385, 2382, 2379,\n        1695, 2375, 1693, 2396, 735, 733, 730, 727, 749, 1718, 2616, 2615, 2604, 2603, 2601, 2584, 2583, 2581, 2579,\n        1800, 2591, 2550, 2549, 2547, 2545, 1792, 2542, 1790, 2558, 929, 2719, 1841, 2710, 2708, 1833, 1831, 2690, 2688,\n        2686, 1815, 1809, 1808, 1774, 1756, 1754, 1737, 1736, 1734, 1739, 1816, 1711, 1676, 1674, 633, 629, 1638, 1636,\n        1633, 1641, 598, 1605, 1604, 1602, 1600, 605, 1609, 1607, 2327, 887, 853, 1775, 822, 820, 1757, 1755, 1584, 524,\n        1560, 1558, 468, 464, 1514, 1511, 1508, 1519, 408, 404, 400, 1452, 1447, 1444, 417, 1458, 1455, 2208, 364, 361,\n        358, 2154, 1401, 1400, 1398, 1396, 374, 1393, 371, 1408, 1406, 1403, 1413, 2173, 2172, 772, 726, 723, 1712, 672,\n        669, 666, 682, 1678, 1675, 625, 623, 621, 618, 2331, 636, 632, 1639, 1637, 1635, 920, 918, 884, 880, 889, 849,\n        848, 847, 846, 2497, 855, 852, 1776, 2641, 2742, 2787, 1380, 334, 1367, 1365, 301, 297, 1340, 1338, 1335, 1343,\n        255, 251, 247, 1296, 1291, 1288, 265, 1302, 1299, 2113, 204, 196, 192, 2042, 1232, 1230, 1224, 214, 1220, 210,\n        1242, 1239, 1235, 1250, 2077, 2075, 151, 148, 1993, 144, 1990, 1163, 1162, 1160, 1158, 1155, 161, 1152, 157,\n        1173, 1171, 1168, 1165, 168, 1181, 1178, 2021, 2020, 2018, 2023, 585, 560, 557, 1585, 516, 509, 1562, 1559, 458,\n        447, 2227, 472, 1516, 1513, 1510, 398, 396, 393, 390, 2181, 386, 2178, 407, 1453, 1451, 1449, 1446, 420, 1460,\n        2209, 769, 764, 720, 712, 2391, 729, 1713, 664, 663, 661, 659, 2352, 656, 2349, 671, 1679, 1677, 2553, 922, 919,\n        2519, 2516, 885, 883, 881, 2685, 2661, 2659, 2767, 2756, 2755, 140, 1137, 1136, 130, 127, 1125, 1124, 1122, 1127,\n        109, 106, 102, 1103, 1102, 1100, 1098, 116, 1107, 1105, 1980, 80, 76, 73, 1947, 1068, 1067, 1065, 1063, 90, 1060,\n        87, 1075, 1073, 1070, 1080, 1966, 1965, 46, 43, 40, 1912, 36, 1909, 1019, 1018, 1016, 1014, 58, 1011, 55, 1008,\n        51, 1029, 1027, 1024, 1021, 63, 1037, 1034, 1940, 1939, 1937, 1942, 8, 1866, 4, 1863, 1, 1860, 956, 954, 952,\n        949, 946, 17, 14, 969, 967, 964, 961, 27, 957, 24, 979, 976, 972, 1901, 1900, 1898, 1896, 986, 1905, 1903, 350,\n        349, 1381, 329, 327, 324, 1368, 1366, 292, 290, 287, 284, 2118, 304, 1341, 1339, 1337, 1345, 243, 240, 237, 2086,\n        233, 2083, 254, 1297, 1295, 1293, 1290, 1304, 2114, 190, 187, 184, 2034, 180, 2031, 177, 2027, 199, 1233, 1231,\n        1229, 1226, 217, 1223, 1241, 2078, 2076, 584, 555, 554, 552, 550, 2282, 562, 1586, 507, 506, 504, 502, 2257, 499,\n        2254, 515, 1563, 1561, 445, 443, 441, 2219, 438, 2216, 435, 2212, 460, 454, 475, 1517, 1515, 1512, 2447, 798,\n        797, 2422, 2419, 770, 768, 766, 2383, 2380, 2376, 721, 719, 717, 714, 731, 1714, 2602, 2582, 2580, 2548, 2546,\n        2543, 923, 921, 2717, 2706, 2705, 2683, 2682, 2680, 1771, 1752, 1750, 1733, 1732, 1731, 1735, 1814, 1707, 1670,\n        1668, 1631, 1629, 1626, 1634, 1599, 1598, 1596, 1594, 1603, 1601, 2326, 1772, 1753, 1751, 1581, 1554, 1552, 1504,\n        1501, 1498, 1509, 1442, 1437, 1434, 401, 1448, 1445, 2206, 1392, 1391, 1389, 1387, 1384, 359, 1399, 1397, 1394,\n        1404, 2171, 2170, 1708, 1672, 1669, 619, 1632, 1630, 1628, 1773, 1378, 1363, 1361, 1333, 1328, 1336, 1286, 1281,\n        1278, 248, 1292, 1289, 2111, 1218, 1216, 1210, 197, 1206, 193, 1228, 1225, 1221, 1236, 2073, 2071, 1151, 1150,\n        1148, 1146, 152, 1143, 149, 1140, 145, 1161, 1159, 1156, 1153, 158, 1169, 1166, 2017, 2016, 2014, 2019, 1582,\n        510, 1556, 1553, 452, 448, 1506, 1500, 394, 391, 387, 1443, 1441, 1439, 1436, 1450, 2207, 765, 716, 713, 1709,\n        662, 660, 657, 1673, 1671, 916, 914, 879, 878, 877, 882, 1135, 1134, 1121, 1120, 1118, 1123, 1097, 1096, 1094,\n        1092, 103, 1101, 1099, 1979, 1059, 1058, 1056, 1054, 77, 1051, 74, 1066, 1064, 1061, 1071, 1964, 1963, 1007,\n        1006, 1004, 1002, 999, 41, 996, 37, 1017, 1015, 1012, 1009, 52, 1025, 1022, 1936, 1935, 1933, 1938, 942, 940,\n        938, 935, 932, 5, 2, 955, 953, 950, 947, 18, 943, 15, 965, 962, 958, 1895, 1894, 1892, 1890, 973, 1899, 1897,\n        1379, 325, 1364, 1362, 288, 285, 1334, 1332, 1330, 241, 238, 234, 1287, 1285, 1283, 1280, 1294, 2112, 188, 185,\n        181, 178, 2028, 1219, 1217, 1215, 1212, 200, 1209, 1227, 2074, 2072, 583, 553, 551, 1583, 505, 503, 500, 513,\n        1557, 1555, 444, 442, 439, 436, 2213, 455, 451, 1507, 1505, 1502, 796, 763, 762, 760, 767, 711, 710, 708, 706,\n        2377, 718, 715, 1710, 2544, 917, 915, 2681, 1627, 1597, 1595, 2325, 1769, 1749, 1747, 1499, 1438, 1435, 2204,\n        1390, 1388, 1385, 1395, 2169, 2167, 1704, 1665, 1662, 1625, 1623, 1620, 1770, 1329, 1282, 1279, 2109, 1214, 1207,\n        1222, 2068, 2065, 1149, 1147, 1144, 1141, 146, 1157, 1154, 2013, 2011, 2008, 2015, 1579, 1549, 1546, 1495, 1487,\n        1433, 1431, 1428, 1425, 388, 1440, 2205, 1705, 658, 1667, 1664, 1119, 1095, 1093, 1978, 1057, 1055, 1052, 1062,\n        1962, 1960, 1005, 1003, 1000, 997, 38, 1013, 1010, 1932, 1930, 1927, 1934, 941, 939, 936, 933, 6, 930, 3, 951,\n        948, 944, 1889, 1887, 1884, 1881, 959, 1893, 1891, 35, 1377, 1360, 1358, 1327, 1325, 1322, 1331, 1277, 1275,\n        1272, 1269, 235, 1284, 2110, 1205, 1204, 1201, 1198, 182, 1195, 179, 1213, 2070, 2067, 1580, 501, 1551, 1548,\n        440, 437, 1497, 1494, 1490, 1503, 761, 709, 707, 1706, 913, 912, 2198, 1386, 2164, 2161, 1621, 1766, 2103, 1208,\n        2058, 2054, 1145, 1142, 2005, 2002, 1999, 2009, 1488, 1429, 1426, 2200, 1698, 1659, 1656, 1975, 1053, 1957, 1954,\n        1001, 998, 1924, 1921, 1918, 1928, 937, 934, 931, 1879, 1876, 1873, 1870, 945, 1885, 1882, 1323, 1273, 1270,\n        2105, 1202, 1199, 1196, 1211, 2061, 2057, 1576, 1543, 1540, 1484, 1481, 1478, 1491, 1700\n    ]);\n\n    /*\n    * Copyright 2007 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.List;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417DetectorResult {\n        constructor(bits, points) {\n            this.bits = bits;\n            this.points = points;\n        }\n        getBits() {\n            return this.bits;\n        }\n        getPoints() {\n            return this.points;\n        }\n    }\n\n    /*\n    * Copyright 2009 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.ArrayList;\n    // import java.util.Arrays;\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * <p>Encapsulates logic that can detect a PDF417 Code in an image, even if the\n     * PDF417 Code is rotated or skewed, or partially obscured.</p>\n     *\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Guenther Grau\n     */\n    /*public*/ /*final*/ class Detector$3 {\n        /**\n         * <p>Detects a PDF417 Code in an image. Only checks 0 and 180 degree rotations.</p>\n         *\n         * @param image barcode image to decode\n         * @param hints optional hints to detector\n         * @param multiple if true, then the image is searched for multiple codes. If false, then at most one code will\n         * be found and returned\n         * @return {@link PDF417DetectorResult} encapsulating results of detecting a PDF417 code\n         * @throws NotFoundException if no PDF417 Code can be found\n         */\n        static detectMultiple(image, hints, multiple) {\n            // TODO detection improvement, tryHarder could try several different luminance thresholds/blackpoints or even\n            // different binarizers\n            // boolean tryHarder = hints != null && hints.containsKey(DecodeHintType.TRY_HARDER);\n            let bitMatrix = image.getBlackMatrix();\n            let barcodeCoordinates = Detector$3.detect(multiple, bitMatrix);\n            if (!barcodeCoordinates.length) {\n                bitMatrix = bitMatrix.clone();\n                bitMatrix.rotate180();\n                barcodeCoordinates = Detector$3.detect(multiple, bitMatrix);\n            }\n            return new PDF417DetectorResult(bitMatrix, barcodeCoordinates);\n        }\n        /**\n         * Detects PDF417 codes in an image. Only checks 0 degree rotation\n         * @param multiple if true, then the image is searched for multiple codes. If false, then at most one code will\n         * be found and returned\n         * @param bitMatrix bit matrix to detect barcodes in\n         * @return List of ResultPoint arrays containing the coordinates of found barcodes\n         */\n        static detect(multiple, bitMatrix) {\n            const barcodeCoordinates = new Array();\n            let row = 0;\n            let column = 0;\n            let foundBarcodeInRow = false;\n            while (row < bitMatrix.getHeight()) {\n                const vertices = Detector$3.findVertices(bitMatrix, row, column);\n                if (vertices[0] == null && vertices[3] == null) {\n                    if (!foundBarcodeInRow) {\n                        // we didn't find any barcode so that's the end of searching\n                        break;\n                    }\n                    // we didn't find a barcode starting at the given column and row. Try again from the first column and slightly\n                    // below the lowest barcode we found so far.\n                    foundBarcodeInRow = false;\n                    column = 0;\n                    for (const barcodeCoordinate of barcodeCoordinates) {\n                        if (barcodeCoordinate[1] != null) {\n                            row = Math.trunc(Math.max(row, barcodeCoordinate[1].getY()));\n                        }\n                        if (barcodeCoordinate[3] != null) {\n                            row = Math.max(row, Math.trunc(barcodeCoordinate[3].getY()));\n                        }\n                    }\n                    row += Detector$3.ROW_STEP;\n                    continue;\n                }\n                foundBarcodeInRow = true;\n                barcodeCoordinates.push(vertices);\n                if (!multiple) {\n                    break;\n                }\n                // if we didn't find a right row indicator column, then continue the search for the next barcode after the\n                // start pattern of the barcode just found.\n                if (vertices[2] != null) {\n                    column = Math.trunc(vertices[2].getX());\n                    row = Math.trunc(vertices[2].getY());\n                }\n                else {\n                    column = Math.trunc(vertices[4].getX());\n                    row = Math.trunc(vertices[4].getY());\n                }\n            }\n            return barcodeCoordinates;\n        }\n        /**\n         * Locate the vertices and the codewords area of a black blob using the Start\n         * and Stop patterns as locators.\n         *\n         * @param matrix the scanned barcode image.\n         * @return an array containing the vertices:\n         *           vertices[0] x, y top left barcode\n         *           vertices[1] x, y bottom left barcode\n         *           vertices[2] x, y top right barcode\n         *           vertices[3] x, y bottom right barcode\n         *           vertices[4] x, y top left codeword area\n         *           vertices[5] x, y bottom left codeword area\n         *           vertices[6] x, y top right codeword area\n         *           vertices[7] x, y bottom right codeword area\n         */\n        static findVertices(matrix, startRow, startColumn) {\n            const height = matrix.getHeight();\n            const width = matrix.getWidth();\n            // const result = new ResultPoint[8];\n            const result = new Array(8);\n            Detector$3.copyToResult(result, Detector$3.findRowsWithPattern(matrix, height, width, startRow, startColumn, Detector$3.START_PATTERN), Detector$3.INDEXES_START_PATTERN);\n            if (result[4] != null) {\n                startColumn = Math.trunc(result[4].getX());\n                startRow = Math.trunc(result[4].getY());\n            }\n            Detector$3.copyToResult(result, Detector$3.findRowsWithPattern(matrix, height, width, startRow, startColumn, Detector$3.STOP_PATTERN), Detector$3.INDEXES_STOP_PATTERN);\n            return result;\n        }\n        static copyToResult(result, tmpResult, destinationIndexes) {\n            for (let i = 0; i < destinationIndexes.length; i++) {\n                result[destinationIndexes[i]] = tmpResult[i];\n            }\n        }\n        static findRowsWithPattern(matrix, height, width, startRow, startColumn, pattern) {\n            // const result = new ResultPoint[4];\n            const result = new Array(4);\n            let found = false;\n            const counters = new Int32Array(pattern.length);\n            for (; startRow < height; startRow += Detector$3.ROW_STEP) {\n                let loc = Detector$3.findGuardPattern(matrix, startColumn, startRow, width, false, pattern, counters);\n                if (loc != null) {\n                    while (startRow > 0) {\n                        const previousRowLoc = Detector$3.findGuardPattern(matrix, startColumn, --startRow, width, false, pattern, counters);\n                        if (previousRowLoc != null) {\n                            loc = previousRowLoc;\n                        }\n                        else {\n                            startRow++;\n                            break;\n                        }\n                    }\n                    result[0] = new ResultPoint(loc[0], startRow);\n                    result[1] = new ResultPoint(loc[1], startRow);\n                    found = true;\n                    break;\n                }\n            }\n            let stopRow = startRow + 1;\n            // Last row of the current symbol that contains pattern\n            if (found) {\n                let skippedRowCount = 0;\n                let previousRowLoc = Int32Array.from([Math.trunc(result[0].getX()), Math.trunc(result[1].getX())]);\n                for (; stopRow < height; stopRow++) {\n                    const loc = Detector$3.findGuardPattern(matrix, previousRowLoc[0], stopRow, width, false, pattern, counters);\n                    // a found pattern is only considered to belong to the same barcode if the start and end positions\n                    // don't differ too much. Pattern drift should be not bigger than two for consecutive rows. With\n                    // a higher number of skipped rows drift could be larger. To keep it simple for now, we allow a slightly\n                    // larger drift and don't check for skipped rows.\n                    if (loc != null &&\n                        Math.abs(previousRowLoc[0] - loc[0]) < Detector$3.MAX_PATTERN_DRIFT &&\n                        Math.abs(previousRowLoc[1] - loc[1]) < Detector$3.MAX_PATTERN_DRIFT) {\n                        previousRowLoc = loc;\n                        skippedRowCount = 0;\n                    }\n                    else {\n                        if (skippedRowCount > Detector$3.SKIPPED_ROW_COUNT_MAX) {\n                            break;\n                        }\n                        else {\n                            skippedRowCount++;\n                        }\n                    }\n                }\n                stopRow -= skippedRowCount + 1;\n                result[2] = new ResultPoint(previousRowLoc[0], stopRow);\n                result[3] = new ResultPoint(previousRowLoc[1], stopRow);\n            }\n            if (stopRow - startRow < Detector$3.BARCODE_MIN_HEIGHT) {\n                Arrays.fill(result, null);\n            }\n            return result;\n        }\n        /**\n         * @param matrix row of black/white values to search\n         * @param column x position to start search\n         * @param row y position to start search\n         * @param width the number of pixels to search on this row\n         * @param pattern pattern of counts of number of black and white pixels that are\n         *                 being searched for as a pattern\n         * @param counters array of counters, as long as pattern, to re-use\n         * @return start/end horizontal offset of guard pattern, as an array of two ints.\n         */\n        static findGuardPattern(matrix, column, row, width, whiteFirst, pattern, counters) {\n            Arrays.fillWithin(counters, 0, counters.length, 0);\n            let patternStart = column;\n            let pixelDrift = 0;\n            // if there are black pixels left of the current pixel shift to the left, but only for MAX_PIXEL_DRIFT pixels\n            while (matrix.get(patternStart, row) && patternStart > 0 && pixelDrift++ < Detector$3.MAX_PIXEL_DRIFT) {\n                patternStart--;\n            }\n            let x = patternStart;\n            let counterPosition = 0;\n            let patternLength = pattern.length;\n            for (let isWhite = whiteFirst; x < width; x++) {\n                let pixel = matrix.get(x, row);\n                if (pixel !== isWhite) {\n                    counters[counterPosition]++;\n                }\n                else {\n                    if (counterPosition === patternLength - 1) {\n                        if (Detector$3.patternMatchVariance(counters, pattern, Detector$3.MAX_INDIVIDUAL_VARIANCE) < Detector$3.MAX_AVG_VARIANCE) {\n                            return new Int32Array([patternStart, x]);\n                        }\n                        patternStart += counters[0] + counters[1];\n                        System.arraycopy(counters, 2, counters, 0, counterPosition - 1);\n                        counters[counterPosition - 1] = 0;\n                        counters[counterPosition] = 0;\n                        counterPosition--;\n                    }\n                    else {\n                        counterPosition++;\n                    }\n                    counters[counterPosition] = 1;\n                    isWhite = !isWhite;\n                }\n            }\n            if (counterPosition === patternLength - 1 &&\n                Detector$3.patternMatchVariance(counters, pattern, Detector$3.MAX_INDIVIDUAL_VARIANCE) < Detector$3.MAX_AVG_VARIANCE) {\n                return new Int32Array([patternStart, x - 1]);\n            }\n            return null;\n        }\n        /**\n         * Determines how closely a set of observed counts of runs of black/white\n         * values matches a given target pattern. This is reported as the ratio of\n         * the total variance from the expected pattern proportions across all\n         * pattern elements, to the length of the pattern.\n         *\n         * @param counters observed counters\n         * @param pattern expected pattern\n         * @param maxIndividualVariance The most any counter can differ before we give up\n         * @return ratio of total variance between counters and pattern compared to total pattern size\n         */\n        static patternMatchVariance(counters, pattern, maxIndividualVariance) {\n            let numCounters = counters.length;\n            let total = 0;\n            let patternLength = 0;\n            for (let i = 0; i < numCounters; i++) {\n                total += counters[i];\n                patternLength += pattern[i];\n            }\n            if (total < patternLength) {\n                // If we don't even have one pixel per unit of bar width, assume this\n                // is too small to reliably match, so fail:\n                return /*Float.POSITIVE_INFINITY*/ Infinity;\n            }\n            // We're going to fake floating-point math in integers. We just need to use more bits.\n            // Scale up patternLength so that intermediate values below like scaledCounter will have\n            // more \"significant digits\".\n            let unitBarWidth = total / patternLength;\n            maxIndividualVariance *= unitBarWidth;\n            let totalVariance = 0.0;\n            for (let x = 0; x < numCounters; x++) {\n                let counter = counters[x];\n                let scaledPattern = pattern[x] * unitBarWidth;\n                let variance = counter > scaledPattern ? counter - scaledPattern : scaledPattern - counter;\n                if (variance > maxIndividualVariance) {\n                    return /*Float.POSITIVE_INFINITY*/ Infinity;\n                }\n                totalVariance += variance;\n            }\n            return totalVariance / total;\n        }\n    }\n    Detector$3.INDEXES_START_PATTERN = Int32Array.from([0, 4, 1, 5]);\n    Detector$3.INDEXES_STOP_PATTERN = Int32Array.from([6, 2, 7, 3]);\n    Detector$3.MAX_AVG_VARIANCE = 0.42;\n    Detector$3.MAX_INDIVIDUAL_VARIANCE = 0.8;\n    // B S B S B S B S Bar/Space pattern\n    // 11111111 0 1 0 1 0 1 000\n    Detector$3.START_PATTERN = Int32Array.from([8, 1, 1, 1, 1, 1, 1, 3]);\n    // 1111111 0 1 000 1 0 1 00 1\n    Detector$3.STOP_PATTERN = Int32Array.from([7, 1, 1, 3, 1, 1, 1, 2, 1]);\n    Detector$3.MAX_PIXEL_DRIFT = 3;\n    Detector$3.MAX_PATTERN_DRIFT = 5;\n    // if we set the value too low, then we don't detect the correct height of the bar if the start patterns are damaged.\n    // if we set the value too high, then we might detect the start pattern from a neighbor barcode.\n    Detector$3.SKIPPED_ROW_COUNT_MAX = 25;\n    // A PDF471 barcode should have at least 3 rows, with each row being >= 3 times the module width. Therefore it should be at least\n    // 9 pixels tall. To be conservative, we use about half the size to ensure we don't miss it.\n    Detector$3.ROW_STEP = 5;\n    Detector$3.BARCODE_MIN_HEIGHT = 10;\n\n    /*\n    * Copyright 2012 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.GenericGFPoly\n     */\n    /*final*/ class ModulusPoly {\n        constructor(field, coefficients) {\n            if (coefficients.length === 0) {\n                throw new IllegalArgumentException();\n            }\n            this.field = field;\n            let coefficientsLength = /*int*/ coefficients.length;\n            if (coefficientsLength > 1 && coefficients[0] === 0) {\n                // Leading term must be non-zero for anything except the constant polynomial \"0\"\n                let firstNonZero = /*int*/ 1;\n                while (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n                    firstNonZero++;\n                }\n                if (firstNonZero === coefficientsLength) {\n                    this.coefficients = new Int32Array([0]);\n                }\n                else {\n                    this.coefficients = new Int32Array(coefficientsLength - firstNonZero);\n                    System.arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);\n                }\n            }\n            else {\n                this.coefficients = coefficients;\n            }\n        }\n        getCoefficients() {\n            return this.coefficients;\n        }\n        /**\n         * @return degree of this polynomial\n         */\n        getDegree() {\n            return this.coefficients.length - 1;\n        }\n        /**\n         * @return true iff this polynomial is the monomial \"0\"\n         */\n        isZero() {\n            return this.coefficients[0] === 0;\n        }\n        /**\n         * @return coefficient of x^degree term in this polynomial\n         */\n        getCoefficient(degree) {\n            return this.coefficients[this.coefficients.length - 1 - degree];\n        }\n        /**\n         * @return evaluation of this polynomial at a given point\n         */\n        evaluateAt(a) {\n            if (a === 0) {\n                // Just return the x^0 coefficient\n                return this.getCoefficient(0);\n            }\n            if (a === 1) {\n                // Just the sum of the coefficients\n                let sum = /*int*/ 0;\n                for (let coefficient /*int*/ of this.coefficients) {\n                    sum = this.field.add(sum, coefficient);\n                }\n                return sum;\n            }\n            let result = /*int*/ this.coefficients[0];\n            let size = /*int*/ this.coefficients.length;\n            for (let i /*int*/ = 1; i < size; i++) {\n                result = this.field.add(this.field.multiply(a, result), this.coefficients[i]);\n            }\n            return result;\n        }\n        add(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (this.isZero()) {\n                return other;\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            let smallerCoefficients = this.coefficients;\n            let largerCoefficients = other.coefficients;\n            if (smallerCoefficients.length > largerCoefficients.length) {\n                let temp = smallerCoefficients;\n                smallerCoefficients = largerCoefficients;\n                largerCoefficients = temp;\n            }\n            let sumDiff = new Int32Array(largerCoefficients.length);\n            let lengthDiff = /*int*/ largerCoefficients.length - smallerCoefficients.length;\n            // Copy high-order terms only found in higher-degree polynomial's coefficients\n            System.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n            for (let i /*int*/ = lengthDiff; i < largerCoefficients.length; i++) {\n                sumDiff[i] = this.field.add(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n            }\n            return new ModulusPoly(this.field, sumDiff);\n        }\n        subtract(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (other.isZero()) {\n                return this;\n            }\n            return this.add(other.negative());\n        }\n        multiply(other) {\n            if (other instanceof ModulusPoly) {\n                return this.multiplyOther(other);\n            }\n            return this.multiplyScalar(other);\n        }\n        multiplyOther(other) {\n            if (!this.field.equals(other.field)) {\n                throw new IllegalArgumentException('ModulusPolys do not have same ModulusGF field');\n            }\n            if (this.isZero() || other.isZero()) {\n                // return this.field.getZero();\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            let aCoefficients = this.coefficients;\n            let aLength = /*int*/ aCoefficients.length;\n            let bCoefficients = other.coefficients;\n            let bLength = /*int*/ bCoefficients.length;\n            let product = new Int32Array(aLength + bLength - 1);\n            for (let i /*int*/ = 0; i < aLength; i++) {\n                let aCoeff = /*int*/ aCoefficients[i];\n                for (let j /*int*/ = 0; j < bLength; j++) {\n                    product[i + j] = this.field.add(product[i + j], this.field.multiply(aCoeff, bCoefficients[j]));\n                }\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        negative() {\n            let size = /*int*/ this.coefficients.length;\n            let negativeCoefficients = new Int32Array(size);\n            for (let i /*int*/ = 0; i < size; i++) {\n                negativeCoefficients[i] = this.field.subtract(0, this.coefficients[i]);\n            }\n            return new ModulusPoly(this.field, negativeCoefficients);\n        }\n        multiplyScalar(scalar) {\n            if (scalar === 0) {\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            if (scalar === 1) {\n                return this;\n            }\n            let size = /*int*/ this.coefficients.length;\n            let product = new Int32Array(size);\n            for (let i /*int*/ = 0; i < size; i++) {\n                product[i] = this.field.multiply(this.coefficients[i], scalar);\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        multiplyByMonomial(degree, coefficient) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return new ModulusPoly(this.field, new Int32Array([0]));\n            }\n            let size = /*int*/ this.coefficients.length;\n            let product = new Int32Array(size + degree);\n            for (let i /*int*/ = 0; i < size; i++) {\n                product[i] = this.field.multiply(this.coefficients[i], coefficient);\n            }\n            return new ModulusPoly(this.field, product);\n        }\n        /*\n        ModulusPoly[] divide(other: ModulusPoly) {\n          if (!field.equals(other.field)) {\n            throw new IllegalArgumentException(\"ModulusPolys do not have same ModulusGF field\");\n          }\n          if (other.isZero()) {\n            throw new IllegalArgumentException(\"Divide by 0\");\n          }\n      \n          let quotient: ModulusPoly = field.getZero();\n          let remainder: ModulusPoly = this;\n      \n          let denominatorLeadingTerm: /*int/ number = other.getCoefficient(other.getDegree());\n          let inverseDenominatorLeadingTerm: /*int/ number = field.inverse(denominatorLeadingTerm);\n      \n          while (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n            let degreeDifference: /*int/ number = remainder.getDegree() - other.getDegree();\n            let scale: /*int/ number = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n            let term: ModulusPoly = other.multiplyByMonomial(degreeDifference, scale);\n            let iterationQuotient: ModulusPoly = field.buildMonomial(degreeDifference, scale);\n            quotient = quotient.add(iterationQuotient);\n            remainder = remainder.subtract(term);\n          }\n      \n          return new ModulusPoly[] { quotient, remainder };\n        }\n        */\n        // @Override\n        toString() {\n            let result = new StringBuilder( /*8 * this.getDegree()*/); // dynamic string size in JS\n            for (let degree /*int*/ = this.getDegree(); degree >= 0; degree--) {\n                let coefficient = /*int*/ this.getCoefficient(degree);\n                if (coefficient !== 0) {\n                    if (coefficient < 0) {\n                        result.append(' - ');\n                        coefficient = -coefficient;\n                    }\n                    else {\n                        if (result.length() > 0) {\n                            result.append(' + ');\n                        }\n                    }\n                    if (degree === 0 || coefficient !== 1) {\n                        result.append(coefficient);\n                    }\n                    if (degree !== 0) {\n                        if (degree === 1) {\n                            result.append('x');\n                        }\n                        else {\n                            result.append('x^');\n                            result.append(degree);\n                        }\n                    }\n                }\n            }\n            return result.toString();\n        }\n    }\n\n    class ModulusBase {\n        add(a, b) {\n            return (a + b) % this.modulus;\n        }\n        subtract(a, b) {\n            return (this.modulus + a - b) % this.modulus;\n        }\n        exp(a) {\n            return this.expTable[a];\n        }\n        log(a) {\n            if (a === 0) {\n                throw new IllegalArgumentException();\n            }\n            return this.logTable[a];\n        }\n        inverse(a) {\n            if (a === 0) {\n                throw new ArithmeticException();\n            }\n            return this.expTable[this.modulus - this.logTable[a] - 1];\n        }\n        multiply(a, b) {\n            if (a === 0 || b === 0) {\n                return 0;\n            }\n            return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n        }\n        getSize() {\n            return this.modulus;\n        }\n        equals(o) {\n            return o === this;\n        }\n    }\n\n    /*\n     * Copyright 2012 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>A field based on powers of a generator integer, modulo some modulus.</p>\n     *\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.GenericGF\n     */\n    /*public final*/ class ModulusGF extends ModulusBase {\n        // private /*final*/ modulus: /*int*/ number;\n        constructor(modulus, generator) {\n            super();\n            this.modulus = modulus;\n            this.expTable = new Int32Array(modulus);\n            this.logTable = new Int32Array(modulus);\n            let x = /*int*/ 1;\n            for (let i /*int*/ = 0; i < modulus; i++) {\n                this.expTable[i] = x;\n                x = (x * generator) % modulus;\n            }\n            for (let i /*int*/ = 0; i < modulus - 1; i++) {\n                this.logTable[this.expTable[i]] = i;\n            }\n            // logTable[0] == 0 but this should never be used\n            this.zero = new ModulusPoly(this, new Int32Array([0]));\n            this.one = new ModulusPoly(this, new Int32Array([1]));\n        }\n        getZero() {\n            return this.zero;\n        }\n        getOne() {\n            return this.one;\n        }\n        buildMonomial(degree, coefficient) {\n            if (degree < 0) {\n                throw new IllegalArgumentException();\n            }\n            if (coefficient === 0) {\n                return this.zero;\n            }\n            let coefficients = new Int32Array(degree + 1);\n            coefficients[0] = coefficient;\n            return new ModulusPoly(this, coefficients);\n        }\n    }\n    ModulusGF.PDF417_GF = new ModulusGF(PDF417Common.NUMBER_OF_CODEWORDS, 3);\n\n    /*\n    * Copyright 2012 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * <p>PDF417 error correction implementation.</p>\n     *\n     * <p>This <a href=\"http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Example\">example</a>\n     * is quite useful in understanding the algorithm.</p>\n     *\n     * @author Sean Owen\n     * @see com.google.zxing.common.reedsolomon.ReedSolomonDecoder\n     */\n    /*public final*/ class ErrorCorrection {\n        constructor() {\n            this.field = ModulusGF.PDF417_GF;\n        }\n        /**\n         * @param received received codewords\n         * @param numECCodewords number of those codewords used for EC\n         * @param erasures location of erasures\n         * @return number of errors\n         * @throws ChecksumException if errors cannot be corrected, maybe because of too many errors\n         */\n        decode(received, numECCodewords, erasures) {\n            let poly = new ModulusPoly(this.field, received);\n            let S = new Int32Array(numECCodewords);\n            let error = false;\n            for (let i /*int*/ = numECCodewords; i > 0; i--) {\n                let evaluation = poly.evaluateAt(this.field.exp(i));\n                S[numECCodewords - i] = evaluation;\n                if (evaluation !== 0) {\n                    error = true;\n                }\n            }\n            if (!error) {\n                return 0;\n            }\n            let knownErrors = this.field.getOne();\n            if (erasures != null) {\n                for (const erasure of erasures) {\n                    let b = this.field.exp(received.length - 1 - erasure);\n                    // Add (1 - bx) term:\n                    let term = new ModulusPoly(this.field, new Int32Array([this.field.subtract(0, b), 1]));\n                    knownErrors = knownErrors.multiply(term);\n                }\n            }\n            let syndrome = new ModulusPoly(this.field, S);\n            // syndrome = syndrome.multiply(knownErrors);\n            let sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(numECCodewords, 1), syndrome, numECCodewords);\n            let sigma = sigmaOmega[0];\n            let omega = sigmaOmega[1];\n            // sigma = sigma.multiply(knownErrors);\n            let errorLocations = this.findErrorLocations(sigma);\n            let errorMagnitudes = this.findErrorMagnitudes(omega, sigma, errorLocations);\n            for (let i /*int*/ = 0; i < errorLocations.length; i++) {\n                let position = received.length - 1 - this.field.log(errorLocations[i]);\n                if (position < 0) {\n                    throw ChecksumException.getChecksumInstance();\n                }\n                received[position] = this.field.subtract(received[position], errorMagnitudes[i]);\n            }\n            return errorLocations.length;\n        }\n        /**\n         *\n         * @param ModulusPoly\n         * @param a\n         * @param ModulusPoly\n         * @param b\n         * @param int\n         * @param R\n         * @throws ChecksumException\n         */\n        runEuclideanAlgorithm(a, b, R) {\n            // Assume a's degree is >= b's\n            if (a.getDegree() < b.getDegree()) {\n                let temp = a;\n                a = b;\n                b = temp;\n            }\n            let rLast = a;\n            let r = b;\n            let tLast = this.field.getZero();\n            let t = this.field.getOne();\n            // Run Euclidean algorithm until r's degree is less than R/2\n            while (r.getDegree() >= Math.round(R / 2)) {\n                let rLastLast = rLast;\n                let tLastLast = tLast;\n                rLast = r;\n                tLast = t;\n                // Divide rLastLast by rLast, with quotient in q and remainder in r\n                if (rLast.isZero()) {\n                    // Oops, Euclidean algorithm already terminated?\n                    throw ChecksumException.getChecksumInstance();\n                }\n                r = rLastLast;\n                let q = this.field.getZero();\n                let denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n                let dltInverse = this.field.inverse(denominatorLeadingTerm);\n                while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n                    let degreeDiff = r.getDegree() - rLast.getDegree();\n                    let scale = this.field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n                    q = q.add(this.field.buildMonomial(degreeDiff, scale));\n                    r = r.subtract(rLast.multiplyByMonomial(degreeDiff, scale));\n                }\n                t = q.multiply(tLast).subtract(tLastLast).negative();\n            }\n            let sigmaTildeAtZero = t.getCoefficient(0);\n            if (sigmaTildeAtZero === 0) {\n                throw ChecksumException.getChecksumInstance();\n            }\n            let inverse = this.field.inverse(sigmaTildeAtZero);\n            let sigma = t.multiply(inverse);\n            let omega = r.multiply(inverse);\n            return [sigma, omega];\n        }\n        /**\n         *\n         * @param errorLocator\n         * @throws ChecksumException\n         */\n        findErrorLocations(errorLocator) {\n            // This is a direct application of Chien's search\n            let numErrors = errorLocator.getDegree();\n            let result = new Int32Array(numErrors);\n            let e = 0;\n            for (let i /*int*/ = 1; i < this.field.getSize() && e < numErrors; i++) {\n                if (errorLocator.evaluateAt(i) === 0) {\n                    result[e] = this.field.inverse(i);\n                    e++;\n                }\n            }\n            if (e !== numErrors) {\n                throw ChecksumException.getChecksumInstance();\n            }\n            return result;\n        }\n        findErrorMagnitudes(errorEvaluator, errorLocator, errorLocations) {\n            let errorLocatorDegree = errorLocator.getDegree();\n            let formalDerivativeCoefficients = new Int32Array(errorLocatorDegree);\n            for (let i /*int*/ = 1; i <= errorLocatorDegree; i++) {\n                formalDerivativeCoefficients[errorLocatorDegree - i] =\n                    this.field.multiply(i, errorLocator.getCoefficient(i));\n            }\n            let formalDerivative = new ModulusPoly(this.field, formalDerivativeCoefficients);\n            // This is directly applying Forney's Formula\n            let s = errorLocations.length;\n            let result = new Int32Array(s);\n            for (let i /*int*/ = 0; i < s; i++) {\n                let xiInverse = this.field.inverse(errorLocations[i]);\n                let numerator = this.field.subtract(0, errorEvaluator.evaluateAt(xiInverse));\n                let denominator = this.field.inverse(formalDerivative.evaluateAt(xiInverse));\n                result[i] = this.field.multiply(numerator, denominator);\n            }\n            return result;\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BoundingBox {\n        constructor(image, topLeft, bottomLeft, topRight, bottomRight) {\n            if (image instanceof BoundingBox) {\n                this.constructor_2(image);\n            }\n            else {\n                this.constructor_1(image, topLeft, bottomLeft, topRight, bottomRight);\n            }\n        }\n        /**\n         *\n         * @param image\n         * @param topLeft\n         * @param bottomLeft\n         * @param topRight\n         * @param bottomRight\n         *\n         * @throws NotFoundException\n         */\n        constructor_1(image, topLeft, bottomLeft, topRight, bottomRight) {\n            const leftUnspecified = topLeft == null || bottomLeft == null;\n            const rightUnspecified = topRight == null || bottomRight == null;\n            if (leftUnspecified && rightUnspecified) {\n                throw new NotFoundException();\n            }\n            if (leftUnspecified) {\n                topLeft = new ResultPoint(0, topRight.getY());\n                bottomLeft = new ResultPoint(0, bottomRight.getY());\n            }\n            else if (rightUnspecified) {\n                topRight = new ResultPoint(image.getWidth() - 1, topLeft.getY());\n                bottomRight = new ResultPoint(image.getWidth() - 1, bottomLeft.getY());\n            }\n            this.image = image;\n            this.topLeft = topLeft;\n            this.bottomLeft = bottomLeft;\n            this.topRight = topRight;\n            this.bottomRight = bottomRight;\n            this.minX = Math.trunc(Math.min(topLeft.getX(), bottomLeft.getX()));\n            this.maxX = Math.trunc(Math.max(topRight.getX(), bottomRight.getX()));\n            this.minY = Math.trunc(Math.min(topLeft.getY(), topRight.getY()));\n            this.maxY = Math.trunc(Math.max(bottomLeft.getY(), bottomRight.getY()));\n        }\n        constructor_2(boundingBox) {\n            this.image = boundingBox.image;\n            this.topLeft = boundingBox.getTopLeft();\n            this.bottomLeft = boundingBox.getBottomLeft();\n            this.topRight = boundingBox.getTopRight();\n            this.bottomRight = boundingBox.getBottomRight();\n            this.minX = boundingBox.getMinX();\n            this.maxX = boundingBox.getMaxX();\n            this.minY = boundingBox.getMinY();\n            this.maxY = boundingBox.getMaxY();\n        }\n        /**\n         * @throws NotFoundException\n         */\n        static merge(leftBox, rightBox) {\n            if (leftBox == null) {\n                return rightBox;\n            }\n            if (rightBox == null) {\n                return leftBox;\n            }\n            return new BoundingBox(leftBox.image, leftBox.topLeft, leftBox.bottomLeft, rightBox.topRight, rightBox.bottomRight);\n        }\n        /**\n         * @throws NotFoundException\n         */\n        addMissingRows(missingStartRows, missingEndRows, isLeft) {\n            let newTopLeft = this.topLeft;\n            let newBottomLeft = this.bottomLeft;\n            let newTopRight = this.topRight;\n            let newBottomRight = this.bottomRight;\n            if (missingStartRows > 0) {\n                let top = isLeft ? this.topLeft : this.topRight;\n                let newMinY = Math.trunc(top.getY() - missingStartRows);\n                if (newMinY < 0) {\n                    newMinY = 0;\n                }\n                let newTop = new ResultPoint(top.getX(), newMinY);\n                if (isLeft) {\n                    newTopLeft = newTop;\n                }\n                else {\n                    newTopRight = newTop;\n                }\n            }\n            if (missingEndRows > 0) {\n                let bottom = isLeft ? this.bottomLeft : this.bottomRight;\n                let newMaxY = Math.trunc(bottom.getY() + missingEndRows);\n                if (newMaxY >= this.image.getHeight()) {\n                    newMaxY = this.image.getHeight() - 1;\n                }\n                let newBottom = new ResultPoint(bottom.getX(), newMaxY);\n                if (isLeft) {\n                    newBottomLeft = newBottom;\n                }\n                else {\n                    newBottomRight = newBottom;\n                }\n            }\n            return new BoundingBox(this.image, newTopLeft, newBottomLeft, newTopRight, newBottomRight);\n        }\n        getMinX() {\n            return this.minX;\n        }\n        getMaxX() {\n            return this.maxX;\n        }\n        getMinY() {\n            return this.minY;\n        }\n        getMaxY() {\n            return this.maxY;\n        }\n        getTopLeft() {\n            return this.topLeft;\n        }\n        getTopRight() {\n            return this.topRight;\n        }\n        getBottomLeft() {\n            return this.bottomLeft;\n        }\n        getBottomRight() {\n            return this.bottomRight;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417.decoder;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BarcodeMetadata {\n        constructor(columnCount, rowCountUpperPart, rowCountLowerPart, errorCorrectionLevel) {\n            this.columnCount = columnCount;\n            this.errorCorrectionLevel = errorCorrectionLevel;\n            this.rowCountUpperPart = rowCountUpperPart;\n            this.rowCountLowerPart = rowCountLowerPart;\n            this.rowCount = rowCountUpperPart + rowCountLowerPart;\n        }\n        getColumnCount() {\n            return this.columnCount;\n        }\n        getErrorCorrectionLevel() {\n            return this.errorCorrectionLevel;\n        }\n        getRowCount() {\n            return this.rowCount;\n        }\n        getRowCountUpperPart() {\n            return this.rowCountUpperPart;\n        }\n        getRowCountLowerPart() {\n            return this.rowCountLowerPart;\n        }\n    }\n\n    /**\n     * Java Formatter class polyfill that works in the JS way.\n     */\n    class Formatter {\n        constructor() {\n            this.buffer = '';\n        }\n        /**\n         *\n         * @see https://stackoverflow.com/a/13439711/4367683\n         *\n         * @param str\n         * @param arr\n         */\n        static form(str, arr) {\n            let i = -1;\n            function callback(exp, p0, p1, p2, p3, p4) {\n                if (exp === '%%')\n                    return '%';\n                if (arr[++i] === undefined)\n                    return undefined;\n                exp = p2 ? parseInt(p2.substr(1)) : undefined;\n                let base = p3 ? parseInt(p3.substr(1)) : undefined;\n                let val;\n                switch (p4) {\n                    case 's':\n                        val = arr[i];\n                        break;\n                    case 'c':\n                        val = arr[i][0];\n                        break;\n                    case 'f':\n                        val = parseFloat(arr[i]).toFixed(exp);\n                        break;\n                    case 'p':\n                        val = parseFloat(arr[i]).toPrecision(exp);\n                        break;\n                    case 'e':\n                        val = parseFloat(arr[i]).toExponential(exp);\n                        break;\n                    case 'x':\n                        val = parseInt(arr[i]).toString(base ? base : 16);\n                        break;\n                    case 'd':\n                        val = parseFloat(parseInt(arr[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n                        break;\n                }\n                val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n                let size = parseInt(p1); /* padding size */\n                let ch = p1 && (p1[0] + '') === '0' ? '0' : ' '; /* isnull? */\n                while (val.length < size)\n                    val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n                return val;\n            }\n            let regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n            return str.replace(regex, callback);\n        }\n        /**\n         *\n         * @param append The new string to append.\n         * @param args Argumets values to be formated.\n         */\n        format(append, ...args) {\n            this.buffer += Formatter.form(append, args);\n        }\n        /**\n         * Returns the Formatter string value.\n         */\n        toString() {\n            return this.buffer;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    class DetectionResultColumn {\n        constructor(boundingBox) {\n            this.boundingBox = new BoundingBox(boundingBox);\n            // this.codewords = new Codeword[boundingBox.getMaxY() - boundingBox.getMinY() + 1];\n            this.codewords = new Array(boundingBox.getMaxY() - boundingBox.getMinY() + 1);\n        }\n        /*final*/ getCodewordNearby(imageRow) {\n            let codeword = this.getCodeword(imageRow);\n            if (codeword != null) {\n                return codeword;\n            }\n            for (let i = 1; i < DetectionResultColumn.MAX_NEARBY_DISTANCE; i++) {\n                let nearImageRow = this.imageRowToCodewordIndex(imageRow) - i;\n                if (nearImageRow >= 0) {\n                    codeword = this.codewords[nearImageRow];\n                    if (codeword != null) {\n                        return codeword;\n                    }\n                }\n                nearImageRow = this.imageRowToCodewordIndex(imageRow) + i;\n                if (nearImageRow < this.codewords.length) {\n                    codeword = this.codewords[nearImageRow];\n                    if (codeword != null) {\n                        return codeword;\n                    }\n                }\n            }\n            return null;\n        }\n        /*final int*/ imageRowToCodewordIndex(imageRow) {\n            return imageRow - this.boundingBox.getMinY();\n        }\n        /*final void*/ setCodeword(imageRow, codeword) {\n            this.codewords[this.imageRowToCodewordIndex(imageRow)] = codeword;\n        }\n        /*final*/ getCodeword(imageRow) {\n            return this.codewords[this.imageRowToCodewordIndex(imageRow)];\n        }\n        /*final*/ getBoundingBox() {\n            return this.boundingBox;\n        }\n        /*final*/ getCodewords() {\n            return this.codewords;\n        }\n        // @Override\n        toString() {\n            const formatter = new Formatter();\n            let row = 0;\n            for (const codeword of this.codewords) {\n                if (codeword == null) {\n                    formatter.format('%3d:    |   %n', row++);\n                    continue;\n                }\n                formatter.format('%3d: %3d|%3d%n', row++, codeword.getRowNumber(), codeword.getValue());\n            }\n            return formatter.toString();\n        }\n    }\n    DetectionResultColumn.MAX_NEARBY_DISTANCE = 5;\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.ArrayList;\n    // import java.util.Collection;\n    // import java.util.HashMap;\n    // import java.util.Map;\n    // import java.util.Map.Entry;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class BarcodeValue {\n        constructor() {\n            this.values = new Map();\n        }\n        /**\n         * Add an occurrence of a value\n         */\n        setValue(value) {\n            value = Math.trunc(value);\n            let confidence = this.values.get(value);\n            if (confidence == null) {\n                confidence = 0;\n            }\n            confidence++;\n            this.values.set(value, confidence);\n        }\n        /**\n         * Determines the maximum occurrence of a set value and returns all values which were set with this occurrence.\n         * @return an array of int, containing the values with the highest occurrence, or null, if no value was set\n         */\n        getValue() {\n            let maxConfidence = -1;\n            let result = new Array();\n            for (const [key, value] of this.values.entries()) {\n                const entry = {\n                    getKey: () => key,\n                    getValue: () => value,\n                };\n                if (entry.getValue() > maxConfidence) {\n                    maxConfidence = entry.getValue();\n                    result = [];\n                    result.push(entry.getKey());\n                }\n                else if (entry.getValue() === maxConfidence) {\n                    result.push(entry.getKey());\n                }\n            }\n            return PDF417Common.toIntArray(result);\n        }\n        getConfidence(value) {\n            return this.values.get(value);\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class DetectionResultRowIndicatorColumn extends DetectionResultColumn {\n        constructor(boundingBox, isLeft) {\n            super(boundingBox);\n            this._isLeft = isLeft;\n        }\n        setRowNumbers() {\n            for (let codeword /*Codeword*/ of this.getCodewords()) {\n                if (codeword != null) {\n                    codeword.setRowNumberAsRowIndicatorColumn();\n                }\n            }\n        }\n        // TODO implement properly\n        // TODO maybe we should add missing codewords to store the correct row number to make\n        // finding row numbers for other columns easier\n        // use row height count to make detection of invalid row numbers more reliable\n        adjustCompleteIndicatorColumnRowNumbers(barcodeMetadata) {\n            let codewords = this.getCodewords();\n            this.setRowNumbers();\n            this.removeIncorrectCodewords(codewords, barcodeMetadata);\n            let boundingBox = this.getBoundingBox();\n            let top = this._isLeft ? boundingBox.getTopLeft() : boundingBox.getTopRight();\n            let bottom = this._isLeft ? boundingBox.getBottomLeft() : boundingBox.getBottomRight();\n            let firstRow = this.imageRowToCodewordIndex(Math.trunc(top.getY()));\n            let lastRow = this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));\n            // We need to be careful using the average row height. Barcode could be skewed so that we have smaller and\n            // taller rows\n            // float averageRowHeight = (lastRow - firstRow) / /*(float)*/ barcodeMetadata.getRowCount();\n            let barcodeRow = -1;\n            let maxRowHeight = 1;\n            let currentRowHeight = 0;\n            for (let codewordsRow /*int*/ = firstRow; codewordsRow < lastRow; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let codeword = codewords[codewordsRow];\n                //      float expectedRowNumber = (codewordsRow - firstRow) / averageRowHeight;\n                //      if (Math.abs(codeword.getRowNumber() - expectedRowNumber) > 2) {\n                //        SimpleLog.log(LEVEL.WARNING,\n                //            \"Removing codeword, rowNumberSkew too high, codeword[\" + codewordsRow + \"]: Expected Row: \" +\n                //                expectedRowNumber + \", RealRow: \" + codeword.getRowNumber() + \", value: \" + codeword.getValue());\n                //        codewords[codewordsRow] = null;\n                //      }\n                let rowDifference = codeword.getRowNumber() - barcodeRow;\n                // TODO improve handling with case where first row indicator doesn't start with 0\n                if (rowDifference === 0) {\n                    currentRowHeight++;\n                }\n                else if (rowDifference === 1) {\n                    maxRowHeight = Math.max(maxRowHeight, currentRowHeight);\n                    currentRowHeight = 1;\n                    barcodeRow = codeword.getRowNumber();\n                }\n                else if (rowDifference < 0 ||\n                    codeword.getRowNumber() >= barcodeMetadata.getRowCount() ||\n                    rowDifference > codewordsRow) {\n                    codewords[codewordsRow] = null;\n                }\n                else {\n                    let checkedRows;\n                    if (maxRowHeight > 2) {\n                        checkedRows = (maxRowHeight - 2) * rowDifference;\n                    }\n                    else {\n                        checkedRows = rowDifference;\n                    }\n                    let closePreviousCodewordFound = checkedRows >= codewordsRow;\n                    for (let i /*int*/ = 1; i <= checkedRows && !closePreviousCodewordFound; i++) {\n                        // there must be (height * rowDifference) number of codewords missing. For now we assume height = 1.\n                        // This should hopefully get rid of most problems already.\n                        closePreviousCodewordFound = codewords[codewordsRow - i] != null;\n                    }\n                    if (closePreviousCodewordFound) {\n                        codewords[codewordsRow] = null;\n                    }\n                    else {\n                        barcodeRow = codeword.getRowNumber();\n                        currentRowHeight = 1;\n                    }\n                }\n            }\n            // return (int) (averageRowHeight + 0.5);\n        }\n        getRowHeights() {\n            let barcodeMetadata = this.getBarcodeMetadata();\n            if (barcodeMetadata == null) {\n                return null;\n            }\n            this.adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata);\n            let result = new Int32Array(barcodeMetadata.getRowCount());\n            for (let codeword /*Codeword*/ of this.getCodewords()) {\n                if (codeword != null) {\n                    let rowNumber = codeword.getRowNumber();\n                    if (rowNumber >= result.length) {\n                        // We have more rows than the barcode metadata allows for, ignore them.\n                        continue;\n                    }\n                    result[rowNumber]++;\n                } // else throw exception?\n            }\n            return result;\n        }\n        // TODO maybe we should add missing codewords to store the correct row number to make\n        // finding row numbers for other columns easier\n        // use row height count to make detection of invalid row numbers more reliable\n        adjustIncompleteIndicatorColumnRowNumbers(barcodeMetadata) {\n            let boundingBox = this.getBoundingBox();\n            let top = this._isLeft ? boundingBox.getTopLeft() : boundingBox.getTopRight();\n            let bottom = this._isLeft ? boundingBox.getBottomLeft() : boundingBox.getBottomRight();\n            let firstRow = this.imageRowToCodewordIndex(Math.trunc(top.getY()));\n            let lastRow = this.imageRowToCodewordIndex(Math.trunc(bottom.getY()));\n            // float averageRowHeight = (lastRow - firstRow) / /*(float)*/ barcodeMetadata.getRowCount();\n            let codewords = this.getCodewords();\n            let barcodeRow = -1;\n            for (let codewordsRow /*int*/ = firstRow; codewordsRow < lastRow; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let codeword = codewords[codewordsRow];\n                codeword.setRowNumberAsRowIndicatorColumn();\n                let rowDifference = codeword.getRowNumber() - barcodeRow;\n                // TODO improve handling with case where first row indicator doesn't start with 0\n                if (rowDifference === 0) ;\n                else if (rowDifference === 1) {\n                    barcodeRow = codeword.getRowNumber();\n                }\n                else if (codeword.getRowNumber() >= barcodeMetadata.getRowCount()) {\n                    codewords[codewordsRow] = null;\n                }\n                else {\n                    barcodeRow = codeword.getRowNumber();\n                }\n            }\n            // return (int) (averageRowHeight + 0.5);\n        }\n        getBarcodeMetadata() {\n            let codewords = this.getCodewords();\n            let barcodeColumnCount = new BarcodeValue();\n            let barcodeRowCountUpperPart = new BarcodeValue();\n            let barcodeRowCountLowerPart = new BarcodeValue();\n            let barcodeECLevel = new BarcodeValue();\n            for (let codeword /*Codeword*/ of codewords) {\n                if (codeword == null) {\n                    continue;\n                }\n                codeword.setRowNumberAsRowIndicatorColumn();\n                let rowIndicatorValue = codeword.getValue() % 30;\n                let codewordRowNumber = codeword.getRowNumber();\n                if (!this._isLeft) {\n                    codewordRowNumber += 2;\n                }\n                switch (codewordRowNumber % 3) {\n                    case 0:\n                        barcodeRowCountUpperPart.setValue(rowIndicatorValue * 3 + 1);\n                        break;\n                    case 1:\n                        barcodeECLevel.setValue(rowIndicatorValue / 3);\n                        barcodeRowCountLowerPart.setValue(rowIndicatorValue % 3);\n                        break;\n                    case 2:\n                        barcodeColumnCount.setValue(rowIndicatorValue + 1);\n                        break;\n                }\n            }\n            // Maybe we should check if we have ambiguous values?\n            if ((barcodeColumnCount.getValue().length === 0) ||\n                (barcodeRowCountUpperPart.getValue().length === 0) ||\n                (barcodeRowCountLowerPart.getValue().length === 0) ||\n                (barcodeECLevel.getValue().length === 0) ||\n                barcodeColumnCount.getValue()[0] < 1 ||\n                barcodeRowCountUpperPart.getValue()[0] + barcodeRowCountLowerPart.getValue()[0] < PDF417Common.MIN_ROWS_IN_BARCODE ||\n                barcodeRowCountUpperPart.getValue()[0] + barcodeRowCountLowerPart.getValue()[0] > PDF417Common.MAX_ROWS_IN_BARCODE) {\n                return null;\n            }\n            let barcodeMetadata = new BarcodeMetadata(barcodeColumnCount.getValue()[0], barcodeRowCountUpperPart.getValue()[0], barcodeRowCountLowerPart.getValue()[0], barcodeECLevel.getValue()[0]);\n            this.removeIncorrectCodewords(codewords, barcodeMetadata);\n            return barcodeMetadata;\n        }\n        removeIncorrectCodewords(codewords, barcodeMetadata) {\n            // Remove codewords which do not match the metadata\n            // TODO Maybe we should keep the incorrect codewords for the start and end positions?\n            for (let codewordRow /*int*/ = 0; codewordRow < codewords.length; codewordRow++) {\n                let codeword = codewords[codewordRow];\n                if (codewords[codewordRow] == null) {\n                    continue;\n                }\n                let rowIndicatorValue = codeword.getValue() % 30;\n                let codewordRowNumber = codeword.getRowNumber();\n                if (codewordRowNumber > barcodeMetadata.getRowCount()) {\n                    codewords[codewordRow] = null;\n                    continue;\n                }\n                if (!this._isLeft) {\n                    codewordRowNumber += 2;\n                }\n                switch (codewordRowNumber % 3) {\n                    case 0:\n                        if (rowIndicatorValue * 3 + 1 !== barcodeMetadata.getRowCountUpperPart()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                    case 1:\n                        if (Math.trunc(rowIndicatorValue / 3) !== barcodeMetadata.getErrorCorrectionLevel() ||\n                            rowIndicatorValue % 3 !== barcodeMetadata.getRowCountLowerPart()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                    case 2:\n                        if (rowIndicatorValue + 1 !== barcodeMetadata.getColumnCount()) {\n                            codewords[codewordRow] = null;\n                        }\n                        break;\n                }\n            }\n        }\n        isLeft() {\n            return this._isLeft;\n        }\n        // @Override\n        toString() {\n            return 'IsLeft: ' + this._isLeft + '\\n' + super.toString();\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class DetectionResult {\n        constructor(barcodeMetadata, boundingBox) {\n            /*final*/ this.ADJUST_ROW_NUMBER_SKIP = 2;\n            this.barcodeMetadata = barcodeMetadata;\n            this.barcodeColumnCount = barcodeMetadata.getColumnCount();\n            this.boundingBox = boundingBox;\n            // this.detectionResultColumns = new DetectionResultColumn[this.barcodeColumnCount + 2];\n            this.detectionResultColumns = new Array(this.barcodeColumnCount + 2);\n        }\n        getDetectionResultColumns() {\n            this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[0]);\n            this.adjustIndicatorColumnRowNumbers(this.detectionResultColumns[this.barcodeColumnCount + 1]);\n            let unadjustedCodewordCount = PDF417Common.MAX_CODEWORDS_IN_BARCODE;\n            let previousUnadjustedCount;\n            do {\n                previousUnadjustedCount = unadjustedCodewordCount;\n                unadjustedCodewordCount = this.adjustRowNumbersAndGetCount();\n            } while (unadjustedCodewordCount > 0 && unadjustedCodewordCount < previousUnadjustedCount);\n            return this.detectionResultColumns;\n        }\n        adjustIndicatorColumnRowNumbers(detectionResultColumn) {\n            if (detectionResultColumn != null) {\n                detectionResultColumn\n                    .adjustCompleteIndicatorColumnRowNumbers(this.barcodeMetadata);\n            }\n        }\n        // TODO ensure that no detected codewords with unknown row number are left\n        // we should be able to estimate the row height and use it as a hint for the row number\n        // we should also fill the rows top to bottom and bottom to top\n        /**\n         * @return number of codewords which don't have a valid row number. Note that the count is not accurate as codewords\n         * will be counted several times. It just serves as an indicator to see when we can stop adjusting row numbers\n         */\n        adjustRowNumbersAndGetCount() {\n            let unadjustedCount = this.adjustRowNumbersByRow();\n            if (unadjustedCount === 0) {\n                return 0;\n            }\n            for (let barcodeColumn /*int*/ = 1; barcodeColumn < this.barcodeColumnCount + 1; barcodeColumn++) {\n                let codewords = this.detectionResultColumns[barcodeColumn].getCodewords();\n                for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                    if (codewords[codewordsRow] == null) {\n                        continue;\n                    }\n                    if (!codewords[codewordsRow].hasValidRowNumber()) {\n                        this.adjustRowNumbers(barcodeColumn, codewordsRow, codewords);\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        adjustRowNumbersByRow() {\n            this.adjustRowNumbersFromBothRI();\n            // TODO we should only do full row adjustments if row numbers of left and right row indicator column match.\n            // Maybe it's even better to calculated the height (rows: d) and divide it by the number of barcode\n            // rows. This, together with the LRI and RRI row numbers should allow us to get a good estimate where a row\n            // number starts and ends.\n            let unadjustedCount = this.adjustRowNumbersFromLRI();\n            return unadjustedCount + this.adjustRowNumbersFromRRI();\n        }\n        adjustRowNumbersFromBothRI() {\n            if (this.detectionResultColumns[0] == null || this.detectionResultColumns[this.barcodeColumnCount + 1] == null) {\n                return;\n            }\n            let LRIcodewords = this.detectionResultColumns[0].getCodewords();\n            let RRIcodewords = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < LRIcodewords.length; codewordsRow++) {\n                if (LRIcodewords[codewordsRow] != null &&\n                    RRIcodewords[codewordsRow] != null &&\n                    LRIcodewords[codewordsRow].getRowNumber() === RRIcodewords[codewordsRow].getRowNumber()) {\n                    for (let barcodeColumn /*int*/ = 1; barcodeColumn <= this.barcodeColumnCount; barcodeColumn++) {\n                        let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                        if (codeword == null) {\n                            continue;\n                        }\n                        codeword.setRowNumber(LRIcodewords[codewordsRow].getRowNumber());\n                        if (!codeword.hasValidRowNumber()) {\n                            this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow] = null;\n                        }\n                    }\n                }\n            }\n        }\n        adjustRowNumbersFromRRI() {\n            if (this.detectionResultColumns[this.barcodeColumnCount + 1] == null) {\n                return 0;\n            }\n            let unadjustedCount = 0;\n            let codewords = this.detectionResultColumns[this.barcodeColumnCount + 1].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let rowIndicatorRowNumber = codewords[codewordsRow].getRowNumber();\n                let invalidRowCounts = 0;\n                for (let barcodeColumn /*int*/ = this.barcodeColumnCount + 1; barcodeColumn > 0 && invalidRowCounts < this.ADJUST_ROW_NUMBER_SKIP; barcodeColumn--) {\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword != null) {\n                        invalidRowCounts = DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword);\n                        if (!codeword.hasValidRowNumber()) {\n                            unadjustedCount++;\n                        }\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        adjustRowNumbersFromLRI() {\n            if (this.detectionResultColumns[0] == null) {\n                return 0;\n            }\n            let unadjustedCount = 0;\n            let codewords = this.detectionResultColumns[0].getCodewords();\n            for (let codewordsRow /*int*/ = 0; codewordsRow < codewords.length; codewordsRow++) {\n                if (codewords[codewordsRow] == null) {\n                    continue;\n                }\n                let rowIndicatorRowNumber = codewords[codewordsRow].getRowNumber();\n                let invalidRowCounts = 0;\n                for (let barcodeColumn /*int*/ = 1; barcodeColumn < this.barcodeColumnCount + 1 && invalidRowCounts < this.ADJUST_ROW_NUMBER_SKIP; barcodeColumn++) {\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword != null) {\n                        invalidRowCounts = DetectionResult.adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword);\n                        if (!codeword.hasValidRowNumber()) {\n                            unadjustedCount++;\n                        }\n                    }\n                }\n            }\n            return unadjustedCount;\n        }\n        static adjustRowNumberIfValid(rowIndicatorRowNumber, invalidRowCounts, codeword) {\n            if (codeword == null) {\n                return invalidRowCounts;\n            }\n            if (!codeword.hasValidRowNumber()) {\n                if (codeword.isValidRowNumber(rowIndicatorRowNumber)) {\n                    codeword.setRowNumber(rowIndicatorRowNumber);\n                    invalidRowCounts = 0;\n                }\n                else {\n                    ++invalidRowCounts;\n                }\n            }\n            return invalidRowCounts;\n        }\n        adjustRowNumbers(barcodeColumn, codewordsRow, codewords) {\n            let codeword = codewords[codewordsRow];\n            let previousColumnCodewords = this.detectionResultColumns[barcodeColumn - 1].getCodewords();\n            let nextColumnCodewords = previousColumnCodewords;\n            if (this.detectionResultColumns[barcodeColumn + 1] != null) {\n                nextColumnCodewords = this.detectionResultColumns[barcodeColumn + 1].getCodewords();\n            }\n            // let otherCodewords: Codeword[] = new Codeword[14];\n            let otherCodewords = new Array(14);\n            otherCodewords[2] = previousColumnCodewords[codewordsRow];\n            otherCodewords[3] = nextColumnCodewords[codewordsRow];\n            if (codewordsRow > 0) {\n                otherCodewords[0] = codewords[codewordsRow - 1];\n                otherCodewords[4] = previousColumnCodewords[codewordsRow - 1];\n                otherCodewords[5] = nextColumnCodewords[codewordsRow - 1];\n            }\n            if (codewordsRow > 1) {\n                otherCodewords[8] = codewords[codewordsRow - 2];\n                otherCodewords[10] = previousColumnCodewords[codewordsRow - 2];\n                otherCodewords[11] = nextColumnCodewords[codewordsRow - 2];\n            }\n            if (codewordsRow < codewords.length - 1) {\n                otherCodewords[1] = codewords[codewordsRow + 1];\n                otherCodewords[6] = previousColumnCodewords[codewordsRow + 1];\n                otherCodewords[7] = nextColumnCodewords[codewordsRow + 1];\n            }\n            if (codewordsRow < codewords.length - 2) {\n                otherCodewords[9] = codewords[codewordsRow + 2];\n                otherCodewords[12] = previousColumnCodewords[codewordsRow + 2];\n                otherCodewords[13] = nextColumnCodewords[codewordsRow + 2];\n            }\n            for (let otherCodeword of otherCodewords) {\n                if (DetectionResult.adjustRowNumber(codeword, otherCodeword)) {\n                    return;\n                }\n            }\n        }\n        /**\n         * @return true, if row number was adjusted, false otherwise\n         */\n        static adjustRowNumber(codeword, otherCodeword) {\n            if (otherCodeword == null) {\n                return false;\n            }\n            if (otherCodeword.hasValidRowNumber() && otherCodeword.getBucket() === codeword.getBucket()) {\n                codeword.setRowNumber(otherCodeword.getRowNumber());\n                return true;\n            }\n            return false;\n        }\n        getBarcodeColumnCount() {\n            return this.barcodeColumnCount;\n        }\n        getBarcodeRowCount() {\n            return this.barcodeMetadata.getRowCount();\n        }\n        getBarcodeECLevel() {\n            return this.barcodeMetadata.getErrorCorrectionLevel();\n        }\n        setBoundingBox(boundingBox) {\n            this.boundingBox = boundingBox;\n        }\n        getBoundingBox() {\n            return this.boundingBox;\n        }\n        setDetectionResultColumn(barcodeColumn, detectionResultColumn) {\n            this.detectionResultColumns[barcodeColumn] = detectionResultColumn;\n        }\n        getDetectionResultColumn(barcodeColumn) {\n            return this.detectionResultColumns[barcodeColumn];\n        }\n        // @Override\n        toString() {\n            let rowIndicatorColumn = this.detectionResultColumns[0];\n            if (rowIndicatorColumn == null) {\n                rowIndicatorColumn = this.detectionResultColumns[this.barcodeColumnCount + 1];\n            }\n            // try (\n            let formatter = new Formatter();\n            // ) {\n            for (let codewordsRow /*int*/ = 0; codewordsRow < rowIndicatorColumn.getCodewords().length; codewordsRow++) {\n                formatter.format('CW %3d:', codewordsRow);\n                for (let barcodeColumn /*int*/ = 0; barcodeColumn < this.barcodeColumnCount + 2; barcodeColumn++) {\n                    if (this.detectionResultColumns[barcodeColumn] == null) {\n                        formatter.format('    |   ');\n                        continue;\n                    }\n                    let codeword = this.detectionResultColumns[barcodeColumn].getCodewords()[codewordsRow];\n                    if (codeword == null) {\n                        formatter.format('    |   ');\n                        continue;\n                    }\n                    formatter.format(' %3d|%3d', codeword.getRowNumber(), codeword.getValue());\n                }\n                formatter.format('%n');\n            }\n            return formatter.toString();\n            // }\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417.decoder;\n    /**\n     * @author Guenther Grau\n     */\n    /*final*/ class Codeword {\n        constructor(startX, endX, bucket, value) {\n            this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n            this.startX = Math.trunc(startX);\n            this.endX = Math.trunc(endX);\n            this.bucket = Math.trunc(bucket);\n            this.value = Math.trunc(value);\n        }\n        hasValidRowNumber() {\n            return this.isValidRowNumber(this.rowNumber);\n        }\n        isValidRowNumber(rowNumber) {\n            return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === (rowNumber % 3) * 3;\n        }\n        setRowNumberAsRowIndicatorColumn() {\n            this.rowNumber = Math.trunc((Math.trunc(this.value / 30)) * 3 + Math.trunc(this.bucket / 3));\n        }\n        getWidth() {\n            return this.endX - this.startX;\n        }\n        getStartX() {\n            return this.startX;\n        }\n        getEndX() {\n            return this.endX;\n        }\n        getBucket() {\n            return this.bucket;\n        }\n        getValue() {\n            return this.value;\n        }\n        getRowNumber() {\n            return this.rowNumber;\n        }\n        setRowNumber(rowNumber) {\n            this.rowNumber = rowNumber;\n        }\n        //   @Override\n        toString() {\n            return this.rowNumber + '|' + this.value;\n        }\n    }\n    Codeword.BARCODE_ROW_UNKNOWN = -1;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * @author Guenther Grau\n     * @author creatale GmbH (christoph.schulz@creatale.de)\n     */\n    /*final*/ class PDF417CodewordDecoder {\n        /* @note\n         * this action have to be performed before first use of class\n         * - static constructor\n         * working with 32bit float (based from Java logic)\n        */\n        static initialize() {\n            // Pre-computes the symbol ratio table.\n            for ( /*int*/let i = 0; i < PDF417Common.SYMBOL_TABLE.length; i++) {\n                let currentSymbol = PDF417Common.SYMBOL_TABLE[i];\n                let currentBit = currentSymbol & 0x1;\n                for ( /*int*/let j = 0; j < PDF417Common.BARS_IN_MODULE; j++) {\n                    let size = 0.0;\n                    while ((currentSymbol & 0x1) === currentBit) {\n                        size += 1.0;\n                        currentSymbol >>= 1;\n                    }\n                    currentBit = currentSymbol & 0x1;\n                    if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n                        PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common.BARS_IN_MODULE);\n                    }\n                    PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common.MODULES_IN_CODEWORD);\n                }\n            }\n            this.bSymbolTableReady = true;\n        }\n        static getDecodedValue(moduleBitCount) {\n            let decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n            if (decodedValue !== -1) {\n                return decodedValue;\n            }\n            return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n        }\n        static sampleBitCounts(moduleBitCount) {\n            let bitCountSum = MathUtils.sum(moduleBitCount);\n            let result = new Int32Array(PDF417Common.BARS_IN_MODULE);\n            let bitCountIndex = 0;\n            let sumPreviousBits = 0;\n            for ( /*int*/let i = 0; i < PDF417Common.MODULES_IN_CODEWORD; i++) {\n                let sampleIndex = bitCountSum / (2 * PDF417Common.MODULES_IN_CODEWORD) +\n                    (i * bitCountSum) / PDF417Common.MODULES_IN_CODEWORD;\n                if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n                    sumPreviousBits += moduleBitCount[bitCountIndex];\n                    bitCountIndex++;\n                }\n                result[bitCountIndex]++;\n            }\n            return result;\n        }\n        static getDecodedCodewordValue(moduleBitCount) {\n            let decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n            return PDF417Common.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n        }\n        static getBitValue(moduleBitCount) {\n            let result = /*long*/ 0;\n            for (let /*int*/ i = 0; i < moduleBitCount.length; i++) {\n                for ( /*int*/let bit = 0; bit < moduleBitCount[i]; bit++) {\n                    result = (result << 1) | (i % 2 === 0 ? 1 : 0);\n                }\n            }\n            return Math.trunc(result);\n        }\n        // working with 32bit float (as in Java)\n        static getClosestDecodedValue(moduleBitCount) {\n            let bitCountSum = MathUtils.sum(moduleBitCount);\n            let bitCountRatios = new Array(PDF417Common.BARS_IN_MODULE);\n            if (bitCountSum > 1) {\n                for (let /*int*/ i = 0; i < bitCountRatios.length; i++) {\n                    bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n                }\n            }\n            let bestMatchError = Float.MAX_VALUE;\n            let bestMatch = -1;\n            if (!this.bSymbolTableReady) {\n                PDF417CodewordDecoder.initialize();\n            }\n            for ( /*int*/let j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n                let error = 0.0;\n                let ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n                for ( /*int*/let k = 0; k < PDF417Common.BARS_IN_MODULE; k++) {\n                    let diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n                    error += Math.fround(diff * diff);\n                    if (error >= bestMatchError) {\n                        break;\n                    }\n                }\n                if (error < bestMatchError) {\n                    bestMatchError = error;\n                    bestMatch = PDF417Common.SYMBOL_TABLE[j];\n                }\n            }\n            return bestMatch;\n        }\n    }\n    // flag that the table is ready for use\n    PDF417CodewordDecoder.bSymbolTableReady = false;\n    PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common.SYMBOL_TABLE.length).map(x => x = new Array(PDF417Common.BARS_IN_MODULE));\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.pdf417;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417ResultMetadata {\n        constructor() {\n            this.segmentCount = -1;\n            this.fileSize = -1;\n            this.timestamp = -1;\n            this.checksum = -1;\n        }\n        /**\n         * The Segment ID represents the segment of the whole file distributed over different symbols.\n         *\n         * @return File segment index\n         */\n        getSegmentIndex() {\n            return this.segmentIndex;\n        }\n        setSegmentIndex(segmentIndex) {\n            this.segmentIndex = segmentIndex;\n        }\n        /**\n         * Is the same for each related PDF417 symbol\n         *\n         * @return File ID\n         */\n        getFileId() {\n            return this.fileId;\n        }\n        setFileId(fileId) {\n            this.fileId = fileId;\n        }\n        /**\n         * @return always null\n         * @deprecated use dedicated already parsed fields\n         */\n        //   @Deprecated\n        getOptionalData() {\n            return this.optionalData;\n        }\n        /**\n         * @param optionalData old optional data format as int array\n         * @deprecated parse and use new fields\n         */\n        //   @Deprecated\n        setOptionalData(optionalData) {\n            this.optionalData = optionalData;\n        }\n        /**\n         * @return true if it is the last segment\n         */\n        isLastSegment() {\n            return this.lastSegment;\n        }\n        setLastSegment(lastSegment) {\n            this.lastSegment = lastSegment;\n        }\n        /**\n         * @return count of segments, -1 if not set\n         */\n        getSegmentCount() {\n            return this.segmentCount;\n        }\n        setSegmentCount(segmentCount /*int*/) {\n            this.segmentCount = segmentCount;\n        }\n        getSender() {\n            return this.sender || null;\n        }\n        setSender(sender) {\n            this.sender = sender;\n        }\n        getAddressee() {\n            return this.addressee || null;\n        }\n        setAddressee(addressee) {\n            this.addressee = addressee;\n        }\n        /**\n         * Filename of the encoded file\n         *\n         * @return filename\n         */\n        getFileName() {\n            return this.fileName;\n        }\n        setFileName(fileName) {\n            this.fileName = fileName;\n        }\n        /**\n         * filesize in bytes of the encoded file\n         *\n         * @return filesize in bytes, -1 if not set\n         */\n        getFileSize() {\n            return this.fileSize;\n        }\n        setFileSize(fileSize /*long*/) {\n            this.fileSize = fileSize;\n        }\n        /**\n         * 16-bit CRC checksum using CCITT-16\n         *\n         * @return crc checksum, -1 if not set\n         */\n        getChecksum() {\n            return this.checksum;\n        }\n        setChecksum(checksum /*int*/) {\n            this.checksum = checksum;\n        }\n        /**\n         * unix epock timestamp, elapsed seconds since 1970-01-01\n         *\n         * @return elapsed seconds, -1 if not set\n         */\n        getTimestamp() {\n            return this.timestamp;\n        }\n        setTimestamp(timestamp /*long*/) {\n            this.timestamp = timestamp;\n        }\n    }\n\n    /**\n     * Ponyfill for Java's Long class.\n     */\n    class Long {\n        /**\n         * Parses a string to a number, since JS has no really Int64.\n         *\n         * @param num Numeric string.\n         * @param radix Destination radix.\n         */\n        static parseLong(num, radix = undefined) {\n            return parseInt(num, radix);\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class NullPointerException extends Exception {\n    }\n    NullPointerException.kind = 'NullPointerException';\n\n    /*\n     * Copyright (c) 1994, 2004, Oracle and/or its affiliates. All rights reserved.\n     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n     *\n     * This code is free software; you can redistribute it and/or modify it\n     * under the terms of the GNU General Public License version 2 only, as\n     * published by the Free Software Foundation.  Oracle designates this\n     * particular file as subject to the \"Classpath\" exception as provided\n     * by Oracle in the LICENSE file that accompanied this code.\n     *\n     * This code is distributed in the hope that it will be useful, but WITHOUT\n     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n     * version 2 for more details (a copy is included in the LICENSE file that\n     * accompanied this code).\n     *\n     * You should have received a copy of the GNU General Public License version\n     * 2 along with this work; if not, write to the Free Software Foundation,\n     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n     *\n     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n     * or visit www.oracle.com if you need additional information or have any\n     * questions.\n     */\n    // package java.io;\n    /**\n     * This abstract class is the superclass of all classes representing\n     * an output stream of bytes. An output stream accepts output bytes\n     * and sends them to some sink.\n     * <p>\n     * Applications that need to define a subclass of\n     * <code>OutputStream</code> must always provide at least a method\n     * that writes one byte of output.\n     *\n     * @author  Arthur van Hoff\n     * @see     java.io.BufferedOutputStream\n     * @see     java.io.ByteArrayOutputStream\n     * @see     java.io.DataOutputStream\n     * @see     java.io.FilterOutputStream\n     * @see     java.io.InputStream\n     * @see     java.io.OutputStream#write(int)\n     * @since   JDK1.0\n     */\n    /*public*/ class OutputStream /*implements Closeable, Flushable*/ {\n        /**\n         * Writes <code>b.length</code> bytes from the specified byte array\n         * to this output stream. The general contract for <code>write(b)</code>\n         * is that it should have exactly the same effect as the call\n         * <code>write(b, 0, b.length)</code>.\n         *\n         * @param      b   the data.\n         * @exception  IOException  if an I/O error occurs.\n         * @see        java.io.OutputStream#write(byte[], int, int)\n         */\n        writeBytes(b) {\n            this.writeBytesOffset(b, 0, b.length);\n        }\n        /**\n         * Writes <code>len</code> bytes from the specified byte array\n         * starting at offset <code>off</code> to this output stream.\n         * The general contract for <code>write(b, off, len)</code> is that\n         * some of the bytes in the array <code>b</code> are written to the\n         * output stream in order; element <code>b[off]</code> is the first\n         * byte written and <code>b[off+len-1]</code> is the last byte written\n         * by this operation.\n         * <p>\n         * The <code>write</code> method of <code>OutputStream</code> calls\n         * the write method of one argument on each of the bytes to be\n         * written out. Subclasses are encouraged to override this method and\n         * provide a more efficient implementation.\n         * <p>\n         * If <code>b</code> is <code>null</code>, a\n         * <code>NullPointerException</code> is thrown.\n         * <p>\n         * If <code>off</code> is negative, or <code>len</code> is negative, or\n         * <code>off+len</code> is greater than the length of the array\n         * <code>b</code>, then an <tt>IndexOutOfBoundsException</tt> is thrown.\n         *\n         * @param      b     the data.\n         * @param      off   the start offset in the data.\n         * @param      len   the number of bytes to write.\n         * @exception  IOException  if an I/O error occurs. In particular,\n         *             an <code>IOException</code> is thrown if the output\n         *             stream is closed.\n         */\n        writeBytesOffset(b, off, len) {\n            if (b == null) {\n                throw new NullPointerException();\n            }\n            else if ((off < 0) || (off > b.length) || (len < 0) ||\n                ((off + len) > b.length) || ((off + len) < 0)) {\n                throw new IndexOutOfBoundsException();\n            }\n            else if (len === 0) {\n                return;\n            }\n            for (let i = 0; i < len; i++) {\n                this.write(b[off + i]);\n            }\n        }\n        /**\n         * Flushes this output stream and forces any buffered output bytes\n         * to be written out. The general contract of <code>flush</code> is\n         * that calling it is an indication that, if any bytes previously\n         * written have been buffered by the implementation of the output\n         * stream, such bytes should immediately be written to their\n         * intended destination.\n         * <p>\n         * If the intended destination of this stream is an abstraction provided by\n         * the underlying operating system, for example a file, then flushing the\n         * stream guarantees only that bytes previously written to the stream are\n         * passed to the operating system for writing; it does not guarantee that\n         * they are actually written to a physical device such as a disk drive.\n         * <p>\n         * The <code>flush</code> method of <code>OutputStream</code> does nothing.\n         *\n         * @exception  IOException  if an I/O error occurs.\n         */\n        flush() {\n        }\n        /**\n         * Closes this output stream and releases any system resources\n         * associated with this stream. The general contract of <code>close</code>\n         * is that it closes the output stream. A closed stream cannot perform\n         * output operations and cannot be reopened.\n         * <p>\n         * The <code>close</code> method of <code>OutputStream</code> does nothing.\n         *\n         * @exception  IOException  if an I/O error occurs.\n         */\n        close() {\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class OutOfMemoryError extends Exception {\n    }\n\n    /*\n     * Copyright (c) 1994, 2010, Oracle and/or its affiliates. All rights reserved.\n     * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n     *\n     * This code is free software; you can redistribute it and/or modify it\n     * under the terms of the GNU General Public License version 2 only, as\n     * published by the Free Software Foundation.  Oracle designates this\n     * particular file as subject to the \"Classpath\" exception as provided\n     * by Oracle in the LICENSE file that accompanied this code.\n     *\n     * This code is distributed in the hope that it will be useful, but WITHOUT\n     * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n     * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n     * version 2 for more details (a copy is included in the LICENSE file that\n     * accompanied this code).\n     *\n     * You should have received a copy of the GNU General Public License version\n     * 2 along with this work; if not, write to the Free Software Foundation,\n     * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n     *\n     * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n     * or visit www.oracle.com if you need additional information or have any\n     * questions.\n     */\n    /**\n     * This class implements an output stream in which the data is\n     * written into a byte array. The buffer automatically grows as data\n     * is written to it.\n     * The data can be retrieved using <code>toByteArray()</code> and\n     * <code>toString()</code>.\n     * <p>\n     * Closing a <tt>ByteArrayOutputStream</tt> has no effect. The methods in\n     * this class can be called after the stream has been closed without\n     * generating an <tt>IOException</tt>.\n     *\n     * @author  Arthur van Hoff\n     * @since   JDK1.0\n     */\n    /*public*/ class ByteArrayOutputStream extends OutputStream {\n        /**\n         * Creates a new byte array output stream. The buffer capacity is\n         * initially 32 bytes, though its size increases if necessary.\n         */\n        // public constructor() {\n        //     this(32);\n        // }\n        /**\n         * Creates a new byte array output stream, with a buffer capacity of\n         * the specified size, in bytes.\n         *\n         * @param   size   the initial size.\n         * @exception  IllegalArgumentException if size is negative.\n         */\n        constructor(size = 32) {\n            super();\n            /**\n             * The number of valid bytes in the buffer.\n             */\n            this.count = 0;\n            if (size < 0) {\n                throw new IllegalArgumentException('Negative initial size: '\n                    + size);\n            }\n            this.buf = new Uint8Array(size);\n        }\n        /**\n         * Increases the capacity if necessary to ensure that it can hold\n         * at least the number of elements specified by the minimum\n         * capacity argument.\n         *\n         * @param minCapacity the desired minimum capacity\n         * @throws OutOfMemoryError if {@code minCapacity < 0}.  This is\n         * interpreted as a request for the unsatisfiably large capacity\n         * {@code (long) Integer.MAX_VALUE + (minCapacity - Integer.MAX_VALUE)}.\n         */\n        ensureCapacity(minCapacity) {\n            // overflow-conscious code\n            if (minCapacity - this.buf.length > 0)\n                this.grow(minCapacity);\n        }\n        /**\n         * Increases the capacity to ensure that it can hold at least the\n         * number of elements specified by the minimum capacity argument.\n         *\n         * @param minCapacity the desired minimum capacity\n         */\n        grow(minCapacity) {\n            // overflow-conscious code\n            let oldCapacity = this.buf.length;\n            let newCapacity = oldCapacity << 1;\n            if (newCapacity - minCapacity < 0)\n                newCapacity = minCapacity;\n            if (newCapacity < 0) {\n                if (minCapacity < 0) // overflow\n                    throw new OutOfMemoryError();\n                newCapacity = Integer.MAX_VALUE;\n            }\n            this.buf = Arrays.copyOfUint8Array(this.buf, newCapacity);\n        }\n        /**\n         * Writes the specified byte to this byte array output stream.\n         *\n         * @param   b   the byte to be written.\n         */\n        write(b) {\n            this.ensureCapacity(this.count + 1);\n            this.buf[this.count] = /*(byte)*/ b;\n            this.count += 1;\n        }\n        /**\n         * Writes <code>len</code> bytes from the specified byte array\n         * starting at offset <code>off</code> to this byte array output stream.\n         *\n         * @param   b     the data.\n         * @param   off   the start offset in the data.\n         * @param   len   the number of bytes to write.\n         */\n        writeBytesOffset(b, off, len) {\n            if ((off < 0) || (off > b.length) || (len < 0) ||\n                ((off + len) - b.length > 0)) {\n                throw new IndexOutOfBoundsException();\n            }\n            this.ensureCapacity(this.count + len);\n            System.arraycopy(b, off, this.buf, this.count, len);\n            this.count += len;\n        }\n        /**\n         * Writes the complete contents of this byte array output stream to\n         * the specified output stream argument, as if by calling the output\n         * stream's write method using <code>out.write(buf, 0, count)</code>.\n         *\n         * @param      out   the output stream to which to write the data.\n         * @exception  IOException  if an I/O error occurs.\n         */\n        writeTo(out) {\n            out.writeBytesOffset(this.buf, 0, this.count);\n        }\n        /**\n         * Resets the <code>count</code> field of this byte array output\n         * stream to zero, so that all currently accumulated output in the\n         * output stream is discarded. The output stream can be used again,\n         * reusing the already allocated buffer space.\n         *\n         * @see     java.io.ByteArrayInputStream#count\n         */\n        reset() {\n            this.count = 0;\n        }\n        /**\n         * Creates a newly allocated byte array. Its size is the current\n         * size of this output stream and the valid contents of the buffer\n         * have been copied into it.\n         *\n         * @return  the current contents of this output stream, as a byte array.\n         * @see     java.io.ByteArrayOutputStream#size()\n         */\n        toByteArray() {\n            return Arrays.copyOfUint8Array(this.buf, this.count);\n        }\n        /**\n         * Returns the current size of the buffer.\n         *\n         * @return  the value of the <code>count</code> field, which is the number\n         *          of valid bytes in this output stream.\n         * @see     java.io.ByteArrayOutputStream#count\n         */\n        size() {\n            return this.count;\n        }\n        toString(param) {\n            if (!param) {\n                return this.toString_void();\n            }\n            if (typeof param === 'string') {\n                return this.toString_string(param);\n            }\n            return this.toString_number(param);\n        }\n        /**\n         * Converts the buffer's contents into a string decoding bytes using the\n         * platform's default character set. The length of the new <tt>String</tt>\n         * is a function of the character set, and hence may not be equal to the\n         * size of the buffer.\n         *\n         * <p> This method always replaces malformed-input and unmappable-character\n         * sequences with the default replacement string for the platform's\n         * default character set. The {@linkplain java.nio.charset.CharsetDecoder}\n         * class should be used when more control over the decoding process is\n         * required.\n         *\n         * @return String decoded from the buffer's contents.\n         * @since  JDK1.1\n         */\n        toString_void() {\n            return new String(this.buf /*, 0, this.count*/).toString();\n        }\n        /**\n         * Converts the buffer's contents into a string by decoding the bytes using\n         * the specified {@link java.nio.charset.Charset charsetName}. The length of\n         * the new <tt>String</tt> is a function of the charset, and hence may not be\n         * equal to the length of the byte array.\n         *\n         * <p> This method always replaces malformed-input and unmappable-character\n         * sequences with this charset's default replacement string. The {@link\n         * java.nio.charset.CharsetDecoder} class should be used when more control\n         * over the decoding process is required.\n         *\n         * @param  charsetName  the name of a supported\n         *              {@linkplain java.nio.charset.Charset </code>charset<code>}\n         * @return String decoded from the buffer's contents.\n         * @exception  UnsupportedEncodingException\n         *             If the named charset is not supported\n         * @since   JDK1.1\n         */\n        toString_string(charsetName) {\n            return new String(this.buf /*, 0, this.count, charsetName*/).toString();\n        }\n        /**\n         * Creates a newly allocated string. Its size is the current size of\n         * the output stream and the valid contents of the buffer have been\n         * copied into it. Each character <i>c</i> in the resulting string is\n         * constructed from the corresponding element <i>b</i> in the byte\n         * array such that:\n         * <blockquote><pre>\n         *     c == (char)(((hibyte &amp; 0xff) &lt;&lt; 8) | (b &amp; 0xff))\n         * </pre></blockquote>\n         *\n         * @deprecated This method does not properly convert bytes into characters.\n         * As of JDK&nbsp;1.1, the preferred way to do this is via the\n         * <code>toString(String enc)</code> method, which takes an encoding-name\n         * argument, or the <code>toString()</code> method, which uses the\n         * platform's default character encoding.\n         *\n         * @param      hibyte    the high byte of each resulting Unicode character.\n         * @return     the current contents of the output stream, as a string.\n         * @see        java.io.ByteArrayOutputStream#size()\n         * @see        java.io.ByteArrayOutputStream#toString(String)\n         * @see        java.io.ByteArrayOutputStream#toString()\n         */\n        // @Deprecated\n        toString_number(hibyte) {\n            return new String(this.buf /*, hibyte, 0, this.count*/).toString();\n        }\n        /**\n         * Closing a <tt>ByteArrayOutputStream</tt> has no effect. The methods in\n         * this class can be called after the stream has been closed without\n         * generating an <tt>IOException</tt>.\n         * <p>\n         *\n         * @throws IOException\n         */\n        close() {\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*private*/ var Mode$2;\n    (function (Mode) {\n        Mode[Mode[\"ALPHA\"] = 0] = \"ALPHA\";\n        Mode[Mode[\"LOWER\"] = 1] = \"LOWER\";\n        Mode[Mode[\"MIXED\"] = 2] = \"MIXED\";\n        Mode[Mode[\"PUNCT\"] = 3] = \"PUNCT\";\n        Mode[Mode[\"ALPHA_SHIFT\"] = 4] = \"ALPHA_SHIFT\";\n        Mode[Mode[\"PUNCT_SHIFT\"] = 5] = \"PUNCT_SHIFT\";\n    })(Mode$2 || (Mode$2 = {}));\n    /**\n     * Indirectly access the global BigInt constructor, it\n     * allows browsers that doesn't support BigInt to run\n     * the library without breaking due to \"undefined BigInt\"\n     * errors.\n     */\n    function getBigIntConstructor() {\n        if (typeof window !== 'undefined') {\n            return window['BigInt'] || null;\n        }\n        if (typeof global !== 'undefined') {\n            return global['BigInt'] || null;\n        }\n        if (typeof self !== 'undefined') {\n            return self['BigInt'] || null;\n        }\n        throw new Error('Can\\'t search globals for BigInt!');\n    }\n    /**\n     * Used to store the BigInt constructor.\n     */\n    let BigInteger;\n    /**\n     * This function creates a bigint value. It allows browsers\n     * that doesn't support BigInt to run the rest of the library\n     * by not directly accessing the BigInt constructor.\n     */\n    function createBigInt(num) {\n        if (typeof BigInteger === 'undefined') {\n            BigInteger = getBigIntConstructor();\n        }\n        if (BigInteger === null) {\n            throw new Error('BigInt is not supported!');\n        }\n        return BigInteger(num);\n    }\n    function getEXP900() {\n        // in Java - array with length = 16\n        let EXP900 = [];\n        EXP900[0] = createBigInt(1);\n        let nineHundred = createBigInt(900);\n        EXP900[1] = nineHundred;\n        // in Java - array with length = 16\n        for (let i /*int*/ = 2; i < 16; i++) {\n            EXP900[i] = EXP900[i - 1] * nineHundred;\n        }\n        return EXP900;\n    }\n    /**\n     * <p>This class contains the methods for decoding the PDF417 codewords.</p>\n     *\n     * @author SITA Lab (kevin.osullivan@sita.aero)\n     * @author Guenther Grau\n     */\n    /*final*/ class DecodedBitStreamParser$2 {\n        //   private DecodedBitStreamParser() {\n        // }\n        /**\n         *\n         * @param codewords\n         * @param ecLevel\n         *\n         * @throws FormatException\n         */\n        static decode(codewords, ecLevel) {\n            // pass encoding to result (will be used for decode symbols in byte mode)\n            let result = new StringBuilder('');\n            // let encoding: Charset = StandardCharsets.ISO_8859_1;\n            let encoding = CharacterSetECI.ISO8859_1;\n            /**\n             * @note the next command is specific from this TypeScript library\n             * because TS can't properly cast some values to char and\n             * convert it to string later correctly due to encoding\n             * differences from Java version. As reported here:\n             * https://github.com/zxing-js/library/pull/264/files#r382831593\n             */\n            result.enableDecoding(encoding);\n            // Get compaction mode\n            let codeIndex = 1;\n            let code = codewords[codeIndex++];\n            let resultMetadata = new PDF417ResultMetadata();\n            while (codeIndex < codewords[0]) {\n                switch (code) {\n                    case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                        codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                    case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        codeIndex = DecodedBitStreamParser$2.byteCompaction(code, codewords, encoding, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                        result.append(/*(char)*/ codewords[codeIndex++]);\n                        break;\n                    case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                        codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex, result);\n                        break;\n                    case DecodedBitStreamParser$2.ECI_CHARSET:\n                        let charsetECI = CharacterSetECI.getCharacterSetECIByValue(codewords[codeIndex++]);\n                        // encoding = Charset.forName(charsetECI.getName());\n                        break;\n                    case DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE:\n                        // Can't do anything with generic ECI; skip its 2 characters\n                        codeIndex += 2;\n                        break;\n                    case DecodedBitStreamParser$2.ECI_USER_DEFINED:\n                        // Can't do anything with user ECI; skip its 1 character\n                        codeIndex++;\n                        break;\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        codeIndex = DecodedBitStreamParser$2.decodeMacroBlock(codewords, codeIndex, resultMetadata);\n                        break;\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                    case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                        // Should not see these outside a macro block\n                        throw new FormatException();\n                    default:\n                        // Default to text compaction. During testing numerous barcodes\n                        // appeared to be missing the starting mode. In these cases defaulting\n                        // to text compaction seems to work.\n                        codeIndex--;\n                        codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, result);\n                        break;\n                }\n                if (codeIndex < codewords.length) {\n                    code = codewords[codeIndex++];\n                }\n                else {\n                    throw FormatException.getFormatInstance();\n                }\n            }\n            if (result.length() === 0) {\n                throw FormatException.getFormatInstance();\n            }\n            let decoderResult = new DecoderResult(null, result.toString(), null, ecLevel);\n            decoderResult.setOther(resultMetadata);\n            return decoderResult;\n        }\n        /**\n         *\n         * @param int\n         * @param param1\n         * @param codewords\n         * @param int\n         * @param codeIndex\n         * @param PDF417ResultMetadata\n         * @param resultMetadata\n         *\n         * @throws FormatException\n         */\n        // @SuppressWarnings(\"deprecation\")\n        static decodeMacroBlock(codewords, codeIndex, resultMetadata) {\n            if (codeIndex + DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS > codewords[0]) {\n                // we must have at least two bytes left for the segment index\n                throw FormatException.getFormatInstance();\n            }\n            let segmentIndexArray = new Int32Array(DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS);\n            for (let i /*int*/ = 0; i < DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS; i++, codeIndex++) {\n                segmentIndexArray[i] = codewords[codeIndex];\n            }\n            resultMetadata.setSegmentIndex(Integer.parseInt(DecodedBitStreamParser$2.decodeBase900toBase10(segmentIndexArray, DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS)));\n            let fileId = new StringBuilder();\n            codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex, fileId);\n            resultMetadata.setFileId(fileId.toString());\n            let optionalFieldsStart = -1;\n            if (codewords[codeIndex] === DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD) {\n                optionalFieldsStart = codeIndex + 1;\n            }\n            while (codeIndex < codewords[0]) {\n                switch (codewords[codeIndex]) {\n                    case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        codeIndex++;\n                        switch (codewords[codeIndex]) {\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME:\n                                let fileName = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, fileName);\n                                resultMetadata.setFileName(fileName.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER:\n                                let sender = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, sender);\n                                resultMetadata.setSender(sender.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE:\n                                let addressee = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.textCompaction(codewords, codeIndex + 1, addressee);\n                                resultMetadata.setAddressee(addressee.toString());\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT:\n                                let segmentCount = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, segmentCount);\n                                resultMetadata.setSegmentCount(Integer.parseInt(segmentCount.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP:\n                                let timestamp = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, timestamp);\n                                resultMetadata.setTimestamp(Long.parseLong(timestamp.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM:\n                                let checksum = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, checksum);\n                                resultMetadata.setChecksum(Integer.parseInt(checksum.toString()));\n                                break;\n                            case DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE:\n                                let fileSize = new StringBuilder();\n                                codeIndex = DecodedBitStreamParser$2.numericCompaction(codewords, codeIndex + 1, fileSize);\n                                resultMetadata.setFileSize(Long.parseLong(fileSize.toString()));\n                                break;\n                            default:\n                                throw FormatException.getFormatInstance();\n                        }\n                        break;\n                    case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                        codeIndex++;\n                        resultMetadata.setLastSegment(true);\n                        break;\n                    default:\n                        throw FormatException.getFormatInstance();\n                }\n            }\n            // copy optional fields to additional options\n            if (optionalFieldsStart !== -1) {\n                let optionalFieldsLength = codeIndex - optionalFieldsStart;\n                if (resultMetadata.isLastSegment()) {\n                    // do not include terminator\n                    optionalFieldsLength--;\n                }\n                resultMetadata.setOptionalData(Arrays.copyOfRange(codewords, optionalFieldsStart, optionalFieldsStart + optionalFieldsLength));\n            }\n            return codeIndex;\n        }\n        /**\n         * Text Compaction mode (see 5.4.1.5) permits all printable ASCII characters to be\n         * encoded, i.e. values 32 - 126 inclusive in accordance with ISO/IEC 646 (IRV), as\n         * well as selected control characters.\n         *\n         * @param codewords The array of codewords (data + error)\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         */\n        static textCompaction(codewords, codeIndex, result) {\n            // 2 character per codeword\n            let textCompactionData = new Int32Array((codewords[0] - codeIndex) * 2);\n            // Used to hold the byte compaction value if there is a mode shift\n            let byteCompactionData = new Int32Array((codewords[0] - codeIndex) * 2);\n            let index = 0;\n            let end = false;\n            while ((codeIndex < codewords[0]) && !end) {\n                let code = codewords[codeIndex++];\n                if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                    textCompactionData[index] = code / 30;\n                    textCompactionData[index + 1] = code % 30;\n                    index += 2;\n                }\n                else {\n                    switch (code) {\n                        case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                            // reinitialize text compaction mode to alpha sub mode\n                            textCompactionData[index++] = DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH;\n                            break;\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                            codeIndex--;\n                            end = true;\n                            break;\n                        case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                            // The Mode Shift codeword 913 shall cause a temporary\n                            // switch from Text Compaction mode to Byte Compaction mode.\n                            // This switch shall be in effect for only the next codeword,\n                            // after which the mode shall revert to the prevailing sub-mode\n                            // of the Text Compaction mode. Codeword 913 is only available\n                            // in Text Compaction mode; its use is described in 5.4.2.4.\n                            textCompactionData[index] = DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE;\n                            code = codewords[codeIndex++];\n                            byteCompactionData[index] = code;\n                            index++;\n                            break;\n                    }\n                }\n            }\n            DecodedBitStreamParser$2.decodeTextCompaction(textCompactionData, byteCompactionData, index, result);\n            return codeIndex;\n        }\n        /**\n         * The Text Compaction mode includes all the printable ASCII characters\n         * (i.e. values from 32 to 126) and three ASCII control characters: HT or tab\n         * (9: e), LF or line feed (10: e), and CR or carriage\n         * return (13: e). The Text Compaction mode also includes various latch\n         * and shift characters which are used exclusively within the mode. The Text\n         * Compaction mode encodes up to 2 characters per codeword. The compaction rules\n         * for converting data into PDF417 codewords are defined in 5.4.2.2. The sub-mode\n         * switches are defined in 5.4.2.3.\n         *\n         * @param textCompactionData The text compaction data.\n         * @param byteCompactionData The byte compaction data if there\n         *                           was a mode shift.\n         * @param length             The size of the text compaction and byte compaction data.\n         * @param result             The decoded data is appended to the result.\n         */\n        static decodeTextCompaction(textCompactionData, byteCompactionData, length, result) {\n            // Beginning from an initial state of the Alpha sub-mode\n            // The default compaction mode for PDF417 in effect at the start of each symbol shall always be Text\n            // Compaction mode Alpha sub-mode (alphabetic: uppercase). A latch codeword from another mode to the Text\n            // Compaction mode shall always switch to the Text Compaction Alpha sub-mode.\n            let subMode = Mode$2.ALPHA;\n            let priorToShiftMode = Mode$2.ALPHA;\n            let i = 0;\n            while (i < length) {\n                let subModeCh = textCompactionData[i];\n                let ch = /*char*/ '';\n                switch (subMode) {\n                    case Mode$2.ALPHA:\n                        // Alpha (alphabetic: uppercase)\n                        if (subModeCh < 26) {\n                            // Upper case Alpha Character\n                            // Note: 65 = 'A' ASCII -> there is byte code of symbol\n                            ch = /*(char)('A' + subModeCh) */ String.fromCharCode(65 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.LL:\n                                    subMode = Mode$2.LOWER;\n                                    break;\n                                case DecodedBitStreamParser$2.ML:\n                                    subMode = Mode$2.MIXED;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.LOWER:\n                        // Lower (alphabetic: lowercase)\n                        if (subModeCh < 26) {\n                            ch = /*(char)('a' + subModeCh)*/ String.fromCharCode(97 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.AS:\n                                    // Shift to alpha\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.ALPHA_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.ML:\n                                    subMode = Mode$2.MIXED;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    // TODO Does this need to use the current character encoding? See other occurrences below\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.MIXED:\n                        // Mixed (punctuation: e)\n                        if (subModeCh < DecodedBitStreamParser$2.PL) {\n                            ch = DecodedBitStreamParser$2.MIXED_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PL:\n                                    subMode = Mode$2.PUNCT;\n                                    break;\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.LL:\n                                    subMode = Mode$2.LOWER;\n                                    break;\n                                case DecodedBitStreamParser$2.AL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.PS:\n                                    // Shift to punctuation\n                                    priorToShiftMode = subMode;\n                                    subMode = Mode$2.PUNCT_SHIFT;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.PUNCT:\n                        // Punctuation\n                        if (subModeCh < DecodedBitStreamParser$2.PAL) {\n                            ch = DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PAL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.ALPHA_SHIFT:\n                        // Restore sub-mode\n                        subMode = priorToShiftMode;\n                        if (subModeCh < 26) {\n                            ch = /*(char)('A' + subModeCh)*/ String.fromCharCode(65 + subModeCh);\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case 26:\n                                    ch = ' ';\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                    case Mode$2.PUNCT_SHIFT:\n                        // Restore sub-mode\n                        subMode = priorToShiftMode;\n                        if (subModeCh < DecodedBitStreamParser$2.PAL) {\n                            ch = DecodedBitStreamParser$2.PUNCT_CHARS[subModeCh];\n                        }\n                        else {\n                            switch (subModeCh) {\n                                case DecodedBitStreamParser$2.PAL:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                                case DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE:\n                                    // PS before Shift-to-Byte is used as a padding character,\n                                    // see 5.4.2.4 of the specification\n                                    result.append(/*(char)*/ byteCompactionData[i]);\n                                    break;\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                    subMode = Mode$2.ALPHA;\n                                    break;\n                            }\n                        }\n                        break;\n                }\n                // if (ch !== 0) {\n                if (ch !== '') {\n                    // Append decoded character to result\n                    result.append(ch);\n                }\n                i++;\n            }\n        }\n        /**\n         * Byte Compaction mode (see 5.4.3) permits all 256 possible 8-bit byte values to be encoded.\n         * This includes all ASCII characters value 0 to 127 inclusive and provides for international\n         * character set support.\n         *\n         * @param mode      The byte compaction mode i.e. 901 or 924\n         * @param codewords The array of codewords (data + error)\n         * @param encoding  Currently active character encoding\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         */\n        static /*int*/ byteCompaction(mode, codewords, encoding, codeIndex, result) {\n            let decodedBytes = new ByteArrayOutputStream();\n            let count = 0;\n            let value = /*long*/ 0;\n            let end = false;\n            switch (mode) {\n                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                    // Total number of Byte Compaction characters to be encoded\n                    // is not a multiple of 6\n                    let byteCompactedCodewords = new Int32Array(6);\n                    let nextCode = codewords[codeIndex++];\n                    while ((codeIndex < codewords[0]) && !end) {\n                        byteCompactedCodewords[count++] = nextCode;\n                        // Base 900\n                        value = 900 * value + nextCode;\n                        nextCode = codewords[codeIndex++];\n                        // perhaps it should be ok to check only nextCode >= TEXT_COMPACTION_MODE_LATCH\n                        switch (nextCode) {\n                            case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                            case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                            case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                            case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                            case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                                codeIndex--;\n                                end = true;\n                                break;\n                            default:\n                                if ((count % 5 === 0) && (count > 0)) {\n                                    // Decode every 5 codewords\n                                    // Convert to Base 256\n                                    for (let j /*int*/ = 0; j < 6; ++j) {\n                                        /* @note\n                                         * JavaScript stores numbers as 64 bits floating point numbers, but all bitwise operations are performed on 32 bits binary numbers.\n                                         * So the next bitwise operation could not be done with simple numbers\n                                         */\n                                        decodedBytes.write(/*(byte)*/ Number(createBigInt(value) >> createBigInt(8 * (5 - j))));\n                                    }\n                                    value = 0;\n                                    count = 0;\n                                }\n                                break;\n                        }\n                    }\n                    // if the end of all codewords is reached the last codeword needs to be added\n                    if (codeIndex === codewords[0] && nextCode < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                        byteCompactedCodewords[count++] = nextCode;\n                    }\n                    // If Byte Compaction mode is invoked with codeword 901,\n                    // the last group of codewords is interpreted directly\n                    // as one byte per codeword, without compaction.\n                    for (let i /*int*/ = 0; i < count; i++) {\n                        decodedBytes.write(/*(byte)*/ byteCompactedCodewords[i]);\n                    }\n                    break;\n                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                    // Total number of Byte Compaction characters to be encoded\n                    // is an integer multiple of 6\n                    while (codeIndex < codewords[0] && !end) {\n                        let code = codewords[codeIndex++];\n                        if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                            count++;\n                            // Base 900\n                            value = 900 * value + code;\n                        }\n                        else {\n                            switch (code) {\n                                case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH:\n                                case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                                case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                                case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                                case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                                    codeIndex--;\n                                    end = true;\n                                    break;\n                            }\n                        }\n                        if ((count % 5 === 0) && (count > 0)) {\n                            // Decode every 5 codewords\n                            // Convert to Base 256\n                            /* @note\n                             * JavaScript stores numbers as 64 bits floating point numbers, but all bitwise operations are performed on 32 bits binary numbers.\n                             * So the next bitwise operation could not be done with simple numbers\n                            */\n                            for (let j /*int*/ = 0; j < 6; ++j) {\n                                decodedBytes.write(/*(byte)*/ Number(createBigInt(value) >> createBigInt(8 * (5 - j))));\n                            }\n                            value = 0;\n                            count = 0;\n                        }\n                    }\n                    break;\n            }\n            result.append(StringEncoding.decode(decodedBytes.toByteArray(), encoding));\n            return codeIndex;\n        }\n        /**\n         * Numeric Compaction mode (see 5.4.4) permits efficient encoding of numeric data strings.\n         *\n         * @param codewords The array of codewords (data + error)\n         * @param codeIndex The current index into the codeword array.\n         * @param result    The decoded data is appended to the result.\n         * @return The next index into the codeword array.\n         *\n         * @throws FormatException\n         */\n        static numericCompaction(codewords, codeIndex /*int*/, result) {\n            let count = 0;\n            let end = false;\n            let numericCodewords = new Int32Array(DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS);\n            while (codeIndex < codewords[0] && !end) {\n                let code = codewords[codeIndex++];\n                if (codeIndex === codewords[0]) {\n                    end = true;\n                }\n                if (code < DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH) {\n                    numericCodewords[count] = code;\n                    count++;\n                }\n                else {\n                    switch (code) {\n                        case DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH:\n                        case DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK:\n                        case DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD:\n                        case DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR:\n                            codeIndex--;\n                            end = true;\n                            break;\n                    }\n                }\n                if ((count % DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS === 0 || code === DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH || end) && count > 0) {\n                    // Re-invoking Numeric Compaction mode (by using codeword 902\n                    // while in Numeric Compaction mode) serves  to terminate the\n                    // current Numeric Compaction mode grouping as described in 5.4.4.2,\n                    // and then to start a new one grouping.\n                    result.append(DecodedBitStreamParser$2.decodeBase900toBase10(numericCodewords, count));\n                    count = 0;\n                }\n            }\n            return codeIndex;\n        }\n        /**\n         * Convert a list of Numeric Compacted codewords from Base 900 to Base 10.\n         *\n         * @param codewords The array of codewords\n         * @param count     The number of codewords\n         * @return The decoded string representing the Numeric data.\n         *\n         * EXAMPLE\n         * Encode the fifteen digit numeric string 000213298174000\n         * Prefix the numeric string with a 1 and set the initial value of\n         * t = 1 000 213 298 174 000\n         * Calculate codeword 0\n         * d0 = 1 000 213 298 174 000 mod 900 = 200\n         *\n         * t = 1 000 213 298 174 000 div 900 = 1 111 348 109 082\n         * Calculate codeword 1\n         * d1 = 1 111 348 109 082 mod 900 = 282\n         *\n         * t = 1 111 348 109 082 div 900 = 1 234 831 232\n         * Calculate codeword 2\n         * d2 = 1 234 831 232 mod 900 = 632\n         *\n         * t = 1 234 831 232 div 900 = 1 372 034\n         * Calculate codeword 3\n         * d3 = 1 372 034 mod 900 = 434\n         *\n         * t = 1 372 034 div 900 = 1 524\n         * Calculate codeword 4\n         * d4 = 1 524 mod 900 = 624\n         *\n         * t = 1 524 div 900 = 1\n         * Calculate codeword 5\n         * d5 = 1 mod 900 = 1\n         * t = 1 div 900 = 0\n         * Codeword sequence is: 1, 624, 434, 632, 282, 200\n         *\n         * Decode the above codewords involves\n         *   1 x 900 power of 5 + 624 x 900 power of 4 + 434 x 900 power of 3 +\n         * 632 x 900 power of 2 + 282 x 900 power of 1 + 200 x 900 power of 0 = 1000213298174000\n         *\n         * Remove leading 1 =>  Result is 000213298174000\n         *\n         * @throws FormatException\n         */\n        static decodeBase900toBase10(codewords, count) {\n            let result = createBigInt(0);\n            for (let i /*int*/ = 0; i < count; i++) {\n                result += DecodedBitStreamParser$2.EXP900[count - i - 1] * createBigInt(codewords[i]);\n            }\n            let resultString = result.toString();\n            if (resultString.charAt(0) !== '1') {\n                throw new FormatException();\n            }\n            return resultString.substring(1);\n        }\n    }\n    DecodedBitStreamParser$2.TEXT_COMPACTION_MODE_LATCH = 900;\n    DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH = 901;\n    DecodedBitStreamParser$2.NUMERIC_COMPACTION_MODE_LATCH = 902;\n    DecodedBitStreamParser$2.BYTE_COMPACTION_MODE_LATCH_6 = 924;\n    DecodedBitStreamParser$2.ECI_USER_DEFINED = 925;\n    DecodedBitStreamParser$2.ECI_GENERAL_PURPOSE = 926;\n    DecodedBitStreamParser$2.ECI_CHARSET = 927;\n    DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_CONTROL_BLOCK = 928;\n    DecodedBitStreamParser$2.BEGIN_MACRO_PDF417_OPTIONAL_FIELD = 923;\n    DecodedBitStreamParser$2.MACRO_PDF417_TERMINATOR = 922;\n    DecodedBitStreamParser$2.MODE_SHIFT_TO_BYTE_COMPACTION_MODE = 913;\n    DecodedBitStreamParser$2.MAX_NUMERIC_CODEWORDS = 15;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_NAME = 0;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SEGMENT_COUNT = 1;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_TIME_STAMP = 2;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_SENDER = 3;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_ADDRESSEE = 4;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_FILE_SIZE = 5;\n    DecodedBitStreamParser$2.MACRO_PDF417_OPTIONAL_FIELD_CHECKSUM = 6;\n    DecodedBitStreamParser$2.PL = 25;\n    DecodedBitStreamParser$2.LL = 27;\n    DecodedBitStreamParser$2.AS = 27;\n    DecodedBitStreamParser$2.ML = 28;\n    DecodedBitStreamParser$2.AL = 28;\n    DecodedBitStreamParser$2.PS = 29;\n    DecodedBitStreamParser$2.PAL = 29;\n    DecodedBitStreamParser$2.PUNCT_CHARS = ';<>@[\\\\]_`~!\\r\\t,:\\n-.$/\"|*()?{}\\'';\n    DecodedBitStreamParser$2.MIXED_CHARS = '0123456789&\\r\\t,:#-.$/+%*=^';\n    /**\n     * Table containing values for the exponent of 900.\n     * This is used in the numeric compaction decode algorithm.\n     */\n    DecodedBitStreamParser$2.EXP900 = getBigIntConstructor() ? getEXP900() : [];\n    DecodedBitStreamParser$2.NUMBER_OF_SEQUENCE_CODEWORDS = 2;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    // import java.util.ArrayList;\n    // import java.util.Collection;\n    // import java.util.Formatter;\n    // import java.util.List;\n    /**\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417ScanningDecoder {\n        constructor() { }\n        /**\n         * @TODO don't pass in minCodewordWidth and maxCodewordWidth, pass in barcode columns for start and stop pattern\n         *\n         * columns. That way width can be deducted from the pattern column.\n         * This approach also allows to detect more details about the barcode, e.g. if a bar type (white or black) is wider\n         * than it should be. This can happen if the scanner used a bad blackpoint.\n         *\n         * @param BitMatrix\n         * @param image\n         * @param ResultPoint\n         * @param imageTopLeft\n         * @param ResultPoint\n         * @param imageBottomLeft\n         * @param ResultPoint\n         * @param imageTopRight\n         * @param ResultPoint\n         * @param imageBottomRight\n         * @param int\n         * @param minCodewordWidth\n         * @param int\n         * @param maxCodewordWidth\n         *\n         * @throws NotFoundException\n         * @throws FormatException\n         * @throws ChecksumException\n         */\n        static decode(image, imageTopLeft, imageBottomLeft, imageTopRight, imageBottomRight, minCodewordWidth, maxCodewordWidth) {\n            let boundingBox = new BoundingBox(image, imageTopLeft, imageBottomLeft, imageTopRight, imageBottomRight);\n            let leftRowIndicatorColumn = null;\n            let rightRowIndicatorColumn = null;\n            let detectionResult;\n            for (let firstPass /*boolean*/ = true;; firstPass = false) {\n                if (imageTopLeft != null) {\n                    leftRowIndicatorColumn = PDF417ScanningDecoder.getRowIndicatorColumn(image, boundingBox, imageTopLeft, true, minCodewordWidth, maxCodewordWidth);\n                }\n                if (imageTopRight != null) {\n                    rightRowIndicatorColumn = PDF417ScanningDecoder.getRowIndicatorColumn(image, boundingBox, imageTopRight, false, minCodewordWidth, maxCodewordWidth);\n                }\n                detectionResult = PDF417ScanningDecoder.merge(leftRowIndicatorColumn, rightRowIndicatorColumn);\n                if (detectionResult == null) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                let resultBox = detectionResult.getBoundingBox();\n                if (firstPass && resultBox != null &&\n                    (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n                    boundingBox = resultBox;\n                }\n                else {\n                    break;\n                }\n            }\n            detectionResult.setBoundingBox(boundingBox);\n            let maxBarcodeColumn = detectionResult.getBarcodeColumnCount() + 1;\n            detectionResult.setDetectionResultColumn(0, leftRowIndicatorColumn);\n            detectionResult.setDetectionResultColumn(maxBarcodeColumn, rightRowIndicatorColumn);\n            let leftToRight = leftRowIndicatorColumn != null;\n            for (let barcodeColumnCount /*int*/ = 1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n                let barcodeColumn = leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n                if (detectionResult.getDetectionResultColumn(barcodeColumn) !== /* null */ undefined) {\n                    // This will be the case for the opposite row indicator column, which doesn't need to be decoded again.\n                    continue;\n                }\n                let detectionResultColumn;\n                if (barcodeColumn === 0 || barcodeColumn === maxBarcodeColumn) {\n                    detectionResultColumn = new DetectionResultRowIndicatorColumn(boundingBox, barcodeColumn === 0);\n                }\n                else {\n                    detectionResultColumn = new DetectionResultColumn(boundingBox);\n                }\n                detectionResult.setDetectionResultColumn(barcodeColumn, detectionResultColumn);\n                let startColumn = -1;\n                let previousStartColumn = startColumn;\n                // TODO start at a row for which we know the start position, then detect upwards and downwards from there.\n                for (let imageRow /*int*/ = boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n                    startColumn = PDF417ScanningDecoder.getStartColumn(detectionResult, barcodeColumn, imageRow, leftToRight);\n                    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n                        if (previousStartColumn === -1) {\n                            continue;\n                        }\n                        startColumn = previousStartColumn;\n                    }\n                    let codeword = PDF417ScanningDecoder.detectCodeword(image, boundingBox.getMinX(), boundingBox.getMaxX(), leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth);\n                    if (codeword != null) {\n                        detectionResultColumn.setCodeword(imageRow, codeword);\n                        previousStartColumn = startColumn;\n                        minCodewordWidth = Math.min(minCodewordWidth, codeword.getWidth());\n                        maxCodewordWidth = Math.max(maxCodewordWidth, codeword.getWidth());\n                    }\n                }\n            }\n            return PDF417ScanningDecoder.createDecoderResult(detectionResult);\n        }\n        /**\n         *\n         * @param leftRowIndicatorColumn\n         * @param rightRowIndicatorColumn\n         *\n         * @throws NotFoundException\n         */\n        static merge(leftRowIndicatorColumn, rightRowIndicatorColumn) {\n            if (leftRowIndicatorColumn == null && rightRowIndicatorColumn == null) {\n                return null;\n            }\n            let barcodeMetadata = PDF417ScanningDecoder.getBarcodeMetadata(leftRowIndicatorColumn, rightRowIndicatorColumn);\n            if (barcodeMetadata == null) {\n                return null;\n            }\n            let boundingBox = BoundingBox.merge(PDF417ScanningDecoder.adjustBoundingBox(leftRowIndicatorColumn), PDF417ScanningDecoder.adjustBoundingBox(rightRowIndicatorColumn));\n            return new DetectionResult(barcodeMetadata, boundingBox);\n        }\n        /**\n         *\n         * @param rowIndicatorColumn\n         *\n         * @throws NotFoundException\n         */\n        static adjustBoundingBox(rowIndicatorColumn) {\n            if (rowIndicatorColumn == null) {\n                return null;\n            }\n            let rowHeights = rowIndicatorColumn.getRowHeights();\n            if (rowHeights == null) {\n                return null;\n            }\n            let maxRowHeight = PDF417ScanningDecoder.getMax(rowHeights);\n            let missingStartRows = 0;\n            for (let rowHeight /*int*/ of rowHeights) {\n                missingStartRows += maxRowHeight - rowHeight;\n                if (rowHeight > 0) {\n                    break;\n                }\n            }\n            let codewords = rowIndicatorColumn.getCodewords();\n            for (let row /*int*/ = 0; missingStartRows > 0 && codewords[row] == null; row++) {\n                missingStartRows--;\n            }\n            let missingEndRows = 0;\n            for (let row /*int*/ = rowHeights.length - 1; row >= 0; row--) {\n                missingEndRows += maxRowHeight - rowHeights[row];\n                if (rowHeights[row] > 0) {\n                    break;\n                }\n            }\n            for (let row /*int*/ = codewords.length - 1; missingEndRows > 0 && codewords[row] == null; row--) {\n                missingEndRows--;\n            }\n            return rowIndicatorColumn.getBoundingBox().addMissingRows(missingStartRows, missingEndRows, rowIndicatorColumn.isLeft());\n        }\n        static getMax(values) {\n            let maxValue = -1;\n            for (let value /*int*/ of values) {\n                maxValue = Math.max(maxValue, value);\n            }\n            return maxValue;\n        }\n        static getBarcodeMetadata(leftRowIndicatorColumn, rightRowIndicatorColumn) {\n            let leftBarcodeMetadata;\n            if (leftRowIndicatorColumn == null ||\n                (leftBarcodeMetadata = leftRowIndicatorColumn.getBarcodeMetadata()) == null) {\n                return rightRowIndicatorColumn == null ? null : rightRowIndicatorColumn.getBarcodeMetadata();\n            }\n            let rightBarcodeMetadata;\n            if (rightRowIndicatorColumn == null ||\n                (rightBarcodeMetadata = rightRowIndicatorColumn.getBarcodeMetadata()) == null) {\n                return leftBarcodeMetadata;\n            }\n            if (leftBarcodeMetadata.getColumnCount() !== rightBarcodeMetadata.getColumnCount() &&\n                leftBarcodeMetadata.getErrorCorrectionLevel() !== rightBarcodeMetadata.getErrorCorrectionLevel() &&\n                leftBarcodeMetadata.getRowCount() !== rightBarcodeMetadata.getRowCount()) {\n                return null;\n            }\n            return leftBarcodeMetadata;\n        }\n        static getRowIndicatorColumn(image, boundingBox, startPoint, leftToRight, minCodewordWidth, maxCodewordWidth) {\n            let rowIndicatorColumn = new DetectionResultRowIndicatorColumn(boundingBox, leftToRight);\n            for (let i /*int*/ = 0; i < 2; i++) {\n                let increment = i === 0 ? 1 : -1;\n                let startColumn = Math.trunc(Math.trunc(startPoint.getX()));\n                for (let imageRow /*int*/ = Math.trunc(Math.trunc(startPoint.getY())); imageRow <= boundingBox.getMaxY() &&\n                    imageRow >= boundingBox.getMinY(); imageRow += increment) {\n                    let codeword = PDF417ScanningDecoder.detectCodeword(image, 0, image.getWidth(), leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth);\n                    if (codeword != null) {\n                        rowIndicatorColumn.setCodeword(imageRow, codeword);\n                        if (leftToRight) {\n                            startColumn = codeword.getStartX();\n                        }\n                        else {\n                            startColumn = codeword.getEndX();\n                        }\n                    }\n                }\n            }\n            return rowIndicatorColumn;\n        }\n        /**\n         *\n         * @param detectionResult\n         * @param BarcodeValue\n         * @param param2\n         * @param param3\n         * @param barcodeMatrix\n         *\n         * @throws NotFoundException\n         */\n        static adjustCodewordCount(detectionResult, barcodeMatrix) {\n            let barcodeMatrix01 = barcodeMatrix[0][1];\n            let numberOfCodewords = barcodeMatrix01.getValue();\n            let calculatedNumberOfCodewords = detectionResult.getBarcodeColumnCount() *\n                detectionResult.getBarcodeRowCount() -\n                PDF417ScanningDecoder.getNumberOfECCodeWords(detectionResult.getBarcodeECLevel());\n            if (numberOfCodewords.length === 0) {\n                if (calculatedNumberOfCodewords < 1 || calculatedNumberOfCodewords > PDF417Common.MAX_CODEWORDS_IN_BARCODE) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                barcodeMatrix01.setValue(calculatedNumberOfCodewords);\n            }\n            else if (numberOfCodewords[0] !== calculatedNumberOfCodewords) {\n                // The calculated one is more reliable as it is derived from the row indicator columns\n                barcodeMatrix01.setValue(calculatedNumberOfCodewords);\n            }\n        }\n        /**\n         *\n         * @param detectionResult\n         *\n         * @throws FormatException\n         * @throws ChecksumException\n         * @throws NotFoundException\n         */\n        static createDecoderResult(detectionResult) {\n            let barcodeMatrix = PDF417ScanningDecoder.createBarcodeMatrix(detectionResult);\n            PDF417ScanningDecoder.adjustCodewordCount(detectionResult, barcodeMatrix);\n            let erasures /*Collection<Integer>*/ = new Array();\n            let codewords = new Int32Array(detectionResult.getBarcodeRowCount() * detectionResult.getBarcodeColumnCount());\n            let ambiguousIndexValuesList = /*List<int[]>*/ [];\n            let ambiguousIndexesList = /*Collection<Integer>*/ new Array();\n            for (let row /*int*/ = 0; row < detectionResult.getBarcodeRowCount(); row++) {\n                for (let column /*int*/ = 0; column < detectionResult.getBarcodeColumnCount(); column++) {\n                    let values = barcodeMatrix[row][column + 1].getValue();\n                    let codewordIndex = row * detectionResult.getBarcodeColumnCount() + column;\n                    if (values.length === 0) {\n                        erasures.push(codewordIndex);\n                    }\n                    else if (values.length === 1) {\n                        codewords[codewordIndex] = values[0];\n                    }\n                    else {\n                        ambiguousIndexesList.push(codewordIndex);\n                        ambiguousIndexValuesList.push(values);\n                    }\n                }\n            }\n            let ambiguousIndexValues = new Array(ambiguousIndexValuesList.length);\n            for (let i /*int*/ = 0; i < ambiguousIndexValues.length; i++) {\n                ambiguousIndexValues[i] = ambiguousIndexValuesList[i];\n            }\n            return PDF417ScanningDecoder.createDecoderResultFromAmbiguousValues(detectionResult.getBarcodeECLevel(), codewords, PDF417Common.toIntArray(erasures), PDF417Common.toIntArray(ambiguousIndexesList), ambiguousIndexValues);\n        }\n        /**\n         * This method deals with the fact, that the decoding process doesn't always yield a single most likely value. The\n         * current error correction implementation doesn't deal with erasures very well, so it's better to provide a value\n         * for these ambiguous codewords instead of treating it as an erasure. The problem is that we don't know which of\n         * the ambiguous values to choose. We try decode using the first value, and if that fails, we use another of the\n         * ambiguous values and try to decode again. This usually only happens on very hard to read and decode barcodes,\n         * so decoding the normal barcodes is not affected by this.\n         *\n         * @param erasureArray contains the indexes of erasures\n         * @param ambiguousIndexes array with the indexes that have more than one most likely value\n         * @param ambiguousIndexValues two dimensional array that contains the ambiguous values. The first dimension must\n         * be the same length as the ambiguousIndexes array\n         *\n         * @throws FormatException\n         * @throws ChecksumException\n         */\n        static createDecoderResultFromAmbiguousValues(ecLevel, codewords, erasureArray, ambiguousIndexes, ambiguousIndexValues) {\n            let ambiguousIndexCount = new Int32Array(ambiguousIndexes.length);\n            let tries = 100;\n            while (tries-- > 0) {\n                for (let i /*int*/ = 0; i < ambiguousIndexCount.length; i++) {\n                    codewords[ambiguousIndexes[i]] = ambiguousIndexValues[i][ambiguousIndexCount[i]];\n                }\n                try {\n                    return PDF417ScanningDecoder.decodeCodewords(codewords, ecLevel, erasureArray);\n                }\n                catch (err) {\n                    let ignored = err instanceof ChecksumException;\n                    if (!ignored) {\n                        throw err;\n                    }\n                }\n                if (ambiguousIndexCount.length === 0) {\n                    throw ChecksumException.getChecksumInstance();\n                }\n                for (let i /*int*/ = 0; i < ambiguousIndexCount.length; i++) {\n                    if (ambiguousIndexCount[i] < ambiguousIndexValues[i].length - 1) {\n                        ambiguousIndexCount[i]++;\n                        break;\n                    }\n                    else {\n                        ambiguousIndexCount[i] = 0;\n                        if (i === ambiguousIndexCount.length - 1) {\n                            throw ChecksumException.getChecksumInstance();\n                        }\n                    }\n                }\n            }\n            throw ChecksumException.getChecksumInstance();\n        }\n        static createBarcodeMatrix(detectionResult) {\n            // let barcodeMatrix: BarcodeValue[][] =\n            // new BarcodeValue[detectionResult.getBarcodeRowCount()][detectionResult.getBarcodeColumnCount() + 2];\n            let barcodeMatrix = Array.from({ length: detectionResult.getBarcodeRowCount() }, () => new Array(detectionResult.getBarcodeColumnCount() + 2));\n            for (let row /*int*/ = 0; row < barcodeMatrix.length; row++) {\n                for (let column /*int*/ = 0; column < barcodeMatrix[row].length; column++) {\n                    barcodeMatrix[row][column] = new BarcodeValue();\n                }\n            }\n            let column = 0;\n            for (let detectionResultColumn /*DetectionResultColumn*/ of detectionResult.getDetectionResultColumns()) {\n                if (detectionResultColumn != null) {\n                    for (let codeword /*Codeword*/ of detectionResultColumn.getCodewords()) {\n                        if (codeword != null) {\n                            let rowNumber = codeword.getRowNumber();\n                            if (rowNumber >= 0) {\n                                if (rowNumber >= barcodeMatrix.length) {\n                                    // We have more rows than the barcode metadata allows for, ignore them.\n                                    continue;\n                                }\n                                barcodeMatrix[rowNumber][column].setValue(codeword.getValue());\n                            }\n                        }\n                    }\n                }\n                column++;\n            }\n            return barcodeMatrix;\n        }\n        static isValidBarcodeColumn(detectionResult, barcodeColumn) {\n            return barcodeColumn >= 0 && barcodeColumn <= detectionResult.getBarcodeColumnCount() + 1;\n        }\n        static getStartColumn(detectionResult, barcodeColumn, imageRow, leftToRight) {\n            let offset = leftToRight ? 1 : -1;\n            let codeword = null;\n            if (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                codeword = detectionResult.getDetectionResultColumn(barcodeColumn - offset).getCodeword(imageRow);\n            }\n            if (codeword != null) {\n                return leftToRight ? codeword.getEndX() : codeword.getStartX();\n            }\n            codeword = detectionResult.getDetectionResultColumn(barcodeColumn).getCodewordNearby(imageRow);\n            if (codeword != null) {\n                return leftToRight ? codeword.getStartX() : codeword.getEndX();\n            }\n            if (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                codeword = detectionResult.getDetectionResultColumn(barcodeColumn - offset).getCodewordNearby(imageRow);\n            }\n            if (codeword != null) {\n                return leftToRight ? codeword.getEndX() : codeword.getStartX();\n            }\n            let skippedColumns = 0;\n            while (PDF417ScanningDecoder.isValidBarcodeColumn(detectionResult, barcodeColumn - offset)) {\n                barcodeColumn -= offset;\n                for (let previousRowCodeword /*Codeword*/ of detectionResult.getDetectionResultColumn(barcodeColumn).getCodewords()) {\n                    if (previousRowCodeword != null) {\n                        return (leftToRight ? previousRowCodeword.getEndX() : previousRowCodeword.getStartX()) +\n                            offset *\n                                skippedColumns *\n                                (previousRowCodeword.getEndX() - previousRowCodeword.getStartX());\n                    }\n                }\n                skippedColumns++;\n            }\n            return leftToRight ? detectionResult.getBoundingBox().getMinX() : detectionResult.getBoundingBox().getMaxX();\n        }\n        static detectCodeword(image, minColumn, maxColumn, leftToRight, startColumn, imageRow, minCodewordWidth, maxCodewordWidth) {\n            startColumn = PDF417ScanningDecoder.adjustCodewordStartColumn(image, minColumn, maxColumn, leftToRight, startColumn, imageRow);\n            // we usually know fairly exact now how long a codeword is. We should provide minimum and maximum expected length\n            // and try to adjust the read pixels, e.g. remove single pixel errors or try to cut off exceeding pixels.\n            // min and maxCodewordWidth should not be used as they are calculated for the whole barcode an can be inaccurate\n            // for the current position\n            let moduleBitCount = PDF417ScanningDecoder.getModuleBitCount(image, minColumn, maxColumn, leftToRight, startColumn, imageRow);\n            if (moduleBitCount == null) {\n                return null;\n            }\n            let endColumn;\n            let codewordBitCount = MathUtils.sum(moduleBitCount);\n            if (leftToRight) {\n                endColumn = startColumn + codewordBitCount;\n            }\n            else {\n                for (let i /*int*/ = 0; i < moduleBitCount.length / 2; i++) {\n                    let tmpCount = moduleBitCount[i];\n                    moduleBitCount[i] = moduleBitCount[moduleBitCount.length - 1 - i];\n                    moduleBitCount[moduleBitCount.length - 1 - i] = tmpCount;\n                }\n                endColumn = startColumn;\n                startColumn = endColumn - codewordBitCount;\n            }\n            // TODO implement check for width and correction of black and white bars\n            // use start (and maybe stop pattern) to determine if black bars are wider than white bars. If so, adjust.\n            // should probably done only for codewords with a lot more than 17 bits.\n            // The following fixes 10-1.png, which has wide black bars and small white bars\n            //    for (let i /*int*/ = 0; i < moduleBitCount.length; i++) {\n            //      if (i % 2 === 0) {\n            //        moduleBitCount[i]--;\n            //      } else {\n            //        moduleBitCount[i]++;\n            //      }\n            //    }\n            // We could also use the width of surrounding codewords for more accurate results, but this seems\n            // sufficient for now\n            if (!PDF417ScanningDecoder.checkCodewordSkew(codewordBitCount, minCodewordWidth, maxCodewordWidth)) {\n                // We could try to use the startX and endX position of the codeword in the same column in the previous row,\n                // create the bit count from it and normalize it to 8. This would help with single pixel errors.\n                return null;\n            }\n            let decodedValue = PDF417CodewordDecoder.getDecodedValue(moduleBitCount);\n            let codeword = PDF417Common.getCodeword(decodedValue);\n            if (codeword === -1) {\n                return null;\n            }\n            return new Codeword(startColumn, endColumn, PDF417ScanningDecoder.getCodewordBucketNumber(decodedValue), codeword);\n        }\n        static getModuleBitCount(image, minColumn, maxColumn, leftToRight, startColumn, imageRow) {\n            let imageColumn = startColumn;\n            let moduleBitCount = new Int32Array(8);\n            let moduleNumber = 0;\n            let increment = leftToRight ? 1 : -1;\n            let previousPixelValue = leftToRight;\n            while ((leftToRight ? imageColumn < maxColumn : imageColumn >= minColumn) &&\n                moduleNumber < moduleBitCount.length) {\n                if (image.get(imageColumn, imageRow) === previousPixelValue) {\n                    moduleBitCount[moduleNumber]++;\n                    imageColumn += increment;\n                }\n                else {\n                    moduleNumber++;\n                    previousPixelValue = !previousPixelValue;\n                }\n            }\n            if (moduleNumber === moduleBitCount.length ||\n                ((imageColumn === (leftToRight ? maxColumn : minColumn)) &&\n                    moduleNumber === moduleBitCount.length - 1)) {\n                return moduleBitCount;\n            }\n            return null;\n        }\n        static getNumberOfECCodeWords(barcodeECLevel) {\n            return 2 << barcodeECLevel;\n        }\n        static adjustCodewordStartColumn(image, minColumn, maxColumn, leftToRight, codewordStartColumn, imageRow) {\n            let correctedStartColumn = codewordStartColumn;\n            let increment = leftToRight ? -1 : 1;\n            // there should be no black pixels before the start column. If there are, then we need to start earlier.\n            for (let i /*int*/ = 0; i < 2; i++) {\n                while ((leftToRight ? correctedStartColumn >= minColumn : correctedStartColumn < maxColumn) &&\n                    leftToRight === image.get(correctedStartColumn, imageRow)) {\n                    if (Math.abs(codewordStartColumn - correctedStartColumn) > PDF417ScanningDecoder.CODEWORD_SKEW_SIZE) {\n                        return codewordStartColumn;\n                    }\n                    correctedStartColumn += increment;\n                }\n                increment = -increment;\n                leftToRight = !leftToRight;\n            }\n            return correctedStartColumn;\n        }\n        static checkCodewordSkew(codewordSize, minCodewordWidth, maxCodewordWidth) {\n            return minCodewordWidth - PDF417ScanningDecoder.CODEWORD_SKEW_SIZE <= codewordSize &&\n                codewordSize <= maxCodewordWidth + PDF417ScanningDecoder.CODEWORD_SKEW_SIZE;\n        }\n        /**\n         * @throws FormatException,\n         * @throws ChecksumException\n         */\n        static decodeCodewords(codewords, ecLevel, erasures) {\n            if (codewords.length === 0) {\n                throw FormatException.getFormatInstance();\n            }\n            let numECCodewords = 1 << (ecLevel + 1);\n            let correctedErrorsCount = PDF417ScanningDecoder.correctErrors(codewords, erasures, numECCodewords);\n            PDF417ScanningDecoder.verifyCodewordCount(codewords, numECCodewords);\n            // Decode the codewords\n            let decoderResult = DecodedBitStreamParser$2.decode(codewords, '' + ecLevel);\n            decoderResult.setErrorsCorrected(correctedErrorsCount);\n            decoderResult.setErasures(erasures.length);\n            return decoderResult;\n        }\n        /**\n         * <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to\n         * correct the errors in-place.</p>\n         *\n         * @param codewords   data and error correction codewords\n         * @param erasures positions of any known erasures\n         * @param numECCodewords number of error correction codewords that are available in codewords\n         * @throws ChecksumException if error correction fails\n         */\n        static correctErrors(codewords, erasures, numECCodewords) {\n            if (erasures != null &&\n                erasures.length > numECCodewords / 2 + PDF417ScanningDecoder.MAX_ERRORS ||\n                numECCodewords < 0 ||\n                numECCodewords > PDF417ScanningDecoder.MAX_EC_CODEWORDS) {\n                // Too many errors or EC Codewords is corrupted\n                throw ChecksumException.getChecksumInstance();\n            }\n            return PDF417ScanningDecoder.errorCorrection.decode(codewords, numECCodewords, erasures);\n        }\n        /**\n         * Verify that all is OK with the codeword array.\n         * @throws FormatException\n         */\n        static verifyCodewordCount(codewords, numECCodewords) {\n            if (codewords.length < 4) {\n                // Codeword array size should be at least 4 allowing for\n                // Count CW, At least one Data CW, Error Correction CW, Error Correction CW\n                throw FormatException.getFormatInstance();\n            }\n            // The first codeword, the Symbol Length Descriptor, shall always encode the total number of data\n            // codewords in the symbol, including the Symbol Length Descriptor itself, data codewords and pad\n            // codewords, but excluding the number of error correction codewords.\n            let numberOfCodewords = codewords[0];\n            if (numberOfCodewords > codewords.length) {\n                throw FormatException.getFormatInstance();\n            }\n            if (numberOfCodewords === 0) {\n                // Reset to the length of the array - 8 (Allow for at least level 3 Error Correction (8 Error Codewords)\n                if (numECCodewords < codewords.length) {\n                    codewords[0] = codewords.length - numECCodewords;\n                }\n                else {\n                    throw FormatException.getFormatInstance();\n                }\n            }\n        }\n        static getBitCountForCodeword(codeword) {\n            let result = new Int32Array(8);\n            let previousValue = 0;\n            let i = result.length - 1;\n            while (true) {\n                if ((codeword & 0x1) !== previousValue) {\n                    previousValue = codeword & 0x1;\n                    i--;\n                    if (i < 0) {\n                        break;\n                    }\n                }\n                result[i]++;\n                codeword >>= 1;\n            }\n            return result;\n        }\n        static getCodewordBucketNumber(codeword) {\n            if (codeword instanceof Int32Array) {\n                return this.getCodewordBucketNumber_Int32Array(codeword);\n            }\n            return this.getCodewordBucketNumber_number(codeword);\n        }\n        static getCodewordBucketNumber_number(codeword) {\n            return PDF417ScanningDecoder.getCodewordBucketNumber(PDF417ScanningDecoder.getBitCountForCodeword(codeword));\n        }\n        static getCodewordBucketNumber_Int32Array(moduleBitCount) {\n            return (moduleBitCount[0] - moduleBitCount[2] + moduleBitCount[4] - moduleBitCount[6] + 9) % 9;\n        }\n        static toString(barcodeMatrix) {\n            let formatter = new Formatter();\n            // try (let formatter = new Formatter()) {\n            for (let row /*int*/ = 0; row < barcodeMatrix.length; row++) {\n                formatter.format('Row %2d: ', row);\n                for (let column /*int*/ = 0; column < barcodeMatrix[row].length; column++) {\n                    let barcodeValue = barcodeMatrix[row][column];\n                    if (barcodeValue.getValue().length === 0) {\n                        formatter.format('        ', null);\n                    }\n                    else {\n                        formatter.format('%4d(%2d)', barcodeValue.getValue()[0], barcodeValue.getConfidence(barcodeValue.getValue()[0]));\n                    }\n                }\n                formatter.format('%n');\n            }\n            return formatter.toString();\n            // }\n        }\n    }\n    /*final*/ PDF417ScanningDecoder.CODEWORD_SKEW_SIZE = 2;\n    /*final*/ PDF417ScanningDecoder.MAX_ERRORS = 3;\n    /*final*/ PDF417ScanningDecoder.MAX_EC_CODEWORDS = 512;\n    /*final*/ PDF417ScanningDecoder.errorCorrection = new ErrorCorrection();\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // import java.util.ArrayList;\n    // import java.util.List;\n    // import java.util.Map;\n    /**\n     * This implementation can detect and decode PDF417 codes in an image.\n     *\n     * @author Guenther Grau\n     */\n    /*public final*/ class PDF417Reader {\n        // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n        /**\n         * Locates and decodes a PDF417 code in an image.\n         *\n         * @return a String representing the content encoded by the PDF417 code\n         * @throws NotFoundException if a PDF417 code cannot be found,\n         * @throws FormatException if a PDF417 cannot be decoded\n         * @throws ChecksumException\n         */\n        // @Override\n        decode(image, hints = null) {\n            let result = PDF417Reader.decode(image, hints, false);\n            if (result == null || result.length === 0 || result[0] == null) {\n                throw NotFoundException.getNotFoundInstance();\n            }\n            return result[0];\n        }\n        /**\n         *\n         * @param BinaryBitmap\n         * @param image\n         * @throws NotFoundException\n         */\n        //   @Override\n        decodeMultiple(image, hints = null) {\n            try {\n                return PDF417Reader.decode(image, hints, true);\n            }\n            catch (ignored) {\n                if (ignored instanceof FormatException || ignored instanceof ChecksumException) {\n                    throw NotFoundException.getNotFoundInstance();\n                }\n                throw ignored;\n            }\n        }\n        /**\n         *\n         * @param image\n         * @param hints\n         * @param multiple\n         *\n         * @throws NotFoundException\n         * @throws FormatExceptionß\n         * @throws ChecksumException\n         */\n        static decode(image, hints, multiple) {\n            const results = new Array();\n            const detectorResult = Detector$3.detectMultiple(image, hints, multiple);\n            for (const points of detectorResult.getPoints()) {\n                const decoderResult = PDF417ScanningDecoder.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n                const result = new Result(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat$1.PDF_417);\n                result.putMetadata(ResultMetadataType$1.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n                const pdf417ResultMetadata = decoderResult.getOther();\n                if (pdf417ResultMetadata != null) {\n                    result.putMetadata(ResultMetadataType$1.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n                }\n                results.push(result);\n            }\n            return results.map(x => x);\n        }\n        static getMaxWidth(p1, p2) {\n            if (p1 == null || p2 == null) {\n                return 0;\n            }\n            return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n        }\n        static getMinWidth(p1, p2) {\n            if (p1 == null || p2 == null) {\n                return Integer.MAX_VALUE;\n            }\n            return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n        }\n        static getMaxCodewordWidth(p) {\n            return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN)));\n        }\n        static getMinCodewordWidth(p) {\n            return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common.MODULES_IN_CODEWORD /\n                PDF417Common.MODULES_IN_STOP_PATTERN)));\n        }\n        // @Override\n        reset() {\n            // nothing needs to be reset\n        }\n    }\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class ReaderException extends Exception {\n    }\n    ReaderException.kind = 'ReaderException';\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * MultiFormatReader is a convenience class and the main entry point into the library for most uses.\n     * By default it attempts to decode all barcode formats that the library supports. Optionally, you\n     * can provide a hints object to request different behavior, for example only decoding QR codes.\n     *\n     * @author Sean Owen\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class MultiFormatReader {\n        /**\n         * This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it\n         * passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly.\n         * Use setHints() followed by decodeWithState() for continuous scan applications.\n         *\n         * @param image The pixel data to decode\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        /*@Override*/\n        // public decode(image: BinaryBitmap): Result {\n        //   setHints(null)\n        //   return decodeInternal(image)\n        // }\n        /**\n         * Decode an image using the hints provided. Does not honor existing state.\n         *\n         * @param image The pixel data to decode\n         * @param hints The hints to use, clearing the previous state.\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        /*@Override*/\n        decode(image, hints) {\n            this.setHints(hints);\n            return this.decodeInternal(image);\n        }\n        /**\n         * Decode an image using the state set up by calling setHints() previously. Continuous scan\n         * clients will get a <b>large</b> speed increase by using this instead of decode().\n         *\n         * @param image The pixel data to decode\n         * @return The contents of the image\n         *\n         * @throws NotFoundException Any errors which occurred\n         */\n        decodeWithState(image) {\n            // Make sure to set up the default state so we don't crash\n            if (this.readers === null || this.readers === undefined) {\n                this.setHints(null);\n            }\n            return this.decodeInternal(image);\n        }\n        /**\n         * This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls\n         * to decodeWithState(image) can reuse the same set of readers without reallocating memory. This\n         * is important for performance in continuous scan clients.\n         *\n         * @param hints The set of hints to use for subsequent calls to decode(image)\n         */\n        setHints(hints) {\n            this.hints = hints;\n            const tryHarder = hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType$1.TRY_HARDER);\n            /*@SuppressWarnings(\"unchecked\")*/\n            const formats = hints === null || hints === undefined ? null : hints.get(DecodeHintType$1.POSSIBLE_FORMATS);\n            const readers = new Array();\n            if (formats !== null && formats !== undefined) {\n                const addOneDReader = formats.some(f => f === BarcodeFormat$1.UPC_A ||\n                    f === BarcodeFormat$1.UPC_E ||\n                    f === BarcodeFormat$1.EAN_13 ||\n                    f === BarcodeFormat$1.EAN_8 ||\n                    f === BarcodeFormat$1.CODABAR ||\n                    f === BarcodeFormat$1.CODE_39 ||\n                    f === BarcodeFormat$1.CODE_93 ||\n                    f === BarcodeFormat$1.CODE_128 ||\n                    f === BarcodeFormat$1.ITF ||\n                    f === BarcodeFormat$1.RSS_14 ||\n                    f === BarcodeFormat$1.RSS_EXPANDED);\n                // Put 1D readers upfront in \"normal\" mode\n                // TYPESCRIPTPORT: TODO: uncomment below as they are ported\n                if (addOneDReader && !tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints));\n                }\n                if (formats.includes(BarcodeFormat$1.QR_CODE)) {\n                    readers.push(new QRCodeReader());\n                }\n                if (formats.includes(BarcodeFormat$1.DATA_MATRIX)) {\n                    readers.push(new DataMatrixReader());\n                }\n                if (formats.includes(BarcodeFormat$1.AZTEC)) {\n                    readers.push(new AztecReader());\n                }\n                if (formats.includes(BarcodeFormat$1.PDF_417)) {\n                    readers.push(new PDF417Reader());\n                }\n                // if (formats.includes(BarcodeFormat.MAXICODE)) {\n                //    readers.push(new MaxiCodeReader())\n                // }\n                // At end in \"try harder\" mode\n                if (addOneDReader && tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints));\n                }\n            }\n            if (readers.length === 0) {\n                if (!tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints));\n                }\n                readers.push(new QRCodeReader());\n                readers.push(new DataMatrixReader());\n                readers.push(new AztecReader());\n                readers.push(new PDF417Reader());\n                // readers.push(new MaxiCodeReader())\n                if (tryHarder) {\n                    readers.push(new MultiFormatOneDReader(hints));\n                }\n            }\n            this.readers = readers; // .toArray(new Reader[readers.size()])\n        }\n        /*@Override*/\n        reset() {\n            if (this.readers !== null) {\n                for (const reader of this.readers) {\n                    reader.reset();\n                }\n            }\n        }\n        /**\n         * @throws NotFoundException\n         */\n        decodeInternal(image) {\n            if (this.readers === null) {\n                throw new ReaderException('No readers where selected, nothing can be read.');\n            }\n            for (const reader of this.readers) {\n                // Trying to decode with ${reader} reader.\n                try {\n                    return reader.decode(image, this.hints);\n                }\n                catch (ex) {\n                    if (ex instanceof ReaderException) {\n                        continue;\n                    }\n                    // Bad Exception.\n                }\n            }\n            throw new NotFoundException('No MultiFormat Readers were able to detect the code.');\n        }\n    }\n\n    class BrowserMultiFormatReader extends BrowserCodeReader {\n        constructor(hints = null, timeBetweenScansMillis = 500) {\n            const reader = new MultiFormatReader();\n            reader.setHints(hints);\n            super(reader, timeBetweenScansMillis);\n        }\n        /**\n         * Overwrite decodeBitmap to call decodeWithState, which will pay\n         * attention to the hints set in the constructor function\n         */\n        decodeBitmap(binaryBitmap) {\n            return this.reader.decodeWithState(binaryBitmap);\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserPDF417Reader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserPDF417Reader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new PDF417Reader(), timeBetweenScansMillis);\n        }\n    }\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     *\n     * QR Code reader to use from browser.\n     */\n    class BrowserQRCodeReader extends BrowserCodeReader {\n        /**\n         * Creates an instance of BrowserQRCodeReader.\n         * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n         */\n        constructor(timeBetweenScansMillis = 500) {\n            super(new QRCodeReader(), timeBetweenScansMillis);\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing {*/\n    /**\n     * These are a set of hints that you may pass to Writers to specify their behavior.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    var EncodeHintType;\n    (function (EncodeHintType) {\n        /**\n         * Specifies what degree of error correction to use, for example in QR Codes.\n         * Type depends on the encoder. For example for QR codes it's type\n         * {@link com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ErrorCorrectionLevel}.\n         * For Aztec it is of type {@link Integer}, representing the minimal percentage of error correction words.\n         * For PDF417 it is of type {@link Integer}, valid values being 0 to 8.\n         * In all cases, it can also be a {@link String} representation of the desired value as well.\n         * Note: an Aztec symbol should have a minimum of 25% EC words.\n         */\n        EncodeHintType[EncodeHintType[\"ERROR_CORRECTION\"] = 0] = \"ERROR_CORRECTION\";\n        /**\n         * Specifies what character encoding to use where applicable (type {@link String})\n         */\n        EncodeHintType[EncodeHintType[\"CHARACTER_SET\"] = 1] = \"CHARACTER_SET\";\n        /**\n         * Specifies the matrix shape for Data Matrix (type {@link com.google.zxing.datamatrix.encoder.SymbolShapeHint})\n         */\n        EncodeHintType[EncodeHintType[\"DATA_MATRIX_SHAPE\"] = 2] = \"DATA_MATRIX_SHAPE\";\n        /**\n         * Specifies a minimum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\n         *\n         * @deprecated use width/height params in\n         * {@link com.google.zxing.datamatrix.DataMatrixWriter#encode(String, BarcodeFormat, int, int)}\n         */\n        /*@Deprecated*/\n        EncodeHintType[EncodeHintType[\"MIN_SIZE\"] = 3] = \"MIN_SIZE\";\n        /**\n         * Specifies a maximum barcode size (type {@link Dimension}). Only applicable to Data Matrix now.\n         *\n         * @deprecated without replacement\n         */\n        /*@Deprecated*/\n        EncodeHintType[EncodeHintType[\"MAX_SIZE\"] = 4] = \"MAX_SIZE\";\n        /**\n         * Specifies margin, in pixels, to use when generating the barcode. The meaning can vary\n         * by format; for example it controls margin before and after the barcode horizontally for\n         * most 1D formats. (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"MARGIN\"] = 5] = \"MARGIN\";\n        /**\n         * Specifies whether to use compact mode for PDF417 (type {@link Boolean}, or \"true\" or \"false\"\n         * {@link String} value).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_COMPACT\"] = 6] = \"PDF417_COMPACT\";\n        /**\n         * Specifies what compaction mode to use for PDF417 (type\n         * {@link com.google.zxing.pdf417.encoder.Compaction Compaction} or {@link String} value of one of its\n         * enum values).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_COMPACTION\"] = 7] = \"PDF417_COMPACTION\";\n        /**\n         * Specifies the minimum and maximum number of rows and columns for PDF417 (type\n         * {@link com.google.zxing.pdf417.encoder.Dimensions Dimensions}).\n         */\n        EncodeHintType[EncodeHintType[\"PDF417_DIMENSIONS\"] = 8] = \"PDF417_DIMENSIONS\";\n        /**\n         * Specifies the required number of layers for an Aztec code.\n         * A negative number (-1, -2, -3, -4) specifies a compact Aztec code.\n         * 0 indicates to use the minimum number of layers (the default).\n         * A positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code.\n         * (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"AZTEC_LAYERS\"] = 9] = \"AZTEC_LAYERS\";\n        /**\n         * Specifies the exact version of QR code to be encoded.\n         * (Type {@link Integer}, or {@link String} representation of the integer value).\n         */\n        EncodeHintType[EncodeHintType[\"QR_VERSION\"] = 10] = \"QR_VERSION\";\n    })(EncodeHintType || (EncodeHintType = {}));\n    var EncodeHintType$1 = EncodeHintType;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * <p>Implements Reed-Solomon encoding, as the name implies.</p>\n     *\n     * @author Sean Owen\n     * @author William Rucklidge\n     */\n    class ReedSolomonEncoder {\n        /**\n         * A reed solomon error-correcting encoding constructor is created by\n         * passing as Galois Field with of size equal to the number of code\n         * words (symbols) in the alphabet (the number of values in each\n         * element of arrays that are encoded/decoded).\n         * @param field A galois field with a number of elements equal to the size\n         * of the alphabet of symbols to encode.\n         */\n        constructor(field) {\n            this.field = field;\n            this.cachedGenerators = [];\n            this.cachedGenerators.push(new GenericGFPoly(field, Int32Array.from([1])));\n        }\n        buildGenerator(degree /*int*/) {\n            const cachedGenerators = this.cachedGenerators;\n            if (degree >= cachedGenerators.length) {\n                let lastGenerator = cachedGenerators[cachedGenerators.length - 1];\n                const field = this.field;\n                for (let d = cachedGenerators.length; d <= degree; d++) {\n                    const nextGenerator = lastGenerator.multiply(new GenericGFPoly(field, Int32Array.from([1, field.exp(d - 1 + field.getGeneratorBase())])));\n                    cachedGenerators.push(nextGenerator);\n                    lastGenerator = nextGenerator;\n                }\n            }\n            return cachedGenerators[degree];\n        }\n        /**\n         * <p>Encode a sequence of code words (symbols) using Reed-Solomon to allow decoders\n         * to detect and correct errors that may have been introduced when the resulting\n         * data is stored or transmitted.</p>\n         *\n         * @param toEncode array used for both and output. Caller initializes the array with\n         * the code words (symbols) to be encoded followed by empty elements allocated to make\n         * space for error-correction code words in the encoded output. The array contains\n         * the encdoded output when encode returns. Code words are encoded as numbers from\n         * 0 to n-1, where n is the number of possible code words (symbols), as determined\n         * by the size of the Galois Field passed in the constructor of this object.\n         * @param ecBytes the number of elements reserved in the array (first parameter)\n         * to store error-correction code words. Thus, the number of code words (symbols)\n         * to encode in the first parameter is thus toEncode.length - ecBytes.\n         * Note, the use of \"bytes\" in the name of this parameter is misleading, as there may\n         * be more or fewer than 256 symbols being encoded, as determined by the number of\n         * elements in the Galois Field passed as a constructor to this object.\n         * @throws IllegalArgumentException thrown in response to validation errros.\n         */\n        encode(toEncode, ecBytes /*int*/) {\n            if (ecBytes === 0) {\n                throw new IllegalArgumentException('No error correction bytes');\n            }\n            const dataBytes = toEncode.length - ecBytes;\n            if (dataBytes <= 0) {\n                throw new IllegalArgumentException('No data bytes provided');\n            }\n            const generator = this.buildGenerator(ecBytes);\n            const infoCoefficients = new Int32Array(dataBytes);\n            System.arraycopy(toEncode, 0, infoCoefficients, 0, dataBytes);\n            let info = new GenericGFPoly(this.field, infoCoefficients);\n            info = info.multiplyByMonomial(ecBytes, 1);\n            const remainder = info.divide(generator)[1];\n            const coefficients = remainder.getCoefficients();\n            const numZeroCoefficients = ecBytes - coefficients.length;\n            for (let i = 0; i < numZeroCoefficients; i++) {\n                toEncode[dataBytes + i] = 0;\n            }\n            System.arraycopy(coefficients, 0, toEncode, dataBytes + numZeroCoefficients, coefficients.length);\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author Satoru Takabayashi\n     * @author Daniel Switkin\n     * @author Sean Owen\n     */\n    class MaskUtil {\n        constructor() {\n            // do nothing\n        }\n        /**\n         * Apply mask penalty rule 1 and return the penalty. Find repetitive cells with the same color and\n         * give penalty to them. Example: 00000 or 11111.\n         */\n        static applyMaskPenaltyRule1(matrix) {\n            return MaskUtil.applyMaskPenaltyRule1Internal(matrix, true) + MaskUtil.applyMaskPenaltyRule1Internal(matrix, false);\n        }\n        /**\n         * Apply mask penalty rule 2 and return the penalty. Find 2x2 blocks with the same color and give\n         * penalty to them. This is actually equivalent to the spec's rule, which is to find MxN blocks and give a\n         * penalty proportional to (M-1)x(N-1), because this is the number of 2x2 blocks inside such a block.\n         */\n        static applyMaskPenaltyRule2(matrix) {\n            let penalty = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height - 1; y++) {\n                const arrayY = array[y];\n                for (let x = 0; x < width - 1; x++) {\n                    const value = arrayY[x];\n                    if (value === arrayY[x + 1] && value === array[y + 1][x] && value === array[y + 1][x + 1]) {\n                        penalty++;\n                    }\n                }\n            }\n            return MaskUtil.N2 * penalty;\n        }\n        /**\n         * Apply mask penalty rule 3 and return the penalty. Find consecutive runs of 1:1:3:1:1:4\n         * starting with black, or 4:1:1:3:1:1 starting with white, and give penalty to them.  If we\n         * find patterns like 000010111010000, we give penalty once.\n         */\n        static applyMaskPenaltyRule3(matrix) {\n            let numPenalties = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height; y++) {\n                for (let x = 0; x < width; x++) {\n                    const arrayY = array[y]; // We can at least optimize this access\n                    if (x + 6 < width &&\n                        arrayY[x] === 1 &&\n                        arrayY[x + 1] === 0 &&\n                        arrayY[x + 2] === 1 &&\n                        arrayY[x + 3] === 1 &&\n                        arrayY[x + 4] === 1 &&\n                        arrayY[x + 5] === 0 &&\n                        arrayY[x + 6] === 1 &&\n                        (MaskUtil.isWhiteHorizontal(arrayY, x - 4, x) || MaskUtil.isWhiteHorizontal(arrayY, x + 7, x + 11))) {\n                        numPenalties++;\n                    }\n                    if (y + 6 < height &&\n                        array[y][x] === 1 &&\n                        array[y + 1][x] === 0 &&\n                        array[y + 2][x] === 1 &&\n                        array[y + 3][x] === 1 &&\n                        array[y + 4][x] === 1 &&\n                        array[y + 5][x] === 0 &&\n                        array[y + 6][x] === 1 &&\n                        (MaskUtil.isWhiteVertical(array, x, y - 4, y) || MaskUtil.isWhiteVertical(array, x, y + 7, y + 11))) {\n                        numPenalties++;\n                    }\n                }\n            }\n            return numPenalties * MaskUtil.N3;\n        }\n        static isWhiteHorizontal(rowArray, from /*int*/, to /*int*/) {\n            from = Math.max(from, 0);\n            to = Math.min(to, rowArray.length);\n            for (let i = from; i < to; i++) {\n                if (rowArray[i] === 1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static isWhiteVertical(array, col /*int*/, from /*int*/, to /*int*/) {\n            from = Math.max(from, 0);\n            to = Math.min(to, array.length);\n            for (let i = from; i < to; i++) {\n                if (array[i][col] === 1) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n         * Apply mask penalty rule 4 and return the penalty. Calculate the ratio of dark cells and give\n         * penalty if the ratio is far from 50%. It gives 10 penalty for 5% distance.\n         */\n        static applyMaskPenaltyRule4(matrix) {\n            let numDarkCells = 0;\n            const array = matrix.getArray();\n            const width = matrix.getWidth();\n            const height = matrix.getHeight();\n            for (let y = 0; y < height; y++) {\n                const arrayY = array[y];\n                for (let x = 0; x < width; x++) {\n                    if (arrayY[x] === 1) {\n                        numDarkCells++;\n                    }\n                }\n            }\n            const numTotalCells = matrix.getHeight() * matrix.getWidth();\n            const fivePercentVariances = Math.floor(Math.abs(numDarkCells * 2 - numTotalCells) * 10 / numTotalCells);\n            return fivePercentVariances * MaskUtil.N4;\n        }\n        /**\n         * Return the mask bit for \"getMaskPattern\" at \"x\" and \"y\". See 8.8 of JISX0510:2004 for mask\n         * pattern conditions.\n         */\n        static getDataMaskBit(maskPattern /*int*/, x /*int*/, y /*int*/) {\n            let intermediate; /*int*/\n            let temp; /*int*/\n            switch (maskPattern) {\n                case 0:\n                    intermediate = (y + x) & 0x1;\n                    break;\n                case 1:\n                    intermediate = y & 0x1;\n                    break;\n                case 2:\n                    intermediate = x % 3;\n                    break;\n                case 3:\n                    intermediate = (y + x) % 3;\n                    break;\n                case 4:\n                    intermediate = (Math.floor(y / 2) + Math.floor(x / 3)) & 0x1;\n                    break;\n                case 5:\n                    temp = y * x;\n                    intermediate = (temp & 0x1) + (temp % 3);\n                    break;\n                case 6:\n                    temp = y * x;\n                    intermediate = ((temp & 0x1) + (temp % 3)) & 0x1;\n                    break;\n                case 7:\n                    temp = y * x;\n                    intermediate = ((temp % 3) + ((y + x) & 0x1)) & 0x1;\n                    break;\n                default:\n                    throw new IllegalArgumentException('Invalid mask pattern: ' + maskPattern);\n            }\n            return intermediate === 0;\n        }\n        /**\n         * Helper function for applyMaskPenaltyRule1. We need this for doing this calculation in both\n         * vertical and horizontal orders respectively.\n         */\n        static applyMaskPenaltyRule1Internal(matrix, isHorizontal) {\n            let penalty = 0;\n            const iLimit = isHorizontal ? matrix.getHeight() : matrix.getWidth();\n            const jLimit = isHorizontal ? matrix.getWidth() : matrix.getHeight();\n            const array = matrix.getArray();\n            for (let i = 0; i < iLimit; i++) {\n                let numSameBitCells = 0;\n                let prevBit = -1;\n                for (let j = 0; j < jLimit; j++) {\n                    const bit = isHorizontal ? array[i][j] : array[j][i];\n                    if (bit === prevBit) {\n                        numSameBitCells++;\n                    }\n                    else {\n                        if (numSameBitCells >= 5) {\n                            penalty += MaskUtil.N1 + (numSameBitCells - 5);\n                        }\n                        numSameBitCells = 1; // Include the cell itself.\n                        prevBit = bit;\n                    }\n                }\n                if (numSameBitCells >= 5) {\n                    penalty += MaskUtil.N1 + (numSameBitCells - 5);\n                }\n            }\n            return penalty;\n        }\n    }\n    // Penalty weights from section 6.8.2.1\n    MaskUtil.N1 = 3;\n    MaskUtil.N2 = 3;\n    MaskUtil.N3 = 40;\n    MaskUtil.N4 = 10;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned\n     * -1, 0, and 1, I'm going to use less memory and go with bytes.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class ByteMatrix {\n        constructor(width /*int*/, height /*int*/) {\n            this.width = width;\n            this.height = height;\n            const bytes = new Array(height); // [height][width]\n            for (let i = 0; i !== height; i++) {\n                bytes[i] = new Uint8Array(width);\n            }\n            this.bytes = bytes;\n        }\n        getHeight() {\n            return this.height;\n        }\n        getWidth() {\n            return this.width;\n        }\n        get(x /*int*/, y /*int*/) {\n            return this.bytes[y][x];\n        }\n        /**\n         * @return an internal representation as bytes, in row-major order. array[y][x] represents point (x,y)\n         */\n        getArray() {\n            return this.bytes;\n        }\n        // TYPESCRIPTPORT: preffer to let two methods instead of override to avoid type comparison inside\n        setNumber(x /*int*/, y /*int*/, value /*byte|int*/) {\n            this.bytes[y][x] = value;\n        }\n        // public set(x: number /*int*/, y: number /*int*/, value: number /*int*/): void {\n        //   bytes[y][x] = (byte) value\n        // }\n        setBoolean(x /*int*/, y /*int*/, value) {\n            this.bytes[y][x] = /*(byte) */ (value ? 1 : 0);\n        }\n        clear(value /*byte*/) {\n            for (const aByte of this.bytes) {\n                Arrays.fill(aByte, value);\n            }\n        }\n        equals(o) {\n            if (!(o instanceof ByteMatrix)) {\n                return false;\n            }\n            const other = o;\n            if (this.width !== other.width) {\n                return false;\n            }\n            if (this.height !== other.height) {\n                return false;\n            }\n            for (let y = 0, height = this.height; y < height; ++y) {\n                const bytesY = this.bytes[y];\n                const otherBytesY = other.bytes[y];\n                for (let x = 0, width = this.width; x < width; ++x) {\n                    if (bytesY[x] !== otherBytesY[x]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        /*@Override*/\n        toString() {\n            const result = new StringBuilder(); // (2 * width * height + 2)\n            for (let y = 0, height = this.height; y < height; ++y) {\n                const bytesY = this.bytes[y];\n                for (let x = 0, width = this.width; x < width; ++x) {\n                    switch (bytesY[x]) {\n                        case 0:\n                            result.append(' 0');\n                            break;\n                        case 1:\n                            result.append(' 1');\n                            break;\n                        default:\n                            result.append('  ');\n                            break;\n                    }\n                }\n                result.append('\\n');\n            }\n            return result.toString();\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class QRCode {\n        constructor() {\n            this.maskPattern = -1;\n        }\n        getMode() {\n            return this.mode;\n        }\n        getECLevel() {\n            return this.ecLevel;\n        }\n        getVersion() {\n            return this.version;\n        }\n        getMaskPattern() {\n            return this.maskPattern;\n        }\n        getMatrix() {\n            return this.matrix;\n        }\n        /*@Override*/\n        toString() {\n            const result = new StringBuilder(); // (200)\n            result.append('<<\\n');\n            result.append(' mode: ');\n            result.append(this.mode ? this.mode.toString() : 'null');\n            result.append('\\n ecLevel: ');\n            result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n            result.append('\\n version: ');\n            result.append(this.version ? this.version.toString() : 'null');\n            result.append('\\n maskPattern: ');\n            result.append(this.maskPattern.toString());\n            if (this.matrix) {\n                result.append('\\n matrix:\\n');\n                result.append(this.matrix.toString());\n            }\n            else {\n                result.append('\\n matrix: null\\n');\n            }\n            result.append('>>\\n');\n            return result.toString();\n        }\n        setMode(value) {\n            this.mode = value;\n        }\n        setECLevel(value) {\n            this.ecLevel = value;\n        }\n        setVersion(version) {\n            this.version = version;\n        }\n        setMaskPattern(value /*int*/) {\n            this.maskPattern = value;\n        }\n        setMatrix(value) {\n            this.matrix = value;\n        }\n        // Check if \"mask_pattern\" is valid.\n        static isValidMaskPattern(maskPattern /*int*/) {\n            return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n        }\n    }\n    QRCode.NUM_MASK_PATTERNS = 8;\n\n    /**\n     * Custom Error class of type Exception.\n     */\n    class WriterException extends Exception {\n    }\n    WriterException.kind = 'WriterException';\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class MatrixUtil {\n        constructor() {\n            // do nothing\n        }\n        // Set all cells to -1 (TYPESCRIPTPORT: 255).  -1 (TYPESCRIPTPORT: 255) means that the cell is empty (not set yet).\n        //\n        // JAVAPORT: We shouldn't need to do this at all. The code should be rewritten to begin encoding\n        // with the ByteMatrix initialized all to zero.\n        static clearMatrix(matrix) {\n            // TYPESCRIPTPORT: we use UintArray se changed here from -1 to 255\n            matrix.clear(/*(byte) */ /*-1*/ 255);\n        }\n        // Build 2D matrix of QR Code from \"dataBits\" with \"ecLevel\", \"version\" and \"getMaskPattern\". On\n        // success, store the result in \"matrix\" and return true.\n        static buildMatrix(dataBits, ecLevel, version, maskPattern /*int*/, matrix) {\n            MatrixUtil.clearMatrix(matrix);\n            MatrixUtil.embedBasicPatterns(version, matrix);\n            // Type information appear with any version.\n            MatrixUtil.embedTypeInfo(ecLevel, maskPattern, matrix);\n            // Version info appear if version >= 7.\n            MatrixUtil.maybeEmbedVersionInfo(version, matrix);\n            // Data should be embedded at end.\n            MatrixUtil.embedDataBits(dataBits, maskPattern, matrix);\n        }\n        // Embed basic patterns. On success, modify the matrix and return true.\n        // The basic patterns are:\n        // - Position detection patterns\n        // - Timing patterns\n        // - Dark dot at the left bottom corner\n        // - Position adjustment patterns, if need be\n        static embedBasicPatterns(version, matrix) {\n            // Let's get started with embedding big squares at corners.\n            MatrixUtil.embedPositionDetectionPatternsAndSeparators(matrix);\n            // Then, embed the dark dot at the left bottom corner.\n            MatrixUtil.embedDarkDotAtLeftBottomCorner(matrix);\n            // Position adjustment patterns appear if version >= 2.\n            MatrixUtil.maybeEmbedPositionAdjustmentPatterns(version, matrix);\n            // Timing patterns should be embedded after position adj. patterns.\n            MatrixUtil.embedTimingPatterns(matrix);\n        }\n        // Embed type information. On success, modify the matrix.\n        static embedTypeInfo(ecLevel, maskPattern /*int*/, matrix) {\n            const typeInfoBits = new BitArray();\n            MatrixUtil.makeTypeInfoBits(ecLevel, maskPattern, typeInfoBits);\n            for (let i = 0, size = typeInfoBits.getSize(); i < size; ++i) {\n                // Place bits in LSB to MSB order.  LSB (least significant bit) is the last value in\n                // \"typeInfoBits\".\n                const bit = typeInfoBits.get(typeInfoBits.getSize() - 1 - i);\n                // Type info bits at the left top corner. See 8.9 of JISX0510:2004 (p.46).\n                const coordinates = MatrixUtil.TYPE_INFO_COORDINATES[i];\n                const x1 = coordinates[0];\n                const y1 = coordinates[1];\n                matrix.setBoolean(x1, y1, bit);\n                if (i < 8) {\n                    // Right top corner.\n                    const x2 = matrix.getWidth() - i - 1;\n                    const y2 = 8;\n                    matrix.setBoolean(x2, y2, bit);\n                }\n                else {\n                    // Left bottom corner.\n                    const x2 = 8;\n                    const y2 = matrix.getHeight() - 7 + (i - 8);\n                    matrix.setBoolean(x2, y2, bit);\n                }\n            }\n        }\n        // Embed version information if need be. On success, modify the matrix and return true.\n        // See 8.10 of JISX0510:2004 (p.47) for how to embed version information.\n        static maybeEmbedVersionInfo(version, matrix) {\n            if (version.getVersionNumber() < 7) { // Version info is necessary if version >= 7.\n                return; // Don't need version info.\n            }\n            const versionInfoBits = new BitArray();\n            MatrixUtil.makeVersionInfoBits(version, versionInfoBits);\n            let bitIndex = 6 * 3 - 1; // It will decrease from 17 to 0.\n            for (let i = 0; i < 6; ++i) {\n                for (let j = 0; j < 3; ++j) {\n                    // Place bits in LSB (least significant bit) to MSB order.\n                    const bit = versionInfoBits.get(bitIndex);\n                    bitIndex--;\n                    // Left bottom corner.\n                    matrix.setBoolean(i, matrix.getHeight() - 11 + j, bit);\n                    // Right bottom corner.\n                    matrix.setBoolean(matrix.getHeight() - 11 + j, i, bit);\n                }\n            }\n        }\n        // Embed \"dataBits\" using \"getMaskPattern\". On success, modify the matrix and return true.\n        // For debugging purposes, it skips masking process if \"getMaskPattern\" is -1(TYPESCRIPTPORT: 255).\n        // See 8.7 of JISX0510:2004 (p.38) for how to embed data bits.\n        static embedDataBits(dataBits, maskPattern /*int*/, matrix) {\n            let bitIndex = 0;\n            let direction = -1;\n            // Start from the right bottom cell.\n            let x = matrix.getWidth() - 1;\n            let y = matrix.getHeight() - 1;\n            while (x > 0) {\n                // Skip the vertical timing pattern.\n                if (x === 6) {\n                    x -= 1;\n                }\n                while (y >= 0 && y < matrix.getHeight()) {\n                    for (let i = 0; i < 2; ++i) {\n                        const xx = x - i;\n                        // Skip the cell if it's not empty.\n                        if (!MatrixUtil.isEmpty(matrix.get(xx, y))) {\n                            continue;\n                        }\n                        let bit;\n                        if (bitIndex < dataBits.getSize()) {\n                            bit = dataBits.get(bitIndex);\n                            ++bitIndex;\n                        }\n                        else {\n                            // Padding bit. If there is no bit left, we'll fill the left cells with 0, as described\n                            // in 8.4.9 of JISX0510:2004 (p. 24).\n                            bit = false;\n                        }\n                        // Skip masking if mask_pattern is -1 (TYPESCRIPTPORT: 255).\n                        if (maskPattern !== 255 && MaskUtil.getDataMaskBit(maskPattern, xx, y)) {\n                            bit = !bit;\n                        }\n                        matrix.setBoolean(xx, y, bit);\n                    }\n                    y += direction;\n                }\n                direction = -direction; // Reverse the direction.\n                y += direction;\n                x -= 2; // Move to the left.\n            }\n            // All bits should be consumed.\n            if (bitIndex !== dataBits.getSize()) {\n                throw new WriterException('Not all bits consumed: ' + bitIndex + '/' + dataBits.getSize());\n            }\n        }\n        // Return the position of the most significant bit set (one: to) in the \"value\". The most\n        // significant bit is position 32. If there is no bit set, return 0. Examples:\n        // - findMSBSet(0) => 0\n        // - findMSBSet(1) => 1\n        // - findMSBSet(255) => 8\n        static findMSBSet(value /*int*/) {\n            return 32 - Integer.numberOfLeadingZeros(value);\n        }\n        // Calculate BCH (Bose-Chaudhuri-Hocquenghem) code for \"value\" using polynomial \"poly\". The BCH\n        // code is used for encoding type information and version information.\n        // Example: Calculation of version information of 7.\n        // f(x) is created from 7.\n        //   - 7 = 000111 in 6 bits\n        //   - f(x) = x^2 + x^1 + x^0\n        // g(x) is given by the standard (p. 67)\n        //   - g(x) = x^12 + x^11 + x^10 + x^9 + x^8 + x^5 + x^2 + 1\n        // Multiply f(x) by x^(18 - 6)\n        //   - f'(x) = f(x) * x^(18 - 6)\n        //   - f'(x) = x^14 + x^13 + x^12\n        // Calculate the remainder of f'(x) / g(x)\n        //         x^2\n        //         __________________________________________________\n        //   g(x) )x^14 + x^13 + x^12\n        //         x^14 + x^13 + x^12 + x^11 + x^10 + x^7 + x^4 + x^2\n        //         --------------------------------------------------\n        //                              x^11 + x^10 + x^7 + x^4 + x^2\n        //\n        // The remainder is x^11 + x^10 + x^7 + x^4 + x^2\n        // Encode it in binary: 110010010100\n        // The return value is 0xc94 (1100 1001 0100)\n        //\n        // Since all coefficients in the polynomials are 1 or 0, we can do the calculation by bit\n        // operations. We don't care if coefficients are positive or negative.\n        static calculateBCHCode(value /*int*/, poly /*int*/) {\n            if (poly === 0) {\n                throw new IllegalArgumentException('0 polynomial');\n            }\n            // If poly is \"1 1111 0010 0101\" (version info poly), msbSetInPoly is 13. We'll subtract 1\n            // from 13 to make it 12.\n            const msbSetInPoly = MatrixUtil.findMSBSet(poly);\n            value <<= msbSetInPoly - 1;\n            // Do the division business using exclusive-or operations.\n            while (MatrixUtil.findMSBSet(value) >= msbSetInPoly) {\n                value ^= poly << (MatrixUtil.findMSBSet(value) - msbSetInPoly);\n            }\n            // Now the \"value\" is the remainder (i.e. the BCH code)\n            return value;\n        }\n        // Make bit vector of type information. On success, store the result in \"bits\" and return true.\n        // Encode error correction level and mask pattern. See 8.9 of\n        // JISX0510:2004 (p.45) for details.\n        static makeTypeInfoBits(ecLevel, maskPattern /*int*/, bits) {\n            if (!QRCode.isValidMaskPattern(maskPattern)) {\n                throw new WriterException('Invalid mask pattern');\n            }\n            const typeInfo = (ecLevel.getBits() << 3) | maskPattern;\n            bits.appendBits(typeInfo, 5);\n            const bchCode = MatrixUtil.calculateBCHCode(typeInfo, MatrixUtil.TYPE_INFO_POLY);\n            bits.appendBits(bchCode, 10);\n            const maskBits = new BitArray();\n            maskBits.appendBits(MatrixUtil.TYPE_INFO_MASK_PATTERN, 15);\n            bits.xor(maskBits);\n            if (bits.getSize() !== 15) { // Just in case.\n                throw new WriterException('should not happen but we got: ' + bits.getSize());\n            }\n        }\n        // Make bit vector of version information. On success, store the result in \"bits\" and return true.\n        // See 8.10 of JISX0510:2004 (p.45) for details.\n        static makeVersionInfoBits(version, bits) {\n            bits.appendBits(version.getVersionNumber(), 6);\n            const bchCode = MatrixUtil.calculateBCHCode(version.getVersionNumber(), MatrixUtil.VERSION_INFO_POLY);\n            bits.appendBits(bchCode, 12);\n            if (bits.getSize() !== 18) { // Just in case.\n                throw new WriterException('should not happen but we got: ' + bits.getSize());\n            }\n        }\n        // Check if \"value\" is empty.\n        static isEmpty(value /*int*/) {\n            return value === 255; // -1\n        }\n        static embedTimingPatterns(matrix) {\n            // -8 is for skipping position detection patterns (7: size), and two horizontal/vertical\n            // separation patterns (1: size). Thus, 8 = 7 + 1.\n            for (let i = 8; i < matrix.getWidth() - 8; ++i) {\n                const bit = (i + 1) % 2;\n                // Horizontal line.\n                if (MatrixUtil.isEmpty(matrix.get(i, 6))) {\n                    matrix.setNumber(i, 6, bit);\n                }\n                // Vertical line.\n                if (MatrixUtil.isEmpty(matrix.get(6, i))) {\n                    matrix.setNumber(6, i, bit);\n                }\n            }\n        }\n        // Embed the lonely dark dot at left bottom corner. JISX0510:2004 (p.46)\n        static embedDarkDotAtLeftBottomCorner(matrix) {\n            if (matrix.get(8, matrix.getHeight() - 8) === 0) {\n                throw new WriterException();\n            }\n            matrix.setNumber(8, matrix.getHeight() - 8, 1);\n        }\n        static embedHorizontalSeparationPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let x = 0; x < 8; ++x) {\n                if (!MatrixUtil.isEmpty(matrix.get(xStart + x, yStart))) {\n                    throw new WriterException();\n                }\n                matrix.setNumber(xStart + x, yStart, 0);\n            }\n        }\n        static embedVerticalSeparationPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 7; ++y) {\n                if (!MatrixUtil.isEmpty(matrix.get(xStart, yStart + y))) {\n                    throw new WriterException();\n                }\n                matrix.setNumber(xStart, yStart + y, 0);\n            }\n        }\n        static embedPositionAdjustmentPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 5; ++y) {\n                const patternY = MatrixUtil.POSITION_ADJUSTMENT_PATTERN[y];\n                for (let x = 0; x < 5; ++x) {\n                    matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n                }\n            }\n        }\n        static embedPositionDetectionPattern(xStart /*int*/, yStart /*int*/, matrix) {\n            for (let y = 0; y < 7; ++y) {\n                const patternY = MatrixUtil.POSITION_DETECTION_PATTERN[y];\n                for (let x = 0; x < 7; ++x) {\n                    matrix.setNumber(xStart + x, yStart + y, patternY[x]);\n                }\n            }\n        }\n        // Embed position detection patterns and surrounding vertical/horizontal separators.\n        static embedPositionDetectionPatternsAndSeparators(matrix) {\n            // Embed three big squares at corners.\n            const pdpWidth = MatrixUtil.POSITION_DETECTION_PATTERN[0].length;\n            // Left top corner.\n            MatrixUtil.embedPositionDetectionPattern(0, 0, matrix);\n            // Right top corner.\n            MatrixUtil.embedPositionDetectionPattern(matrix.getWidth() - pdpWidth, 0, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedPositionDetectionPattern(0, matrix.getWidth() - pdpWidth, matrix);\n            // Embed horizontal separation patterns around the squares.\n            const hspWidth = 8;\n            // Left top corner.\n            MatrixUtil.embedHorizontalSeparationPattern(0, hspWidth - 1, matrix);\n            // Right top corner.\n            MatrixUtil.embedHorizontalSeparationPattern(matrix.getWidth() - hspWidth, hspWidth - 1, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedHorizontalSeparationPattern(0, matrix.getWidth() - hspWidth, matrix);\n            // Embed vertical separation patterns around the squares.\n            const vspSize = 7;\n            // Left top corner.\n            MatrixUtil.embedVerticalSeparationPattern(vspSize, 0, matrix);\n            // Right top corner.\n            MatrixUtil.embedVerticalSeparationPattern(matrix.getHeight() - vspSize - 1, 0, matrix);\n            // Left bottom corner.\n            MatrixUtil.embedVerticalSeparationPattern(vspSize, matrix.getHeight() - vspSize, matrix);\n        }\n        // Embed position adjustment patterns if need be.\n        static maybeEmbedPositionAdjustmentPatterns(version, matrix) {\n            if (version.getVersionNumber() < 2) { // The patterns appear if version >= 2\n                return;\n            }\n            const index = version.getVersionNumber() - 1;\n            const coordinates = MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[index];\n            for (let i = 0, length = coordinates.length; i !== length; i++) {\n                const y = coordinates[i];\n                if (y >= 0) {\n                    for (let j = 0; j !== length; j++) {\n                        const x = coordinates[j];\n                        if (x >= 0 && MatrixUtil.isEmpty(matrix.get(x, y))) {\n                            // If the cell is unset, we embed the position adjustment pattern here.\n                            // -2 is necessary since the x/y coordinates point to the center of the pattern, not the\n                            // left top corner.\n                            MatrixUtil.embedPositionAdjustmentPattern(x - 2, y - 2, matrix);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    MatrixUtil.POSITION_DETECTION_PATTERN = Array.from([\n        Int32Array.from([1, 1, 1, 1, 1, 1, 1]),\n        Int32Array.from([1, 0, 0, 0, 0, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 1, 1, 1, 0, 1]),\n        Int32Array.from([1, 0, 0, 0, 0, 0, 1]),\n        Int32Array.from([1, 1, 1, 1, 1, 1, 1]),\n    ]);\n    MatrixUtil.POSITION_ADJUSTMENT_PATTERN = Array.from([\n        Int32Array.from([1, 1, 1, 1, 1]),\n        Int32Array.from([1, 0, 0, 0, 1]),\n        Int32Array.from([1, 0, 1, 0, 1]),\n        Int32Array.from([1, 0, 0, 0, 1]),\n        Int32Array.from([1, 1, 1, 1, 1]),\n    ]);\n    // From Appendix E. Table 1, JIS0510X:2004 (71: p). The table was double-checked by komatsu.\n    MatrixUtil.POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE = Array.from([\n        Int32Array.from([-1, -1, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 18, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 22, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 30, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 34, -1, -1, -1, -1, -1]),\n        Int32Array.from([6, 22, 38, -1, -1, -1, -1]),\n        Int32Array.from([6, 24, 42, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, 46, -1, -1, -1, -1]),\n        Int32Array.from([6, 28, 50, -1, -1, -1, -1]),\n        Int32Array.from([6, 30, 54, -1, -1, -1, -1]),\n        Int32Array.from([6, 32, 58, -1, -1, -1, -1]),\n        Int32Array.from([6, 34, 62, -1, -1, -1, -1]),\n        Int32Array.from([6, 26, 46, 66, -1, -1, -1]),\n        Int32Array.from([6, 26, 48, 70, -1, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, -1, -1, -1]),\n        Int32Array.from([6, 30, 54, 78, -1, -1, -1]),\n        Int32Array.from([6, 30, 56, 82, -1, -1, -1]),\n        Int32Array.from([6, 30, 58, 86, -1, -1, -1]),\n        Int32Array.from([6, 34, 62, 90, -1, -1, -1]),\n        Int32Array.from([6, 28, 50, 72, 94, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, 98, -1, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, -1, -1]),\n        Int32Array.from([6, 28, 54, 80, 106, -1, -1]),\n        Int32Array.from([6, 32, 58, 84, 110, -1, -1]),\n        Int32Array.from([6, 30, 58, 86, 114, -1, -1]),\n        Int32Array.from([6, 34, 62, 90, 118, -1, -1]),\n        Int32Array.from([6, 26, 50, 74, 98, 122, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, 126, -1]),\n        Int32Array.from([6, 26, 52, 78, 104, 130, -1]),\n        Int32Array.from([6, 30, 56, 82, 108, 134, -1]),\n        Int32Array.from([6, 34, 60, 86, 112, 138, -1]),\n        Int32Array.from([6, 30, 58, 86, 114, 142, -1]),\n        Int32Array.from([6, 34, 62, 90, 118, 146, -1]),\n        Int32Array.from([6, 30, 54, 78, 102, 126, 150]),\n        Int32Array.from([6, 24, 50, 76, 102, 128, 154]),\n        Int32Array.from([6, 28, 54, 80, 106, 132, 158]),\n        Int32Array.from([6, 32, 58, 84, 110, 136, 162]),\n        Int32Array.from([6, 26, 54, 82, 110, 138, 166]),\n        Int32Array.from([6, 30, 58, 86, 114, 142, 170]),\n    ]);\n    // Type info cells at the left top corner.\n    MatrixUtil.TYPE_INFO_COORDINATES = Array.from([\n        Int32Array.from([8, 0]),\n        Int32Array.from([8, 1]),\n        Int32Array.from([8, 2]),\n        Int32Array.from([8, 3]),\n        Int32Array.from([8, 4]),\n        Int32Array.from([8, 5]),\n        Int32Array.from([8, 7]),\n        Int32Array.from([8, 8]),\n        Int32Array.from([7, 8]),\n        Int32Array.from([5, 8]),\n        Int32Array.from([4, 8]),\n        Int32Array.from([3, 8]),\n        Int32Array.from([2, 8]),\n        Int32Array.from([1, 8]),\n        Int32Array.from([0, 8]),\n    ]);\n    // From Appendix D in JISX0510:2004 (p. 67)\n    MatrixUtil.VERSION_INFO_POLY = 0x1f25; // 1 1111 0010 0101\n    // From Appendix C in JISX0510:2004 (p.65).\n    MatrixUtil.TYPE_INFO_POLY = 0x537;\n    MatrixUtil.TYPE_INFO_MASK_PATTERN = 0x5412;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*namespace com.google.zxing.qrcode.encoder {*/\n    class BlockPair {\n        constructor(dataBytes, errorCorrectionBytes) {\n            this.dataBytes = dataBytes;\n            this.errorCorrectionBytes = errorCorrectionBytes;\n        }\n        getDataBytes() {\n            return this.dataBytes;\n        }\n        getErrorCorrectionBytes() {\n            return this.errorCorrectionBytes;\n        }\n    }\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.io.UnsupportedEncodingException;*/\n    /*import java.util.ArrayList;*/\n    /*import java.util.Collection;*/\n    /*import java.util.Map;*/\n    /**\n     * @author satorux@google.com (Satoru Takabayashi) - creator\n     * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n     */\n    class Encoder {\n        // TYPESCRIPTPORT: changed to UTF8, the default for js\n        constructor() { }\n        // The mask penalty calculation is complicated.  See Table 21 of JISX0510:2004 (p.45) for details.\n        // Basically it applies four rules and summate all penalties.\n        static calculateMaskPenalty(matrix) {\n            return MaskUtil.applyMaskPenaltyRule1(matrix)\n                + MaskUtil.applyMaskPenaltyRule2(matrix)\n                + MaskUtil.applyMaskPenaltyRule3(matrix)\n                + MaskUtil.applyMaskPenaltyRule4(matrix);\n        }\n        /**\n         * @param content text to encode\n         * @param ecLevel error correction level to use\n         * @return {@link QRCode} representing the encoded QR code\n         * @throws WriterException if encoding can't succeed, because of for example invalid content\n         *   or configuration\n         */\n        // public static encode(content: string, ecLevel: ErrorCorrectionLevel): QRCode /*throws WriterException*/ {\n        //   return encode(content, ecLevel, null)\n        // }\n        static encode(content, ecLevel, hints = null) {\n            // Determine what character encoding has been specified by the caller, if any\n            let encoding = Encoder.DEFAULT_BYTE_MODE_ENCODING;\n            const hasEncodingHint = hints !== null && undefined !== hints.get(EncodeHintType$1.CHARACTER_SET);\n            if (hasEncodingHint) {\n                encoding = hints.get(EncodeHintType$1.CHARACTER_SET).toString();\n            }\n            // Pick an encoding mode appropriate for the content. Note that this will not attempt to use\n            // multiple modes / segments even if that were more efficient. Twould be nice.\n            const mode = this.chooseMode(content, encoding);\n            // This will store the header information, like mode and\n            // length, as well as \"header\" segments like an ECI segment.\n            const headerBits = new BitArray();\n            // Append ECI segment if applicable\n            if (mode === Mode$1.BYTE && (hasEncodingHint || Encoder.DEFAULT_BYTE_MODE_ENCODING !== encoding)) {\n                const eci = CharacterSetECI.getCharacterSetECIByName(encoding);\n                if (eci !== undefined) {\n                    this.appendECI(eci, headerBits);\n                }\n            }\n            // (With ECI in place,) Write the mode marker\n            this.appendModeInfo(mode, headerBits);\n            // Collect data within the main segment, separately, to count its size if needed. Don't add it to\n            // main payload yet.\n            const dataBits = new BitArray();\n            this.appendBytes(content, mode, dataBits, encoding);\n            let version;\n            if (hints !== null && undefined !== hints.get(EncodeHintType$1.QR_VERSION)) {\n                const versionNumber = Number.parseInt(hints.get(EncodeHintType$1.QR_VERSION).toString(), 10);\n                version = Version$1.getVersionForNumber(versionNumber);\n                const bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, version);\n                if (!this.willFit(bitsNeeded, version, ecLevel)) {\n                    throw new WriterException('Data too big for requested version');\n                }\n            }\n            else {\n                version = this.recommendVersion(ecLevel, mode, headerBits, dataBits);\n            }\n            const headerAndDataBits = new BitArray();\n            headerAndDataBits.appendBitArray(headerBits);\n            // Find \"length\" of main segment and write it\n            const numLetters = mode === Mode$1.BYTE ? dataBits.getSizeInBytes() : content.length;\n            this.appendLengthInfo(numLetters, version, mode, headerAndDataBits);\n            // Put data together into the overall payload\n            headerAndDataBits.appendBitArray(dataBits);\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            const numDataBytes = version.getTotalCodewords() - ecBlocks.getTotalECCodewords();\n            // Terminate the bits properly.\n            this.terminateBits(numDataBytes, headerAndDataBits);\n            // Interleave data bits with error correction code.\n            const finalBits = this.interleaveWithECBytes(headerAndDataBits, version.getTotalCodewords(), numDataBytes, ecBlocks.getNumBlocks());\n            const qrCode = new QRCode();\n            qrCode.setECLevel(ecLevel);\n            qrCode.setMode(mode);\n            qrCode.setVersion(version);\n            //  Choose the mask pattern and set to \"qrCode\".\n            const dimension = version.getDimensionForVersion();\n            const matrix = new ByteMatrix(dimension, dimension);\n            const maskPattern = this.chooseMaskPattern(finalBits, ecLevel, version, matrix);\n            qrCode.setMaskPattern(maskPattern);\n            // Build the matrix and set it to \"qrCode\".\n            MatrixUtil.buildMatrix(finalBits, ecLevel, version, maskPattern, matrix);\n            qrCode.setMatrix(matrix);\n            return qrCode;\n        }\n        /**\n         * Decides the smallest version of QR code that will contain all of the provided data.\n         *\n         * @throws WriterException if the data cannot fit in any version\n         */\n        static recommendVersion(ecLevel, mode, headerBits, dataBits) {\n            // Hard part: need to know version to know how many bits length takes. But need to know how many\n            // bits it takes to know version. First we take a guess at version by assuming version will be\n            // the minimum, 1:\n            const provisionalBitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, Version$1.getVersionForNumber(1));\n            const provisionalVersion = this.chooseVersion(provisionalBitsNeeded, ecLevel);\n            // Use that guess to calculate the right version. I am still not sure this works in 100% of cases.\n            const bitsNeeded = this.calculateBitsNeeded(mode, headerBits, dataBits, provisionalVersion);\n            return this.chooseVersion(bitsNeeded, ecLevel);\n        }\n        static calculateBitsNeeded(mode, headerBits, dataBits, version) {\n            return headerBits.getSize() + mode.getCharacterCountBits(version) + dataBits.getSize();\n        }\n        /**\n         * @return the code point of the table used in alphanumeric mode or\n         *  -1 if there is no corresponding code in the table.\n         */\n        static getAlphanumericCode(code /*int*/) {\n            if (code < Encoder.ALPHANUMERIC_TABLE.length) {\n                return Encoder.ALPHANUMERIC_TABLE[code];\n            }\n            return -1;\n        }\n        // public static chooseMode(content: string): Mode {\n        //   return chooseMode(content, null);\n        // }\n        /**\n         * Choose the best mode by examining the content. Note that 'encoding' is used as a hint;\n         * if it is Shift_JIS, and the input is only double-byte Kanji, then we return {@link Mode#KANJI}.\n         */\n        static chooseMode(content, encoding = null) {\n            if (CharacterSetECI.SJIS.getName() === encoding && this.isOnlyDoubleByteKanji(content)) {\n                // Choose Kanji mode if all input are double-byte characters\n                return Mode$1.KANJI;\n            }\n            let hasNumeric = false;\n            let hasAlphanumeric = false;\n            for (let i = 0, length = content.length; i < length; ++i) {\n                const c = content.charAt(i);\n                if (Encoder.isDigit(c)) {\n                    hasNumeric = true;\n                }\n                else if (this.getAlphanumericCode(c.charCodeAt(0)) !== -1) {\n                    hasAlphanumeric = true;\n                }\n                else {\n                    return Mode$1.BYTE;\n                }\n            }\n            if (hasAlphanumeric) {\n                return Mode$1.ALPHANUMERIC;\n            }\n            if (hasNumeric) {\n                return Mode$1.NUMERIC;\n            }\n            return Mode$1.BYTE;\n        }\n        static isOnlyDoubleByteKanji(content) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, CharacterSetECI.SJIS); // content.getBytes(\"Shift_JIS\"))\n            }\n            catch (ignored /*: UnsupportedEncodingException*/) {\n                return false;\n            }\n            const length = bytes.length;\n            if (length % 2 !== 0) {\n                return false;\n            }\n            for (let i = 0; i < length; i += 2) {\n                const byte1 = bytes[i] & 0xFF;\n                if ((byte1 < 0x81 || byte1 > 0x9F) && (byte1 < 0xE0 || byte1 > 0xEB)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        static chooseMaskPattern(bits, ecLevel, version, matrix) {\n            let minPenalty = Number.MAX_SAFE_INTEGER; // Lower penalty is better.\n            let bestMaskPattern = -1;\n            // We try all mask patterns to choose the best one.\n            for (let maskPattern = 0; maskPattern < QRCode.NUM_MASK_PATTERNS; maskPattern++) {\n                MatrixUtil.buildMatrix(bits, ecLevel, version, maskPattern, matrix);\n                let penalty = this.calculateMaskPenalty(matrix);\n                if (penalty < minPenalty) {\n                    minPenalty = penalty;\n                    bestMaskPattern = maskPattern;\n                }\n            }\n            return bestMaskPattern;\n        }\n        static chooseVersion(numInputBits /*int*/, ecLevel) {\n            for (let versionNum = 1; versionNum <= 40; versionNum++) {\n                const version = Version$1.getVersionForNumber(versionNum);\n                if (Encoder.willFit(numInputBits, version, ecLevel)) {\n                    return version;\n                }\n            }\n            throw new WriterException('Data too big');\n        }\n        /**\n         * @return true if the number of input bits will fit in a code with the specified version and\n         * error correction level.\n         */\n        static willFit(numInputBits /*int*/, version, ecLevel) {\n            // In the following comments, we use numbers of Version 7-H.\n            // numBytes = 196\n            const numBytes = version.getTotalCodewords();\n            // getNumECBytes = 130\n            const ecBlocks = version.getECBlocksForLevel(ecLevel);\n            const numEcBytes = ecBlocks.getTotalECCodewords();\n            // getNumDataBytes = 196 - 130 = 66\n            const numDataBytes = numBytes - numEcBytes;\n            const totalInputBytes = (numInputBits + 7) / 8;\n            return numDataBytes >= totalInputBytes;\n        }\n        /**\n         * Terminate bits as described in 8.4.8 and 8.4.9 of JISX0510:2004 (p.24).\n         */\n        static terminateBits(numDataBytes /*int*/, bits) {\n            const capacity = numDataBytes * 8;\n            if (bits.getSize() > capacity) {\n                throw new WriterException('data bits cannot fit in the QR Code' + bits.getSize() + ' > ' +\n                    capacity);\n            }\n            for (let i = 0; i < 4 && bits.getSize() < capacity; ++i) {\n                bits.appendBit(false);\n            }\n            // Append termination bits. See 8.4.8 of JISX0510:2004 (p.24) for details.\n            // If the last byte isn't 8-bit aligned, we'll add padding bits.\n            const numBitsInLastByte = bits.getSize() & 0x07;\n            if (numBitsInLastByte > 0) {\n                for (let i = numBitsInLastByte; i < 8; i++) {\n                    bits.appendBit(false);\n                }\n            }\n            // If we have more space, we'll fill the space with padding patterns defined in 8.4.9 (p.24).\n            const numPaddingBytes = numDataBytes - bits.getSizeInBytes();\n            for (let i = 0; i < numPaddingBytes; ++i) {\n                bits.appendBits((i & 0x01) === 0 ? 0xEC : 0x11, 8);\n            }\n            if (bits.getSize() !== capacity) {\n                throw new WriterException('Bits size does not equal capacity');\n            }\n        }\n        /**\n         * Get number of data bytes and number of error correction bytes for block id \"blockID\". Store\n         * the result in \"numDataBytesInBlock\", and \"numECBytesInBlock\". See table 12 in 8.5.1 of\n         * JISX0510:2004 (p.30)\n         */\n        static getNumDataBytesAndNumECBytesForBlockID(numTotalBytes /*int*/, numDataBytes /*int*/, numRSBlocks /*int*/, blockID /*int*/, numDataBytesInBlock, numECBytesInBlock) {\n            if (blockID >= numRSBlocks) {\n                throw new WriterException('Block ID too large');\n            }\n            // numRsBlocksInGroup2 = 196 % 5 = 1\n            const numRsBlocksInGroup2 = numTotalBytes % numRSBlocks;\n            // numRsBlocksInGroup1 = 5 - 1 = 4\n            const numRsBlocksInGroup1 = numRSBlocks - numRsBlocksInGroup2;\n            // numTotalBytesInGroup1 = 196 / 5 = 39\n            const numTotalBytesInGroup1 = Math.floor(numTotalBytes / numRSBlocks);\n            // numTotalBytesInGroup2 = 39 + 1 = 40\n            const numTotalBytesInGroup2 = numTotalBytesInGroup1 + 1;\n            // numDataBytesInGroup1 = 66 / 5 = 13\n            const numDataBytesInGroup1 = Math.floor(numDataBytes / numRSBlocks);\n            // numDataBytesInGroup2 = 13 + 1 = 14\n            const numDataBytesInGroup2 = numDataBytesInGroup1 + 1;\n            // numEcBytesInGroup1 = 39 - 13 = 26\n            const numEcBytesInGroup1 = numTotalBytesInGroup1 - numDataBytesInGroup1;\n            // numEcBytesInGroup2 = 40 - 14 = 26\n            const numEcBytesInGroup2 = numTotalBytesInGroup2 - numDataBytesInGroup2;\n            // Sanity checks.\n            // 26 = 26\n            if (numEcBytesInGroup1 !== numEcBytesInGroup2) {\n                throw new WriterException('EC bytes mismatch');\n            }\n            // 5 = 4 + 1.\n            if (numRSBlocks !== numRsBlocksInGroup1 + numRsBlocksInGroup2) {\n                throw new WriterException('RS blocks mismatch');\n            }\n            // 196 = (13 + 26) * 4 + (14 + 26) * 1\n            if (numTotalBytes !==\n                ((numDataBytesInGroup1 + numEcBytesInGroup1) *\n                    numRsBlocksInGroup1) +\n                    ((numDataBytesInGroup2 + numEcBytesInGroup2) *\n                        numRsBlocksInGroup2)) {\n                throw new WriterException('Total bytes mismatch');\n            }\n            if (blockID < numRsBlocksInGroup1) {\n                numDataBytesInBlock[0] = numDataBytesInGroup1;\n                numECBytesInBlock[0] = numEcBytesInGroup1;\n            }\n            else {\n                numDataBytesInBlock[0] = numDataBytesInGroup2;\n                numECBytesInBlock[0] = numEcBytesInGroup2;\n            }\n        }\n        /**\n         * Interleave \"bits\" with corresponding error correction bytes. On success, store the result in\n         * \"result\". The interleave rule is complicated. See 8.6 of JISX0510:2004 (p.37) for details.\n         */\n        static interleaveWithECBytes(bits, numTotalBytes /*int*/, numDataBytes /*int*/, numRSBlocks /*int*/) {\n            // \"bits\" must have \"getNumDataBytes\" bytes of data.\n            if (bits.getSizeInBytes() !== numDataBytes) {\n                throw new WriterException('Number of bits and data bytes does not match');\n            }\n            // Step 1.  Divide data bytes into blocks and generate error correction bytes for them. We'll\n            // store the divided data bytes blocks and error correction bytes blocks into \"blocks\".\n            let dataBytesOffset = 0;\n            let maxNumDataBytes = 0;\n            let maxNumEcBytes = 0;\n            // Since, we know the number of reedsolmon blocks, we can initialize the vector with the number.\n            const blocks = new Array(); // new Array<BlockPair>(numRSBlocks)\n            for (let i = 0; i < numRSBlocks; ++i) {\n                const numDataBytesInBlock = new Int32Array(1);\n                const numEcBytesInBlock = new Int32Array(1);\n                Encoder.getNumDataBytesAndNumECBytesForBlockID(numTotalBytes, numDataBytes, numRSBlocks, i, numDataBytesInBlock, numEcBytesInBlock);\n                const size = numDataBytesInBlock[0];\n                const dataBytes = new Uint8Array(size);\n                bits.toBytes(8 * dataBytesOffset, dataBytes, 0, size);\n                const ecBytes = Encoder.generateECBytes(dataBytes, numEcBytesInBlock[0]);\n                blocks.push(new BlockPair(dataBytes, ecBytes));\n                maxNumDataBytes = Math.max(maxNumDataBytes, size);\n                maxNumEcBytes = Math.max(maxNumEcBytes, ecBytes.length);\n                dataBytesOffset += numDataBytesInBlock[0];\n            }\n            if (numDataBytes !== dataBytesOffset) {\n                throw new WriterException('Data bytes does not match offset');\n            }\n            const result = new BitArray();\n            // First, place data blocks.\n            for (let i = 0; i < maxNumDataBytes; ++i) {\n                for (const block of blocks) {\n                    const dataBytes = block.getDataBytes();\n                    if (i < dataBytes.length) {\n                        result.appendBits(dataBytes[i], 8);\n                    }\n                }\n            }\n            // Then, place error correction blocks.\n            for (let i = 0; i < maxNumEcBytes; ++i) {\n                for (const block of blocks) {\n                    const ecBytes = block.getErrorCorrectionBytes();\n                    if (i < ecBytes.length) {\n                        result.appendBits(ecBytes[i], 8);\n                    }\n                }\n            }\n            if (numTotalBytes !== result.getSizeInBytes()) { // Should be same.\n                throw new WriterException('Interleaving error: ' + numTotalBytes + ' and ' +\n                    result.getSizeInBytes() + ' differ.');\n            }\n            return result;\n        }\n        static generateECBytes(dataBytes, numEcBytesInBlock /*int*/) {\n            const numDataBytes = dataBytes.length;\n            const toEncode = new Int32Array(numDataBytes + numEcBytesInBlock); // int[numDataBytes + numEcBytesInBlock]\n            for (let i = 0; i < numDataBytes; i++) {\n                toEncode[i] = dataBytes[i] & 0xFF;\n            }\n            new ReedSolomonEncoder(GenericGF.QR_CODE_FIELD_256).encode(toEncode, numEcBytesInBlock);\n            const ecBytes = new Uint8Array(numEcBytesInBlock);\n            for (let i = 0; i < numEcBytesInBlock; i++) {\n                ecBytes[i] = /*(byte) */ toEncode[numDataBytes + i];\n            }\n            return ecBytes;\n        }\n        /**\n         * Append mode info. On success, store the result in \"bits\".\n         */\n        static appendModeInfo(mode, bits) {\n            bits.appendBits(mode.getBits(), 4);\n        }\n        /**\n         * Append length info. On success, store the result in \"bits\".\n         */\n        static appendLengthInfo(numLetters /*int*/, version, mode, bits) {\n            const numBits = mode.getCharacterCountBits(version);\n            if (numLetters >= (1 << numBits)) {\n                throw new WriterException(numLetters + ' is bigger than ' + ((1 << numBits) - 1));\n            }\n            bits.appendBits(numLetters, numBits);\n        }\n        /**\n         * Append \"bytes\" in \"mode\" mode (encoding) into \"bits\". On success, store the result in \"bits\".\n         */\n        static appendBytes(content, mode, bits, encoding) {\n            switch (mode) {\n                case Mode$1.NUMERIC:\n                    Encoder.appendNumericBytes(content, bits);\n                    break;\n                case Mode$1.ALPHANUMERIC:\n                    Encoder.appendAlphanumericBytes(content, bits);\n                    break;\n                case Mode$1.BYTE:\n                    Encoder.append8BitBytes(content, bits, encoding);\n                    break;\n                case Mode$1.KANJI:\n                    Encoder.appendKanjiBytes(content, bits);\n                    break;\n                default:\n                    throw new WriterException('Invalid mode: ' + mode);\n            }\n        }\n        static getDigit(singleCharacter) {\n            return singleCharacter.charCodeAt(0) - 48;\n        }\n        static isDigit(singleCharacter) {\n            const cn = Encoder.getDigit(singleCharacter);\n            return cn >= 0 && cn <= 9;\n        }\n        static appendNumericBytes(content, bits) {\n            const length = content.length;\n            let i = 0;\n            while (i < length) {\n                const num1 = Encoder.getDigit(content.charAt(i));\n                if (i + 2 < length) {\n                    // Encode three numeric letters in ten bits.\n                    const num2 = Encoder.getDigit(content.charAt(i + 1));\n                    const num3 = Encoder.getDigit(content.charAt(i + 2));\n                    bits.appendBits(num1 * 100 + num2 * 10 + num3, 10);\n                    i += 3;\n                }\n                else if (i + 1 < length) {\n                    // Encode two numeric letters in seven bits.\n                    const num2 = Encoder.getDigit(content.charAt(i + 1));\n                    bits.appendBits(num1 * 10 + num2, 7);\n                    i += 2;\n                }\n                else {\n                    // Encode one numeric letter in four bits.\n                    bits.appendBits(num1, 4);\n                    i++;\n                }\n            }\n        }\n        static appendAlphanumericBytes(content, bits) {\n            const length = content.length;\n            let i = 0;\n            while (i < length) {\n                const code1 = Encoder.getAlphanumericCode(content.charCodeAt(i));\n                if (code1 === -1) {\n                    throw new WriterException();\n                }\n                if (i + 1 < length) {\n                    const code2 = Encoder.getAlphanumericCode(content.charCodeAt(i + 1));\n                    if (code2 === -1) {\n                        throw new WriterException();\n                    }\n                    // Encode two alphanumeric letters in 11 bits.\n                    bits.appendBits(code1 * 45 + code2, 11);\n                    i += 2;\n                }\n                else {\n                    // Encode one alphanumeric letter in six bits.\n                    bits.appendBits(code1, 6);\n                    i++;\n                }\n            }\n        }\n        static append8BitBytes(content, bits, encoding) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, encoding);\n            }\n            catch (uee /*: UnsupportedEncodingException*/) {\n                throw new WriterException(uee);\n            }\n            for (let i = 0, length = bytes.length; i !== length; i++) {\n                const b = bytes[i];\n                bits.appendBits(b, 8);\n            }\n        }\n        /**\n         * @throws WriterException\n         */\n        static appendKanjiBytes(content, bits) {\n            let bytes;\n            try {\n                bytes = StringEncoding.encode(content, CharacterSetECI.SJIS);\n            }\n            catch (uee /*: UnsupportedEncodingException*/) {\n                throw new WriterException(uee);\n            }\n            const length = bytes.length;\n            for (let i = 0; i < length; i += 2) {\n                const byte1 = bytes[i] & 0xFF;\n                const byte2 = bytes[i + 1] & 0xFF;\n                const code = ((byte1 << 8) & 0xFFFFFFFF) | byte2;\n                let subtracted = -1;\n                if (code >= 0x8140 && code <= 0x9ffc) {\n                    subtracted = code - 0x8140;\n                }\n                else if (code >= 0xe040 && code <= 0xebbf) {\n                    subtracted = code - 0xc140;\n                }\n                if (subtracted === -1) {\n                    throw new WriterException('Invalid byte sequence');\n                }\n                const encoded = ((subtracted >> 8) * 0xc0) + (subtracted & 0xff);\n                bits.appendBits(encoded, 13);\n            }\n        }\n        static appendECI(eci, bits) {\n            bits.appendBits(Mode$1.ECI.getBits(), 4);\n            // This is correct for values up to 127, which is all we need now.\n            bits.appendBits(eci.getValue(), 8);\n        }\n    }\n    // The original table is defined in the table 5 of JISX0510:2004 (p.19).\n    Encoder.ALPHANUMERIC_TABLE = Int32Array.from([\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n        36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43,\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1,\n        -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n        25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1,\n    ]);\n    Encoder.DEFAULT_BYTE_MODE_ENCODING = CharacterSetECI.UTF8.getName(); // \"ISO-8859-1\"\n\n    /**\n     * @deprecated Moving to @zxing/browser\n     */\n    class BrowserQRCodeSvgWriter {\n        /**\n         * Writes and renders a QRCode SVG element.\n         *\n         * @param contents\n         * @param width\n         * @param height\n         * @param hints\n         */\n        write(contents, width, height, hints = null) {\n            if (contents.length === 0) {\n                throw new IllegalArgumentException('Found empty contents');\n            }\n            // if (format != BarcodeFormat.QR_CODE) {\n            //   throw new IllegalArgumentException(\"Can only encode QR_CODE, but got \" + format)\n            // }\n            if (width < 0 || height < 0) {\n                throw new IllegalArgumentException('Requested dimensions are too small: ' + width + 'x' + height);\n            }\n            let errorCorrectionLevel = ErrorCorrectionLevel.L;\n            let quietZone = BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE;\n            if (hints !== null) {\n                if (undefined !== hints.get(EncodeHintType$1.ERROR_CORRECTION)) {\n                    errorCorrectionLevel = ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (undefined !== hints.get(EncodeHintType$1.MARGIN)) {\n                    quietZone = Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(), 10);\n                }\n            }\n            const code = Encoder.encode(contents, errorCorrectionLevel, hints);\n            return this.renderResult(code, width, height, quietZone);\n        }\n        /**\n         * Renders the result and then appends it to the DOM.\n         */\n        writeToDom(containerElement, contents, width, height, hints = null) {\n            if (typeof containerElement === 'string') {\n                containerElement = document.querySelector(containerElement);\n            }\n            const svgElement = this.write(contents, width, height, hints);\n            if (containerElement)\n                containerElement.appendChild(svgElement);\n        }\n        /**\n         * Note that the input matrix uses 0 == white, 1 == black.\n         * The output matrix uses 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n         */\n        renderResult(code, width /*int*/, height /*int*/, quietZone /*int*/) {\n            const input = code.getMatrix();\n            if (input === null) {\n                throw new IllegalStateException();\n            }\n            const inputWidth = input.getWidth();\n            const inputHeight = input.getHeight();\n            const qrWidth = inputWidth + (quietZone * 2);\n            const qrHeight = inputHeight + (quietZone * 2);\n            const outputWidth = Math.max(width, qrWidth);\n            const outputHeight = Math.max(height, qrHeight);\n            const multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n            // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n            // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n            // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n            // handle all the padding from 100x100 (the actual QR) up to 200x160.\n            const leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\n            const topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\n            const svgElement = this.createSVGElement(outputWidth, outputHeight);\n            for (let inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY) === 1) {\n                        const svgRectElement = this.createSvgRectElement(outputX, outputY, multiple, multiple);\n                        svgElement.appendChild(svgRectElement);\n                    }\n                }\n            }\n            return svgElement;\n        }\n        /**\n         * Creates a SVG element.\n         *\n         * @param w SVG's width attribute\n         * @param h SVG's height attribute\n         */\n        createSVGElement(w, h) {\n            const svgElement = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'svg');\n            svgElement.setAttributeNS(null, 'height', w.toString());\n            svgElement.setAttributeNS(null, 'width', h.toString());\n            return svgElement;\n        }\n        /**\n         * Creates a SVG rect element.\n         *\n         * @param x Element's x coordinate\n         * @param y Element's y coordinate\n         * @param w Element's width attribute\n         * @param h Element's height attribute\n         */\n        createSvgRectElement(x, y, w, h) {\n            const rect = document.createElementNS(BrowserQRCodeSvgWriter.SVG_NS, 'rect');\n            rect.setAttributeNS(null, 'x', x.toString());\n            rect.setAttributeNS(null, 'y', y.toString());\n            rect.setAttributeNS(null, 'height', w.toString());\n            rect.setAttributeNS(null, 'width', h.toString());\n            rect.setAttributeNS(null, 'fill', '#000000');\n            return rect;\n        }\n    }\n    BrowserQRCodeSvgWriter.QUIET_ZONE_SIZE = 4;\n    /**\n     * SVG markup NameSpace\n     */\n    BrowserQRCodeSvgWriter.SVG_NS = 'http://www.w3.org/2000/svg';\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * This object renders a QR Code as a BitMatrix 2D array of greyscale values.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class QRCodeWriter {\n        /*@Override*/\n        // public encode(contents: string, format: BarcodeFormat, width: number /*int*/, height: number /*int*/): BitMatrix\n        //     /*throws WriterException */ {\n        //   return encode(contents, format, width, height, null)\n        // }\n        /*@Override*/\n        encode(contents, format, width /*int*/, height /*int*/, hints) {\n            if (contents.length === 0) {\n                throw new IllegalArgumentException('Found empty contents');\n            }\n            if (format !== BarcodeFormat$1.QR_CODE) {\n                throw new IllegalArgumentException('Can only encode QR_CODE, but got ' + format);\n            }\n            if (width < 0 || height < 0) {\n                throw new IllegalArgumentException(`Requested dimensions are too small: ${width}x${height}`);\n            }\n            let errorCorrectionLevel = ErrorCorrectionLevel.L;\n            let quietZone = QRCodeWriter.QUIET_ZONE_SIZE;\n            if (hints !== null) {\n                if (undefined !== hints.get(EncodeHintType$1.ERROR_CORRECTION)) {\n                    errorCorrectionLevel = ErrorCorrectionLevel.fromString(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (undefined !== hints.get(EncodeHintType$1.MARGIN)) {\n                    quietZone = Number.parseInt(hints.get(EncodeHintType$1.MARGIN).toString(), 10);\n                }\n            }\n            const code = Encoder.encode(contents, errorCorrectionLevel, hints);\n            return QRCodeWriter.renderResult(code, width, height, quietZone);\n        }\n        // Note that the input matrix uses 0 == white, 1 == black, while the output matrix uses\n        // 0 == black, 255 == white (i.e. an 8 bit greyscale bitmap).\n        static renderResult(code, width /*int*/, height /*int*/, quietZone /*int*/) {\n            const input = code.getMatrix();\n            if (input === null) {\n                throw new IllegalStateException();\n            }\n            const inputWidth = input.getWidth();\n            const inputHeight = input.getHeight();\n            const qrWidth = inputWidth + (quietZone * 2);\n            const qrHeight = inputHeight + (quietZone * 2);\n            const outputWidth = Math.max(width, qrWidth);\n            const outputHeight = Math.max(height, qrHeight);\n            const multiple = Math.min(Math.floor(outputWidth / qrWidth), Math.floor(outputHeight / qrHeight));\n            // Padding includes both the quiet zone and the extra white pixels to accommodate the requested\n            // dimensions. For example, if input is 25x25 the QR will be 33x33 including the quiet zone.\n            // If the requested size is 200x160, the multiple will be 4, for a QR of 132x132. These will\n            // handle all the padding from 100x100 (the actual QR) up to 200x160.\n            const leftPadding = Math.floor((outputWidth - (inputWidth * multiple)) / 2);\n            const topPadding = Math.floor((outputHeight - (inputHeight * multiple)) / 2);\n            const output = new BitMatrix(outputWidth, outputHeight);\n            for (let inputY = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY) === 1) {\n                        output.setRegion(outputX, outputY, multiple, multiple);\n                    }\n                }\n            }\n            return output;\n        }\n    }\n    QRCodeWriter.QUIET_ZONE_SIZE = 4;\n\n    /*\n     * Copyright 2008 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /*import java.util.Map;*/\n    /**\n     * This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat\n     * requested and encodes the barcode with the supplied contents.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class MultiFormatWriter {\n        /*@Override*/\n        // public encode(contents: string,\n        //                         format: BarcodeFormat,\n        //                         width: number /*int*/,\n        //                         height: number /*int*/): BitMatrix /*throws WriterException */ {\n        //   return encode(contents, format, width, height, null)\n        // }\n        /*@Override*/\n        encode(contents, format, width /*int*/, height /*int*/, hints) {\n            let writer;\n            switch (format) {\n                // case BarcodeFormat.EAN_8:\n                //   writer = new EAN8Writer()\n                //   break\n                // case BarcodeFormat.UPC_E:\n                //   writer = new UPCEWriter()\n                //   break\n                // case BarcodeFormat.EAN_13:\n                //   writer = new EAN13Writer()\n                //   break\n                // case BarcodeFormat.UPC_A:\n                //   writer = new UPCAWriter()\n                //   break\n                case BarcodeFormat$1.QR_CODE:\n                    writer = new QRCodeWriter();\n                    break;\n                // case BarcodeFormat.CODE_39:\n                //   writer = new Code39Writer()\n                //   break\n                // case BarcodeFormat.CODE_93:\n                //   writer = new Code93Writer()\n                //   break\n                // case BarcodeFormat.CODE_128:\n                //   writer = new Code128Writer()\n                //   break\n                // case BarcodeFormat.ITF:\n                //   writer = new ITFWriter()\n                //   break\n                // case BarcodeFormat.PDF_417:\n                //   writer = new PDF417Writer()\n                //   break\n                // case BarcodeFormat.CODABAR:\n                //   writer = new CodaBarWriter()\n                //   break\n                // case BarcodeFormat.DATA_MATRIX:\n                //   writer = new DataMatrixWriter()\n                //   break\n                // case BarcodeFormat.AZTEC:\n                //   writer = new AztecWriter()\n                //   break\n                default:\n                    throw new IllegalArgumentException('No encoder available for format ' + format);\n            }\n            return writer.encode(contents, format, width, height, hints);\n        }\n    }\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This object extends LuminanceSource around an array of YUV data returned from the camera driver,\n     * with the option to crop to a rectangle within the full data. This can be used to exclude\n     * superfluous pixels around the perimeter and speed up decoding.\n     *\n     * It works for any pixel format where the Y channel is planar and appears first, including\n     * YCbCr_420_SP and YCbCr_422_SP.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     */\n    class PlanarYUVLuminanceSource extends LuminanceSource {\n        constructor(yuvData, dataWidth /*int*/, dataHeight /*int*/, left /*int*/, top /*int*/, width /*int*/, height /*int*/, reverseHorizontal) {\n            super(width, height);\n            this.yuvData = yuvData;\n            this.dataWidth = dataWidth;\n            this.dataHeight = dataHeight;\n            this.left = left;\n            this.top = top;\n            if (left + width > dataWidth || top + height > dataHeight) {\n                throw new IllegalArgumentException('Crop rectangle does not fit within image data.');\n            }\n            if (reverseHorizontal) {\n                this.reverseHorizontal(width, height);\n            }\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            if (row === null || row === undefined || row.length < width) {\n                row = new Uint8ClampedArray(width);\n            }\n            const offset = (y + this.top) * this.dataWidth + this.left;\n            System.arraycopy(this.yuvData, offset, row, 0, width);\n            return row;\n        }\n        /*@Override*/\n        getMatrix() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            // If the caller asks for the entire underlying image, save the copy and give them the\n            // original data. The docs specifically warn that result.length must be ignored.\n            if (width === this.dataWidth && height === this.dataHeight) {\n                return this.yuvData;\n            }\n            const area = width * height;\n            const matrix = new Uint8ClampedArray(area);\n            let inputOffset = this.top * this.dataWidth + this.left;\n            // If the width matches the full width of the underlying data, perform a single copy.\n            if (width === this.dataWidth) {\n                System.arraycopy(this.yuvData, inputOffset, matrix, 0, area);\n                return matrix;\n            }\n            // Otherwise copy one cropped row at a time.\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                System.arraycopy(this.yuvData, inputOffset, matrix, outputOffset, width);\n                inputOffset += this.dataWidth;\n            }\n            return matrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return true;\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new PlanarYUVLuminanceSource(this.yuvData, this.dataWidth, this.dataHeight, this.left + left, this.top + top, width, height, false);\n        }\n        renderThumbnail() {\n            const width = this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            const height = this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            const pixels = new Int32Array(width * height);\n            const yuv = this.yuvData;\n            let inputOffset = this.top * this.dataWidth + this.left;\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                for (let x = 0; x < width; x++) {\n                    const grey = yuv[inputOffset + x * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR] & 0xff;\n                    pixels[outputOffset + x] = 0xFF000000 | (grey * 0x00010101);\n                }\n                inputOffset += this.dataWidth * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n            }\n            return pixels;\n        }\n        /**\n         * @return width of image from {@link #renderThumbnail()}\n         */\n        getThumbnailWidth() {\n            return this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n        }\n        /**\n         * @return height of image from {@link #renderThumbnail()}\n         */\n        getThumbnailHeight() {\n            return this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n        }\n        reverseHorizontal(width /*int*/, height /*int*/) {\n            const yuvData = this.yuvData;\n            for (let y = 0, rowStart = this.top * this.dataWidth + this.left; y < height; y++, rowStart += this.dataWidth) {\n                const middle = rowStart + width / 2;\n                for (let x1 = rowStart, x2 = rowStart + width - 1; x1 < middle; x1++, x2--) {\n                    const temp = yuvData[x1];\n                    yuvData[x1] = yuvData[x2];\n                    yuvData[x2] = temp;\n                }\n            }\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n    PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR = 2;\n\n    /*\n     * Copyright 2009 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This class is used to help decode images from files which arrive as RGB data from\n     * an ARGB pixel array. It does not support rotation.\n     *\n     * @author dswitkin@google.com (Daniel Switkin)\n     * @author Betaminos\n     */\n    class RGBLuminanceSource extends LuminanceSource {\n        constructor(luminances, width /*int*/, height /*int*/, dataWidth /*int*/, dataHeight /*int*/, left /*int*/, top /*int*/) {\n            super(width, height);\n            this.dataWidth = dataWidth;\n            this.dataHeight = dataHeight;\n            this.left = left;\n            this.top = top;\n            if (luminances.BYTES_PER_ELEMENT === 4) { // Int32Array\n                const size = width * height;\n                const luminancesUint8Array = new Uint8ClampedArray(size);\n                for (let offset = 0; offset < size; offset++) {\n                    const pixel = luminances[offset];\n                    const r = (pixel >> 16) & 0xff; // red\n                    const g2 = (pixel >> 7) & 0x1fe; // 2 * green\n                    const b = pixel & 0xff; // blue\n                    // Calculate green-favouring average cheaply\n                    luminancesUint8Array[offset] = /*(byte) */ ((r + g2 + b) / 4) & 0xFF;\n                }\n                this.luminances = luminancesUint8Array;\n            }\n            else {\n                this.luminances = luminances;\n            }\n            if (undefined === dataWidth) {\n                this.dataWidth = width;\n            }\n            if (undefined === dataHeight) {\n                this.dataHeight = height;\n            }\n            if (undefined === left) {\n                this.left = 0;\n            }\n            if (undefined === top) {\n                this.top = 0;\n            }\n            if (this.left + width > this.dataWidth || this.top + height > this.dataHeight) {\n                throw new IllegalArgumentException('Crop rectangle does not fit within image data.');\n            }\n        }\n        /*@Override*/\n        getRow(y /*int*/, row) {\n            if (y < 0 || y >= this.getHeight()) {\n                throw new IllegalArgumentException('Requested row is outside the image: ' + y);\n            }\n            const width = this.getWidth();\n            if (row === null || row === undefined || row.length < width) {\n                row = new Uint8ClampedArray(width);\n            }\n            const offset = (y + this.top) * this.dataWidth + this.left;\n            System.arraycopy(this.luminances, offset, row, 0, width);\n            return row;\n        }\n        /*@Override*/\n        getMatrix() {\n            const width = this.getWidth();\n            const height = this.getHeight();\n            // If the caller asks for the entire underlying image, save the copy and give them the\n            // original data. The docs specifically warn that result.length must be ignored.\n            if (width === this.dataWidth && height === this.dataHeight) {\n                return this.luminances;\n            }\n            const area = width * height;\n            const matrix = new Uint8ClampedArray(area);\n            let inputOffset = this.top * this.dataWidth + this.left;\n            // If the width matches the full width of the underlying data, perform a single copy.\n            if (width === this.dataWidth) {\n                System.arraycopy(this.luminances, inputOffset, matrix, 0, area);\n                return matrix;\n            }\n            // Otherwise copy one cropped row at a time.\n            for (let y = 0; y < height; y++) {\n                const outputOffset = y * width;\n                System.arraycopy(this.luminances, inputOffset, matrix, outputOffset, width);\n                inputOffset += this.dataWidth;\n            }\n            return matrix;\n        }\n        /*@Override*/\n        isCropSupported() {\n            return true;\n        }\n        /*@Override*/\n        crop(left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n            return new RGBLuminanceSource(this.luminances, width, height, this.dataWidth, this.dataHeight, this.left + left, this.top + top);\n        }\n        invert() {\n            return new InvertedLuminanceSource(this);\n        }\n    }\n\n    /**\n     * Just to make a shortcut between Java code and TS code.\n     */\n    class Charset extends CharacterSetECI {\n        static forName(name) {\n            return this.getCharacterSetECIByName(name);\n        }\n    }\n\n    /**\n     * Just to make a shortcut between Java code and TS code.\n     */\n    class StandardCharsets {\n    }\n    StandardCharsets.ISO_8859_1 = CharacterSetECI.ISO8859_1;\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * Aztec 2D code representation\n     *\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class AztecCode {\n        /**\n         * @return {@code true} if compact instead of full mode\n         */\n        isCompact() {\n            return this.compact;\n        }\n        setCompact(compact) {\n            this.compact = compact;\n        }\n        /**\n         * @return size in pixels (width and height)\n         */\n        getSize() {\n            return this.size;\n        }\n        setSize(size) {\n            this.size = size;\n        }\n        /**\n         * @return number of levels\n         */\n        getLayers() {\n            return this.layers;\n        }\n        setLayers(layers) {\n            this.layers = layers;\n        }\n        /**\n         * @return number of data codewords\n         */\n        getCodeWords() {\n            return this.codeWords;\n        }\n        setCodeWords(codeWords) {\n            this.codeWords = codeWords;\n        }\n        /**\n         * @return the symbol image\n         */\n        getMatrix() {\n            return this.matrix;\n        }\n        setMatrix(matrix) {\n            this.matrix = matrix;\n        }\n    }\n\n    class Collections {\n        /**\n         * The singletonList(T) method is used to return an immutable list containing only the specified object.\n         */\n        static singletonList(item) {\n            return [item];\n        }\n        /**\n         * The min(Collection<? extends T>, Comparator<? super T>) method is used to return the minimum element of the given collection, according to the order induced by the specified comparator.\n         */\n        static min(collection, comparator) {\n            return collection.sort(comparator)[0];\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    class Token {\n        constructor(previous) {\n            this.previous = previous;\n        }\n        getPrevious() {\n            return this.previous;\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /*final*/ class SimpleToken extends Token {\n        constructor(previous, value, bitCount) {\n            super(previous);\n            this.value = value;\n            this.bitCount = bitCount;\n        }\n        /**\n         * @Override\n         */\n        appendTo(bitArray, text) {\n            bitArray.appendBits(this.value, this.bitCount);\n        }\n        add(value, bitCount) {\n            return new SimpleToken(this, value, bitCount);\n        }\n        addBinaryShift(start, byteCount) {\n            // no-op can't binary shift a simple token\n            console.warn('addBinaryShift on SimpleToken, this simply returns a copy of this token');\n            return new SimpleToken(this, start, byteCount);\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            let value = this.value & ((1 << this.bitCount) - 1);\n            value |= 1 << this.bitCount;\n            return '<' + Integer.toBinaryString(value | (1 << this.bitCount)).substring(1) + '>';\n        }\n    }\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /*final*/ class BinaryShiftToken extends SimpleToken {\n        constructor(previous, binaryShiftStart, binaryShiftByteCount) {\n            super(previous, 0, 0);\n            this.binaryShiftStart = binaryShiftStart;\n            this.binaryShiftByteCount = binaryShiftByteCount;\n        }\n        /**\n         * @Override\n         */\n        appendTo(bitArray, text) {\n            for (let i = 0; i < this.binaryShiftByteCount; i++) {\n                if (i === 0 || (i === 31 && this.binaryShiftByteCount <= 62)) {\n                    // We need a header before the first character, and before\n                    // character 31 when the total byte code is <= 62\n                    bitArray.appendBits(31, 5); // BINARY_SHIFT\n                    if (this.binaryShiftByteCount > 62) {\n                        bitArray.appendBits(this.binaryShiftByteCount - 31, 16);\n                    }\n                    else if (i === 0) {\n                        // 1 <= binaryShiftByteCode <= 62\n                        bitArray.appendBits(Math.min(this.binaryShiftByteCount, 31), 5);\n                    }\n                    else {\n                        // 32 <= binaryShiftCount <= 62 and i == 31\n                        bitArray.appendBits(this.binaryShiftByteCount - 31, 5);\n                    }\n                }\n                bitArray.appendBits(text[this.binaryShiftStart + i], 8);\n            }\n        }\n        addBinaryShift(start, byteCount) {\n            // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n            return new BinaryShiftToken(this, start, byteCount);\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            return '<' + this.binaryShiftStart + '::' + (this.binaryShiftStart + this.binaryShiftByteCount - 1) + '>';\n        }\n    }\n\n    function addBinaryShift(token, start, byteCount) {\n        // int bitCount = (byteCount * 8) + (byteCount <= 31 ? 10 : byteCount <= 62 ? 20 : 21);\n        return new BinaryShiftToken(token, start, byteCount);\n    }\n    function add(token, value, bitCount) {\n        return new SimpleToken(token, value, bitCount);\n    }\n\n    const /*final*/ MODE_NAMES = [\n        'UPPER',\n        'LOWER',\n        'DIGIT',\n        'MIXED',\n        'PUNCT'\n    ];\n    const /*final*/ MODE_UPPER = 0; // 5 bits\n    const /*final*/ MODE_LOWER = 1; // 5 bits\n    const /*final*/ MODE_DIGIT = 2; // 4 bits\n    const /*final*/ MODE_MIXED = 3; // 5 bits\n    const /*final*/ MODE_PUNCT = 4; // 5 bits\n    const EMPTY_TOKEN = new SimpleToken(null, 0, 0);\n\n    // The Latch Table shows, for each pair of Modes, the optimal method for\n    // getting from one mode to another.  In the worst possible case, this can\n    // be up to 14 bits.  In the best possible case, we are already there!\n    // The high half-word of each entry gives the number of bits.\n    // The low half-word of each entry are the actual bits necessary to change\n    const LATCH_TABLE = [\n        Int32Array.from([\n            0,\n            (5 << 16) + 28,\n            (5 << 16) + 30,\n            (5 << 16) + 29,\n            (10 << 16) + (29 << 5) + 30 // UPPER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (9 << 16) + (30 << 4) + 14,\n            0,\n            (5 << 16) + 30,\n            (5 << 16) + 29,\n            (10 << 16) + (29 << 5) + 30 // LOWER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (4 << 16) + 14,\n            (9 << 16) + (14 << 5) + 28,\n            0,\n            (9 << 16) + (14 << 5) + 29,\n            (14 << 16) + (14 << 10) + (29 << 5) + 30\n            // DIGIT -> UPPER -> MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (5 << 16) + 29,\n            (5 << 16) + 28,\n            (10 << 16) + (29 << 5) + 30,\n            0,\n            (5 << 16) + 30 // MIXED -> PUNCT\n        ]),\n        Int32Array.from([\n            (5 << 16) + 31,\n            (10 << 16) + (31 << 5) + 28,\n            (10 << 16) + (31 << 5) + 30,\n            (10 << 16) + (31 << 5) + 29,\n            0\n        ])\n    ];\n\n    function static_SHIFT_TABLE(SHIFT_TABLE) {\n        for (let table /*Int32Array*/ of SHIFT_TABLE) {\n            Arrays.fill(table, -1);\n        }\n        SHIFT_TABLE[MODE_UPPER][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_LOWER][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_LOWER][MODE_UPPER] = 28;\n        SHIFT_TABLE[MODE_MIXED][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_DIGIT][MODE_PUNCT] = 0;\n        SHIFT_TABLE[MODE_DIGIT][MODE_UPPER] = 15;\n        return SHIFT_TABLE;\n    }\n    const /*final*/ SHIFT_TABLE = static_SHIFT_TABLE(Arrays.createInt32Array(6, 6)); // mode shift codes, per table\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * State represents all information about a sequence necessary to generate the current output.\n     * Note that a state is immutable.\n     */\n    /*final*/ class State {\n        constructor(token, mode, binaryBytes, bitCount) {\n            this.token = token;\n            this.mode = mode;\n            this.binaryShiftByteCount = binaryBytes;\n            this.bitCount = bitCount;\n            // Make sure we match the token\n            // int binaryShiftBitCount = (binaryShiftByteCount * 8) +\n            //    (binaryShiftByteCount === 0 ? 0 :\n            //     binaryShiftByteCount <= 31 ? 10 :\n            //     binaryShiftByteCount <= 62 ? 20 : 21);\n            // assert this.bitCount === token.getTotalBitCount() + binaryShiftBitCount;\n        }\n        getMode() {\n            return this.mode;\n        }\n        getToken() {\n            return this.token;\n        }\n        getBinaryShiftByteCount() {\n            return this.binaryShiftByteCount;\n        }\n        getBitCount() {\n            return this.bitCount;\n        }\n        // Create a new state representing this state with a latch to a (not\n        // necessary different) mode, and then a code.\n        latchAndAppend(mode, value) {\n            // assert binaryShiftByteCount === 0;\n            let bitCount = this.bitCount;\n            let token = this.token;\n            if (mode !== this.mode) {\n                let latch = LATCH_TABLE[this.mode][mode];\n                token = add(token, latch & 0xffff, latch >> 16);\n                bitCount += latch >> 16;\n            }\n            let latchModeBitCount = mode === MODE_DIGIT ? 4 : 5;\n            token = add(token, value, latchModeBitCount);\n            return new State(token, mode, 0, bitCount + latchModeBitCount);\n        }\n        // Create a new state representing this state, with a temporary shift\n        // to a different mode to output a single value.\n        shiftAndAppend(mode, value) {\n            // assert binaryShiftByteCount === 0 && this.mode !== mode;\n            let token = this.token;\n            let thisModeBitCount = this.mode === MODE_DIGIT ? 4 : 5;\n            // Shifts exist only to UPPER and PUNCT, both with tokens size 5.\n            token = add(token, SHIFT_TABLE[this.mode][mode], thisModeBitCount);\n            token = add(token, value, 5);\n            return new State(token, this.mode, 0, this.bitCount + thisModeBitCount + 5);\n        }\n        // Create a new state representing this state, but an additional character\n        // output in Binary Shift mode.\n        addBinaryShiftChar(index) {\n            let token = this.token;\n            let mode = this.mode;\n            let bitCount = this.bitCount;\n            if (this.mode === MODE_PUNCT || this.mode === MODE_DIGIT) {\n                // assert binaryShiftByteCount === 0;\n                let latch = LATCH_TABLE[mode][MODE_UPPER];\n                token = add(token, latch & 0xffff, latch >> 16);\n                bitCount += latch >> 16;\n                mode = MODE_UPPER;\n            }\n            let deltaBitCount = this.binaryShiftByteCount === 0 || this.binaryShiftByteCount === 31\n                ? 18\n                : this.binaryShiftByteCount === 62\n                    ? 9\n                    : 8;\n            let result = new State(token, mode, this.binaryShiftByteCount + 1, bitCount + deltaBitCount);\n            if (result.binaryShiftByteCount === 2047 + 31) {\n                // The string is as long as it's allowed to be.  We should end it.\n                result = result.endBinaryShift(index + 1);\n            }\n            return result;\n        }\n        // Create the state identical to this one, but we are no longer in\n        // Binary Shift mode.\n        endBinaryShift(index) {\n            if (this.binaryShiftByteCount === 0) {\n                return this;\n            }\n            let token = this.token;\n            token = addBinaryShift(token, index - this.binaryShiftByteCount, this.binaryShiftByteCount);\n            // assert token.getTotalBitCount() === this.bitCount;\n            return new State(token, this.mode, 0, this.bitCount);\n        }\n        // Returns true if \"this\" state is better (equal: or) to be in than \"that\"\n        // state under all possible circumstances.\n        isBetterThanOrEqualTo(other) {\n            let newModeBitCount = this.bitCount + (LATCH_TABLE[this.mode][other.mode] >> 16);\n            if (this.binaryShiftByteCount < other.binaryShiftByteCount) {\n                // add additional B/S encoding cost of other, if any\n                newModeBitCount +=\n                    State.calculateBinaryShiftCost(other) -\n                        State.calculateBinaryShiftCost(this);\n            }\n            else if (this.binaryShiftByteCount > other.binaryShiftByteCount &&\n                other.binaryShiftByteCount > 0) {\n                // maximum possible additional cost (it: h)\n                newModeBitCount += 10;\n            }\n            return newModeBitCount <= other.bitCount;\n        }\n        toBitArray(text) {\n            // Reverse the tokens, so that they are in the order that they should\n            // be output\n            let symbols = [];\n            for (let token = this.endBinaryShift(text.length).token; token !== null; token = token.getPrevious()) {\n                symbols.unshift(token);\n            }\n            let bitArray = new BitArray();\n            // Add each token to the result.\n            for (const symbol of symbols) {\n                symbol.appendTo(bitArray, text);\n            }\n            // assert bitArray.getSize() === this.bitCount;\n            return bitArray;\n        }\n        /**\n         * @Override\n         */\n        toString() {\n            return StringUtils.format('%s bits=%d bytes=%d', MODE_NAMES[this.mode], this.bitCount, this.binaryShiftByteCount);\n        }\n        static calculateBinaryShiftCost(state) {\n            if (state.binaryShiftByteCount > 62) {\n                return 21; // B/S with extended length\n            }\n            if (state.binaryShiftByteCount > 31) {\n                return 20; // two B/S\n            }\n            if (state.binaryShiftByteCount > 0) {\n                return 10; // one B/S\n            }\n            return 0;\n        }\n    }\n    State.INITIAL_STATE = new State(EMPTY_TOKEN, MODE_UPPER, 0, 0);\n\n    function static_CHAR_MAP(CHAR_MAP) {\n        const spaceCharCode = StringUtils.getCharCode(' ');\n        const pointCharCode = StringUtils.getCharCode('.');\n        const commaCharCode = StringUtils.getCharCode(',');\n        CHAR_MAP[MODE_UPPER][spaceCharCode] = 1;\n        const zUpperCharCode = StringUtils.getCharCode('Z');\n        const aUpperCharCode = StringUtils.getCharCode('A');\n        for (let c = aUpperCharCode; c <= zUpperCharCode; c++) {\n            CHAR_MAP[MODE_UPPER][c] = c - aUpperCharCode + 2;\n        }\n        CHAR_MAP[MODE_LOWER][spaceCharCode] = 1;\n        const zLowerCharCode = StringUtils.getCharCode('z');\n        const aLowerCharCode = StringUtils.getCharCode('a');\n        for (let c = aLowerCharCode; c <= zLowerCharCode; c++) {\n            CHAR_MAP[MODE_LOWER][c] = c - aLowerCharCode + 2;\n        }\n        CHAR_MAP[MODE_DIGIT][spaceCharCode] = 1;\n        const nineCharCode = StringUtils.getCharCode('9');\n        const zeroCharCode = StringUtils.getCharCode('0');\n        for (let c = zeroCharCode; c <= nineCharCode; c++) {\n            CHAR_MAP[MODE_DIGIT][c] = c - zeroCharCode + 2;\n        }\n        CHAR_MAP[MODE_DIGIT][commaCharCode] = 12;\n        CHAR_MAP[MODE_DIGIT][pointCharCode] = 13;\n        const mixedTable = [\n            '\\x00',\n            ' ',\n            '\\x01',\n            '\\x02',\n            '\\x03',\n            '\\x04',\n            '\\x05',\n            '\\x06',\n            '\\x07',\n            '\\b',\n            '\\t',\n            '\\n',\n            '\\x0b',\n            '\\f',\n            '\\r',\n            '\\x1b',\n            '\\x1c',\n            '\\x1d',\n            '\\x1e',\n            '\\x1f',\n            '@',\n            '\\\\',\n            '^',\n            '_',\n            '`',\n            '|',\n            '~',\n            '\\x7f'\n        ];\n        for (let i = 0; i < mixedTable.length; i++) {\n            CHAR_MAP[MODE_MIXED][StringUtils.getCharCode(mixedTable[i])] = i;\n        }\n        const punctTable = [\n            '\\x00',\n            '\\r',\n            '\\x00',\n            '\\x00',\n            '\\x00',\n            '\\x00',\n            '!',\n            '\\'',\n            '#',\n            '$',\n            '%',\n            '&',\n            '\\'',\n            '(',\n            ')',\n            '*',\n            '+',\n            ',',\n            '-',\n            '.',\n            '/',\n            ':',\n            ';',\n            '<',\n            '=',\n            '>',\n            '?',\n            '[',\n            ']',\n            '{',\n            '}'\n        ];\n        for (let i = 0; i < punctTable.length; i++) {\n            if (StringUtils.getCharCode(punctTable[i]) > 0) {\n                CHAR_MAP[MODE_PUNCT][StringUtils.getCharCode(punctTable[i])] = i;\n            }\n        }\n        return CHAR_MAP;\n    }\n    const CHAR_MAP = static_CHAR_MAP(Arrays.createInt32Array(5, 256));\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    /**\n     * This produces nearly optimal encodings of text into the first-level of\n     * encoding used by Aztec code.\n     *\n     * It uses a dynamic algorithm.  For each prefix of the string, it determines\n     * a set of encodings that could lead to this prefix.  We repeatedly add a\n     * character and generate a new set of optimal encodings until we have read\n     * through the entire input.\n     *\n     * @author Frank Yellin\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class HighLevelEncoder {\n        constructor(text) {\n            this.text = text;\n        }\n        /**\n         * @return text represented by this encoder encoded as a {@link BitArray}\n         */\n        encode() {\n            const spaceCharCode = StringUtils.getCharCode(' ');\n            const lineBreakCharCode = StringUtils.getCharCode('\\n');\n            let states = Collections.singletonList(State.INITIAL_STATE);\n            for (let index = 0; index < this.text.length; index++) {\n                let pairCode;\n                let nextChar = index + 1 < this.text.length ? this.text[index + 1] : 0;\n                switch (this.text[index]) {\n                    case StringUtils.getCharCode('\\r'):\n                        pairCode = nextChar === lineBreakCharCode ? 2 : 0;\n                        break;\n                    case StringUtils.getCharCode('.'):\n                        pairCode = nextChar === spaceCharCode ? 3 : 0;\n                        break;\n                    case StringUtils.getCharCode(','):\n                        pairCode = nextChar === spaceCharCode ? 4 : 0;\n                        break;\n                    case StringUtils.getCharCode(':'):\n                        pairCode = nextChar === spaceCharCode ? 5 : 0;\n                        break;\n                    default:\n                        pairCode = 0;\n                }\n                if (pairCode > 0) {\n                    // We have one of the four special PUNCT pairs.  Treat them specially.\n                    // Get a new set of states for the two new characters.\n                    states = HighLevelEncoder.updateStateListForPair(states, index, pairCode);\n                    index++;\n                }\n                else {\n                    // Get a new set of states for the new character.\n                    states = this.updateStateListForChar(states, index);\n                }\n            }\n            // We are left with a set of states.  Find the shortest one.\n            const minState = Collections.min(states, (a, b) => {\n                return a.getBitCount() - b.getBitCount();\n            });\n            // Convert it to a bit array, and return.\n            return minState.toBitArray(this.text);\n        }\n        // We update a set of states for a new character by updating each state\n        // for the new character, merging the results, and then removing the\n        // non-optimal states.\n        updateStateListForChar(states, index) {\n            const result = [];\n            for (let state /*State*/ of states) {\n                this.updateStateForChar(state, index, result);\n            }\n            return HighLevelEncoder.simplifyStates(result);\n        }\n        // Return a set of states that represent the possible ways of updating this\n        // state for the next character.  The resulting set of states are added to\n        // the \"result\" list.\n        updateStateForChar(state, index, result) {\n            let ch = (this.text[index] & 0xff);\n            let charInCurrentTable = CHAR_MAP[state.getMode()][ch] > 0;\n            let stateNoBinary = null;\n            for (let mode /*int*/ = 0; mode <= MODE_PUNCT; mode++) {\n                let charInMode = CHAR_MAP[mode][ch];\n                if (charInMode > 0) {\n                    if (stateNoBinary == null) {\n                        // Only create stateNoBinary the first time it's required.\n                        stateNoBinary = state.endBinaryShift(index);\n                    }\n                    // Try generating the character by latching to its mode\n                    if (!charInCurrentTable ||\n                        mode === state.getMode() ||\n                        mode === MODE_DIGIT) {\n                        // If the character is in the current table, we don't want to latch to\n                        // any other mode except possibly digit (which uses only 4 bits).  Any\n                        // other latch would be equally successful *after* this character, and\n                        // so wouldn't save any bits.\n                        const latchState = stateNoBinary.latchAndAppend(mode, charInMode);\n                        result.push(latchState);\n                    }\n                    // Try generating the character by switching to its mode.\n                    if (!charInCurrentTable &&\n                        SHIFT_TABLE[state.getMode()][mode] >= 0) {\n                        // It never makes sense to temporarily shift to another mode if the\n                        // character exists in the current mode.  That can never save bits.\n                        const shiftState = stateNoBinary.shiftAndAppend(mode, charInMode);\n                        result.push(shiftState);\n                    }\n                }\n            }\n            if (state.getBinaryShiftByteCount() > 0 ||\n                CHAR_MAP[state.getMode()][ch] === 0) {\n                // It's never worthwhile to go into binary shift mode if you're not already\n                // in binary shift mode, and the character exists in your current mode.\n                // That can never save bits over just outputting the char in the current mode.\n                let binaryState = state.addBinaryShiftChar(index);\n                result.push(binaryState);\n            }\n        }\n        static updateStateListForPair(states, index, pairCode) {\n            const result = [];\n            for (let state /*State*/ of states) {\n                this.updateStateForPair(state, index, pairCode, result);\n            }\n            return this.simplifyStates(result);\n        }\n        static updateStateForPair(state, index, pairCode, result) {\n            let stateNoBinary = state.endBinaryShift(index);\n            // Possibility 1.  Latch to C.MODE_PUNCT, and then append this code\n            result.push(stateNoBinary.latchAndAppend(MODE_PUNCT, pairCode));\n            if (state.getMode() !== MODE_PUNCT) {\n                // Possibility 2.  Shift to C.MODE_PUNCT, and then append this code.\n                // Every state except C.MODE_PUNCT (handled above) can shift\n                result.push(stateNoBinary.shiftAndAppend(MODE_PUNCT, pairCode));\n            }\n            if (pairCode === 3 || pairCode === 4) {\n                // both characters are in DIGITS.  Sometimes better to just add two digits\n                let digitState = stateNoBinary\n                    .latchAndAppend(MODE_DIGIT, 16 - pairCode) // period or comma in DIGIT\n                    .latchAndAppend(MODE_DIGIT, 1); // space in DIGIT\n                result.push(digitState);\n            }\n            if (state.getBinaryShiftByteCount() > 0) {\n                // It only makes sense to do the characters as binary if we're already\n                // in binary mode.\n                let binaryState = state\n                    .addBinaryShiftChar(index)\n                    .addBinaryShiftChar(index + 1);\n                result.push(binaryState);\n            }\n        }\n        static simplifyStates(states) {\n            let result = [];\n            for (const newState of states) {\n                let add = true;\n                for (const oldState of result) {\n                    if (oldState.isBetterThanOrEqualTo(newState)) {\n                        add = false;\n                        break;\n                    }\n                    if (newState.isBetterThanOrEqualTo(oldState)) {\n                        // iterator.remove();\n                        result = result.filter(x => x !== oldState); // remove old state\n                    }\n                }\n                if (add) {\n                    result.push(newState);\n                }\n            }\n            return result;\n        }\n    }\n\n    /*\n     * Copyright 2013 ZXing authors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *      http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // package com.google.zxing.aztec.encoder;\n    // import com.google.zxing.common.BitArray;\n    // import com.google.zxing.common.BitMatrix;\n    // import com.google.zxing.common.reedsolomon.GenericGF;\n    // import com.google.zxing.common.reedsolomon.ReedSolomonEncoder;\n    /**\n     * Generates Aztec 2D barcodes.\n     *\n     * @author Rustam Abdullaev\n     */\n    /*public final*/ class Encoder$1 {\n        constructor() {\n        }\n        /**\n         * Encodes the given binary content as an Aztec symbol\n         *\n         * @param data input data string\n         * @return Aztec symbol matrix with metadata\n         */\n        static encodeBytes(data) {\n            return Encoder$1.encode(data, Encoder$1.DEFAULT_EC_PERCENT, Encoder$1.DEFAULT_AZTEC_LAYERS);\n        }\n        /**\n         * Encodes the given binary content as an Aztec symbol\n         *\n         * @param data input data string\n         * @param minECCPercent minimal percentage of error check words (According to ISO/IEC 24778:2008,\n         *                      a minimum of 23% + 3 words is recommended)\n         * @param userSpecifiedLayers if non-zero, a user-specified value for the number of layers\n         * @return Aztec symbol matrix with metadata\n         */\n        static encode(data, minECCPercent, userSpecifiedLayers) {\n            // High-level encode\n            let bits = new HighLevelEncoder(data).encode();\n            // stuff bits and choose symbol size\n            let eccBits = Integer.truncDivision((bits.getSize() * minECCPercent), 100) + 11;\n            let totalSizeBits = bits.getSize() + eccBits;\n            let compact;\n            let layers;\n            let totalBitsInLayer;\n            let wordSize;\n            let stuffedBits;\n            if (userSpecifiedLayers !== Encoder$1.DEFAULT_AZTEC_LAYERS) {\n                compact = userSpecifiedLayers < 0;\n                layers = Math.abs(userSpecifiedLayers);\n                if (layers > (compact ? Encoder$1.MAX_NB_BITS_COMPACT : Encoder$1.MAX_NB_BITS)) {\n                    throw new IllegalArgumentException(StringUtils.format('Illegal value %s for layers', userSpecifiedLayers));\n                }\n                totalBitsInLayer = Encoder$1.totalBitsInLayer(layers, compact);\n                wordSize = Encoder$1.WORD_SIZE[layers];\n                let usableBitsInLayers = totalBitsInLayer - (totalBitsInLayer % wordSize);\n                stuffedBits = Encoder$1.stuffBits(bits, wordSize);\n                if (stuffedBits.getSize() + eccBits > usableBitsInLayers) {\n                    throw new IllegalArgumentException('Data to large for user specified layer');\n                }\n                if (compact && stuffedBits.getSize() > wordSize * 64) {\n                    // Compact format only allows 64 data words, though C4 can hold more words than that\n                    throw new IllegalArgumentException('Data to large for user specified layer');\n                }\n            }\n            else {\n                wordSize = 0;\n                stuffedBits = null;\n                // We look at the possible table sizes in the order Compact1, Compact2, Compact3,\n                // Compact4, Normal4,...  Normal(i) for i < 4 isn't typically used since Compact(i+1)\n                // is the same size, but has more data.\n                for (let i /*int*/ = 0;; i++) {\n                    if (i > Encoder$1.MAX_NB_BITS) {\n                        throw new IllegalArgumentException('Data too large for an Aztec code');\n                    }\n                    compact = i <= 3;\n                    layers = compact ? i + 1 : i;\n                    totalBitsInLayer = Encoder$1.totalBitsInLayer(layers, compact);\n                    if (totalSizeBits > totalBitsInLayer) {\n                        continue;\n                    }\n                    // [Re]stuff the bits if this is the first opportunity, or if the\n                    // wordSize has changed\n                    if (stuffedBits == null || wordSize !== Encoder$1.WORD_SIZE[layers]) {\n                        wordSize = Encoder$1.WORD_SIZE[layers];\n                        stuffedBits = Encoder$1.stuffBits(bits, wordSize);\n                    }\n                    let usableBitsInLayers = totalBitsInLayer - (totalBitsInLayer % wordSize);\n                    if (compact && stuffedBits.getSize() > wordSize * 64) {\n                        // Compact format only allows 64 data words, though C4 can hold more words than that\n                        continue;\n                    }\n                    if (stuffedBits.getSize() + eccBits <= usableBitsInLayers) {\n                        break;\n                    }\n                }\n            }\n            let messageBits = Encoder$1.generateCheckWords(stuffedBits, totalBitsInLayer, wordSize);\n            // generate mode message\n            let messageSizeInWords = stuffedBits.getSize() / wordSize;\n            let modeMessage = Encoder$1.generateModeMessage(compact, layers, messageSizeInWords);\n            // allocate symbol\n            let baseMatrixSize = (compact ? 11 : 14) + layers * 4; // not including alignment lines\n            let alignmentMap = new Int32Array(baseMatrixSize);\n            let matrixSize;\n            if (compact) {\n                // no alignment marks in compact mode, alignmentMap is a no-op\n                matrixSize = baseMatrixSize;\n                for (let i /*int*/ = 0; i < alignmentMap.length; i++) {\n                    alignmentMap[i] = i;\n                }\n            }\n            else {\n                matrixSize = baseMatrixSize + 1 + 2 * Integer.truncDivision((Integer.truncDivision(baseMatrixSize, 2) - 1), 15);\n                let origCenter = Integer.truncDivision(baseMatrixSize, 2);\n                let center = Integer.truncDivision(matrixSize, 2);\n                for (let i /*int*/ = 0; i < origCenter; i++) {\n                    let newOffset = i + Integer.truncDivision(i, 15);\n                    alignmentMap[origCenter - i - 1] = center - newOffset - 1;\n                    alignmentMap[origCenter + i] = center + newOffset + 1;\n                }\n            }\n            let matrix = new BitMatrix(matrixSize);\n            // draw data bits\n            for (let i /*int*/ = 0, rowOffset = 0; i < layers; i++) {\n                let rowSize = (layers - i) * 4 + (compact ? 9 : 12);\n                for (let j /*int*/ = 0; j < rowSize; j++) {\n                    let columnOffset = j * 2;\n                    for (let k /*int*/ = 0; k < 2; k++) {\n                        if (messageBits.get(rowOffset + columnOffset + k)) {\n                            matrix.set(alignmentMap[i * 2 + k], alignmentMap[i * 2 + j]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 2 + columnOffset + k)) {\n                            matrix.set(alignmentMap[i * 2 + j], alignmentMap[baseMatrixSize - 1 - i * 2 - k]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 4 + columnOffset + k)) {\n                            matrix.set(alignmentMap[baseMatrixSize - 1 - i * 2 - k], alignmentMap[baseMatrixSize - 1 - i * 2 - j]);\n                        }\n                        if (messageBits.get(rowOffset + rowSize * 6 + columnOffset + k)) {\n                            matrix.set(alignmentMap[baseMatrixSize - 1 - i * 2 - j], alignmentMap[i * 2 + k]);\n                        }\n                    }\n                }\n                rowOffset += rowSize * 8;\n            }\n            // draw mode message\n            Encoder$1.drawModeMessage(matrix, compact, matrixSize, modeMessage);\n            // draw alignment marks\n            if (compact) {\n                Encoder$1.drawBullsEye(matrix, Integer.truncDivision(matrixSize, 2), 5);\n            }\n            else {\n                Encoder$1.drawBullsEye(matrix, Integer.truncDivision(matrixSize, 2), 7);\n                for (let i /*int*/ = 0, j = 0; i < Integer.truncDivision(baseMatrixSize, 2) - 1; i += 15, j += 16) {\n                    for (let k /*int*/ = Integer.truncDivision(matrixSize, 2) & 1; k < matrixSize; k += 2) {\n                        matrix.set(Integer.truncDivision(matrixSize, 2) - j, k);\n                        matrix.set(Integer.truncDivision(matrixSize, 2) + j, k);\n                        matrix.set(k, Integer.truncDivision(matrixSize, 2) - j);\n                        matrix.set(k, Integer.truncDivision(matrixSize, 2) + j);\n                    }\n                }\n            }\n            let aztec = new AztecCode();\n            aztec.setCompact(compact);\n            aztec.setSize(matrixSize);\n            aztec.setLayers(layers);\n            aztec.setCodeWords(messageSizeInWords);\n            aztec.setMatrix(matrix);\n            return aztec;\n        }\n        static drawBullsEye(matrix, center, size) {\n            for (let i /*int*/ = 0; i < size; i += 2) {\n                for (let j /*int*/ = center - i; j <= center + i; j++) {\n                    matrix.set(j, center - i);\n                    matrix.set(j, center + i);\n                    matrix.set(center - i, j);\n                    matrix.set(center + i, j);\n                }\n            }\n            matrix.set(center - size, center - size);\n            matrix.set(center - size + 1, center - size);\n            matrix.set(center - size, center - size + 1);\n            matrix.set(center + size, center - size);\n            matrix.set(center + size, center - size + 1);\n            matrix.set(center + size, center + size - 1);\n        }\n        static generateModeMessage(compact, layers, messageSizeInWords) {\n            let modeMessage = new BitArray();\n            if (compact) {\n                modeMessage.appendBits(layers - 1, 2);\n                modeMessage.appendBits(messageSizeInWords - 1, 6);\n                modeMessage = Encoder$1.generateCheckWords(modeMessage, 28, 4);\n            }\n            else {\n                modeMessage.appendBits(layers - 1, 5);\n                modeMessage.appendBits(messageSizeInWords - 1, 11);\n                modeMessage = Encoder$1.generateCheckWords(modeMessage, 40, 4);\n            }\n            return modeMessage;\n        }\n        static drawModeMessage(matrix, compact, matrixSize, modeMessage) {\n            let center = Integer.truncDivision(matrixSize, 2);\n            if (compact) {\n                for (let i /*int*/ = 0; i < 7; i++) {\n                    let offset = center - 3 + i;\n                    if (modeMessage.get(i)) {\n                        matrix.set(offset, center - 5);\n                    }\n                    if (modeMessage.get(i + 7)) {\n                        matrix.set(center + 5, offset);\n                    }\n                    if (modeMessage.get(20 - i)) {\n                        matrix.set(offset, center + 5);\n                    }\n                    if (modeMessage.get(27 - i)) {\n                        matrix.set(center - 5, offset);\n                    }\n                }\n            }\n            else {\n                for (let i /*int*/ = 0; i < 10; i++) {\n                    let offset = center - 5 + i + Integer.truncDivision(i, 5);\n                    if (modeMessage.get(i)) {\n                        matrix.set(offset, center - 7);\n                    }\n                    if (modeMessage.get(i + 10)) {\n                        matrix.set(center + 7, offset);\n                    }\n                    if (modeMessage.get(29 - i)) {\n                        matrix.set(offset, center + 7);\n                    }\n                    if (modeMessage.get(39 - i)) {\n                        matrix.set(center - 7, offset);\n                    }\n                }\n            }\n        }\n        static generateCheckWords(bitArray, totalBits, wordSize) {\n            // bitArray is guaranteed to be a multiple of the wordSize, so no padding needed\n            let messageSizeInWords = bitArray.getSize() / wordSize;\n            let rs = new ReedSolomonEncoder(Encoder$1.getGF(wordSize));\n            let totalWords = Integer.truncDivision(totalBits, wordSize);\n            let messageWords = Encoder$1.bitsToWords(bitArray, wordSize, totalWords);\n            rs.encode(messageWords, totalWords - messageSizeInWords);\n            let startPad = totalBits % wordSize;\n            let messageBits = new BitArray();\n            messageBits.appendBits(0, startPad);\n            for (const messageWord /*: int*/ of Array.from(messageWords)) {\n                messageBits.appendBits(messageWord, wordSize);\n            }\n            return messageBits;\n        }\n        static bitsToWords(stuffedBits, wordSize, totalWords) {\n            let message = new Int32Array(totalWords);\n            let i;\n            let n;\n            for (i = 0, n = stuffedBits.getSize() / wordSize; i < n; i++) {\n                let value = 0;\n                for (let j /*int*/ = 0; j < wordSize; j++) {\n                    value |= stuffedBits.get(i * wordSize + j) ? (1 << wordSize - j - 1) : 0;\n                }\n                message[i] = value;\n            }\n            return message;\n        }\n        static getGF(wordSize) {\n            switch (wordSize) {\n                case 4:\n                    return GenericGF.AZTEC_PARAM;\n                case 6:\n                    return GenericGF.AZTEC_DATA_6;\n                case 8:\n                    return GenericGF.AZTEC_DATA_8;\n                case 10:\n                    return GenericGF.AZTEC_DATA_10;\n                case 12:\n                    return GenericGF.AZTEC_DATA_12;\n                default:\n                    throw new IllegalArgumentException('Unsupported word size ' + wordSize);\n            }\n        }\n        static stuffBits(bits, wordSize) {\n            let out = new BitArray();\n            let n = bits.getSize();\n            let mask = (1 << wordSize) - 2;\n            for (let i /*int*/ = 0; i < n; i += wordSize) {\n                let word = 0;\n                for (let j /*int*/ = 0; j < wordSize; j++) {\n                    if (i + j >= n || bits.get(i + j)) {\n                        word |= 1 << (wordSize - 1 - j);\n                    }\n                }\n                if ((word & mask) === mask) {\n                    out.appendBits(word & mask, wordSize);\n                    i--;\n                }\n                else if ((word & mask) === 0) {\n                    out.appendBits(word | 1, wordSize);\n                    i--;\n                }\n                else {\n                    out.appendBits(word, wordSize);\n                }\n            }\n            return out;\n        }\n        static totalBitsInLayer(layers, compact) {\n            return ((compact ? 88 : 112) + 16 * layers) * layers;\n        }\n    }\n    Encoder$1.DEFAULT_EC_PERCENT = 33; // default minimal percentage of error check words\n    Encoder$1.DEFAULT_AZTEC_LAYERS = 0;\n    Encoder$1.MAX_NB_BITS = 32;\n    Encoder$1.MAX_NB_BITS_COMPACT = 4;\n    Encoder$1.WORD_SIZE = Int32Array.from([\n        4, 6, 6, 8, 8, 8, 8, 8, 8, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n        12, 12, 12, 12, 12, 12, 12, 12, 12, 12\n    ]);\n\n    /*\n    * Copyright 2013 ZXing authors\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *      http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    /**\n     * Renders an Aztec code as a {@link BitMatrix}.\n     */\n    /*public final*/ class AztecWriter {\n        // @Override\n        encode(contents, format, width, height) {\n            return this.encodeWithHints(contents, format, width, height, null);\n        }\n        // @Override\n        encodeWithHints(contents, format, width, height, hints) {\n            let charset = StandardCharsets.ISO_8859_1;\n            let eccPercent = Encoder$1.DEFAULT_EC_PERCENT;\n            let layers = Encoder$1.DEFAULT_AZTEC_LAYERS;\n            if (hints != null) {\n                if (hints.has(EncodeHintType$1.CHARACTER_SET)) {\n                    charset = Charset.forName(hints.get(EncodeHintType$1.CHARACTER_SET).toString());\n                }\n                if (hints.has(EncodeHintType$1.ERROR_CORRECTION)) {\n                    eccPercent = Integer.parseInt(hints.get(EncodeHintType$1.ERROR_CORRECTION).toString());\n                }\n                if (hints.has(EncodeHintType$1.AZTEC_LAYERS)) {\n                    layers = Integer.parseInt(hints.get(EncodeHintType$1.AZTEC_LAYERS).toString());\n                }\n            }\n            return AztecWriter.encodeLayers(contents, format, width, height, charset, eccPercent, layers);\n        }\n        static encodeLayers(contents, format, width, height, charset, eccPercent, layers) {\n            if (format !== BarcodeFormat$1.AZTEC) {\n                throw new IllegalArgumentException('Can only encode AZTEC, but got ' + format);\n            }\n            let aztec = Encoder$1.encode(StringUtils.getBytes(contents, charset), eccPercent, layers);\n            return AztecWriter.renderResult(aztec, width, height);\n        }\n        static renderResult(code, width, height) {\n            let input = code.getMatrix();\n            if (input == null) {\n                throw new IllegalStateException();\n            }\n            let inputWidth = input.getWidth();\n            let inputHeight = input.getHeight();\n            let outputWidth = Math.max(width, inputWidth);\n            let outputHeight = Math.max(height, inputHeight);\n            let multiple = Math.min(outputWidth / inputWidth, outputHeight / inputHeight);\n            let leftPadding = (outputWidth - (inputWidth * multiple)) / 2;\n            let topPadding = (outputHeight - (inputHeight * multiple)) / 2;\n            let output = new BitMatrix(outputWidth, outputHeight);\n            for (let inputY /*int*/ = 0, outputY = topPadding; inputY < inputHeight; inputY++, outputY += multiple) {\n                // Write the contents of this row of the barcode\n                for (let inputX /*int*/ = 0, outputX = leftPadding; inputX < inputWidth; inputX++, outputX += multiple) {\n                    if (input.get(inputX, inputY)) {\n                        output.setRegion(outputX, outputY, multiple, multiple);\n                    }\n                }\n            }\n            return output;\n        }\n    }\n\n    exports.AbstractExpandedDecoder = AbstractExpandedDecoder;\n    exports.ArgumentException = ArgumentException;\n    exports.ArithmeticException = ArithmeticException;\n    exports.AztecCode = AztecCode;\n    exports.AztecCodeReader = AztecReader;\n    exports.AztecCodeWriter = AztecWriter;\n    exports.AztecDecoder = Decoder;\n    exports.AztecDetector = Detector;\n    exports.AztecDetectorResult = AztecDetectorResult;\n    exports.AztecEncoder = Encoder$1;\n    exports.AztecHighLevelEncoder = HighLevelEncoder;\n    exports.AztecPoint = Point;\n    exports.BarcodeFormat = BarcodeFormat$1;\n    exports.Binarizer = Binarizer;\n    exports.BinaryBitmap = BinaryBitmap;\n    exports.BitArray = BitArray;\n    exports.BitMatrix = BitMatrix;\n    exports.BitSource = BitSource;\n    exports.BrowserAztecCodeReader = BrowserAztecCodeReader;\n    exports.BrowserBarcodeReader = BrowserBarcodeReader;\n    exports.BrowserCodeReader = BrowserCodeReader;\n    exports.BrowserDatamatrixCodeReader = BrowserDatamatrixCodeReader;\n    exports.BrowserMultiFormatReader = BrowserMultiFormatReader;\n    exports.BrowserPDF417Reader = BrowserPDF417Reader;\n    exports.BrowserQRCodeReader = BrowserQRCodeReader;\n    exports.BrowserQRCodeSvgWriter = BrowserQRCodeSvgWriter;\n    exports.CharacterSetECI = CharacterSetECI;\n    exports.ChecksumException = ChecksumException;\n    exports.Code128Reader = Code128Reader;\n    exports.Code39Reader = Code39Reader;\n    exports.DataMatrixDecodedBitStreamParser = DecodedBitStreamParser;\n    exports.DataMatrixReader = DataMatrixReader;\n    exports.DecodeHintType = DecodeHintType$1;\n    exports.DecoderResult = DecoderResult;\n    exports.DefaultGridSampler = DefaultGridSampler;\n    exports.DetectorResult = DetectorResult;\n    exports.EAN13Reader = EAN13Reader;\n    exports.EncodeHintType = EncodeHintType$1;\n    exports.Exception = Exception;\n    exports.FormatException = FormatException;\n    exports.GenericGF = GenericGF;\n    exports.GenericGFPoly = GenericGFPoly;\n    exports.GlobalHistogramBinarizer = GlobalHistogramBinarizer;\n    exports.GridSampler = GridSampler;\n    exports.GridSamplerInstance = GridSamplerInstance;\n    exports.HTMLCanvasElementLuminanceSource = HTMLCanvasElementLuminanceSource;\n    exports.HybridBinarizer = HybridBinarizer;\n    exports.ITFReader = ITFReader;\n    exports.IllegalArgumentException = IllegalArgumentException;\n    exports.IllegalStateException = IllegalStateException;\n    exports.InvertedLuminanceSource = InvertedLuminanceSource;\n    exports.LuminanceSource = LuminanceSource;\n    exports.MathUtils = MathUtils;\n    exports.MultiFormatOneDReader = MultiFormatOneDReader;\n    exports.MultiFormatReader = MultiFormatReader;\n    exports.MultiFormatWriter = MultiFormatWriter;\n    exports.NotFoundException = NotFoundException;\n    exports.OneDReader = OneDReader;\n    exports.PDF417DecodedBitStreamParser = DecodedBitStreamParser$2;\n    exports.PDF417DecoderErrorCorrection = ErrorCorrection;\n    exports.PDF417Reader = PDF417Reader;\n    exports.PDF417ResultMetadata = PDF417ResultMetadata;\n    exports.PerspectiveTransform = PerspectiveTransform;\n    exports.PlanarYUVLuminanceSource = PlanarYUVLuminanceSource;\n    exports.QRCodeByteMatrix = ByteMatrix;\n    exports.QRCodeDataMask = DataMask;\n    exports.QRCodeDecodedBitStreamParser = DecodedBitStreamParser$1;\n    exports.QRCodeDecoderErrorCorrectionLevel = ErrorCorrectionLevel;\n    exports.QRCodeDecoderFormatInformation = FormatInformation;\n    exports.QRCodeEncoder = Encoder;\n    exports.QRCodeEncoderQRCode = QRCode;\n    exports.QRCodeMaskUtil = MaskUtil;\n    exports.QRCodeMatrixUtil = MatrixUtil;\n    exports.QRCodeMode = Mode$1;\n    exports.QRCodeReader = QRCodeReader;\n    exports.QRCodeVersion = Version$1;\n    exports.QRCodeWriter = QRCodeWriter;\n    exports.RGBLuminanceSource = RGBLuminanceSource;\n    exports.RSS14Reader = RSS14Reader;\n    exports.RSSExpandedReader = RSSExpandedReader;\n    exports.ReaderException = ReaderException;\n    exports.ReedSolomonDecoder = ReedSolomonDecoder;\n    exports.ReedSolomonEncoder = ReedSolomonEncoder;\n    exports.ReedSolomonException = ReedSolomonException;\n    exports.Result = Result;\n    exports.ResultMetadataType = ResultMetadataType$1;\n    exports.ResultPoint = ResultPoint;\n    exports.StringUtils = StringUtils;\n    exports.UnsupportedOperationException = UnsupportedOperationException;\n    exports.VideoInputDevice = VideoInputDevice;\n    exports.WhiteRectangleDetector = WhiteRectangleDetector;\n    exports.WriterException = WriterException;\n    exports.ZXingArrays = Arrays;\n    exports.ZXingCharset = Charset;\n    exports.ZXingInteger = Integer;\n    exports.ZXingStandardCharsets = StandardCharsets;\n    exports.ZXingStringBuilder = StringBuilder;\n    exports.ZXingStringEncoding = StringEncoding;\n    exports.ZXingSystem = System;\n    exports.createAbstractExpandedDecoder = createDecoder;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { onDestroy } from \"svelte\";\r\n  import { createEventDispatcher } from \"svelte\";\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  import { BrowserBarcodeReader, BarcodeFormat, DecodeHintType, RGBLuminanceSource, BinaryBitmap, HybridBinarizer } from \"@zxing/library\";\r\n\r\n  const codeReader = new BrowserBarcodeReader();\r\n\r\n  function barcode(code) {\r\n    console.log(code);\r\n    console.log(\"dispatching message\");\r\n    codeReader.reset();\r\n\r\n    dispatch(\"message\", {\r\n      type: \"code\",\r\n      code: code.codeResult.code,\r\n    });\r\n  }\r\n\r\n  onDestroy(() => {\r\n    codeReader.reset();\r\n  });\r\n\r\n  onMount(() => {\r\n    var backCamID = null;\r\n    var last_camera = null;\r\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\r\n      devices.forEach(function (device) {\r\n        console.log(device);\r\n        if (\r\n          device.kind == \"videoinput\" &&\r\n          device.label.match(/back/) !== null\r\n        ) {\r\n          backCamID = device.deviceId;\r\n        }\r\n        if (device.kind === \"videoinput\") {\r\n          last_camera = device.deviceId;\r\n        }\r\n      });\r\n\r\n      if (backCamID === null) {\r\n        backCamID = last_camera;\r\n      }\r\n\r\n      console.log(\"Camera selected\");\r\n      console.log(backCamID);\r\n\r\n      console.log(wrapper);\r\n      console.log(\"Camera\");\r\n      console.log(backCamID);\r\n    });\r\n\r\n\r\n    codeReader.decodeOnceFromVideoDevice(null, 'video', (result, err) => {\r\n    if (result) {\r\n      // properly decoded qr code\r\n      console.log('Found code!', result)\r\n      barcode(result.text);\r\n    }\r\n\r\n    if (err) {\r\n      // As long as this error belongs into one of the following categories\r\n      // the code reader is going to continue as excepted. Any other error\r\n      // will stop the decoding loop.\r\n      //\r\n      // Excepted Exceptions:\r\n      //\r\n      //  - NotFoundException\r\n      //  - ChecksumException\r\n      //  - FormatException\r\n\r\n      console.log(err);\r\n      /*\r\n      if (err instanceof ZXing.NotFoundException) {\r\n        console.log('No QR code found.')\r\n      }\r\n\r\n      if (err instanceof ZXing.ChecksumException) {\r\n        console.log('A code was found, but it\\'s read value was not valid.')\r\n      }\r\n\r\n      if (err instanceof ZXing.FormatException) {\r\n        console.log('A code was found, but it was in a invalid format.')\r\n      }\r\n      */\r\n    }\r\n  })\r\n\r\n  });\r\n</script>\r\n\r\n<video id=\"video\" width=\"300\" height=\"200\" style=\"border: 1px solid gray\">\r\n<track default kind=\"captions\">\r\n</video>\r\n\r\n","<script>\r\n  import { local, categoryList, database } from \"../components/state.js\";\r\n\r\n  import Barcode from \"../components/Barcode.svelte\";\r\n\r\n  import { Button } from \"smelte\";\r\n  import { TextField } from \"smelte\";\r\n  import { Select } from \"smelte\";\r\n  import { AppBar } from \"smelte\";\r\n  import { Spacer } from \"smelte\";\r\n  import { Image } from \"smelte\";\r\n  import { ProgressCircular } from \"smelte\";\r\n\r\n  import { fade } from \"svelte/transition\";\r\n  import { pop, push } from \"svelte-spa-router\";\r\n\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let params = {};\r\n\r\n  var useBarcode = false; // the barcode function is not activated due to a Chrome bug\r\n  var barcodeScannerVisible = false;\r\n\r\n  var item = {};\r\n  var saveOnDestroy = true;\r\n  var queryInProgress = false;\r\n\r\n  var selectCategories = $categoryList.map((oneItem) => ({\r\n    value: oneItem._id,\r\n    text: oneItem.category,\r\n  }));\r\n\r\n  function saveItem(doPop = true) {\r\n    if (item.produit == \"\") item.produit = $local.empty;\r\n    database.updateItem(item);\r\n    saveOnDestroy = false;\r\n    if (doPop) pop();\r\n  }\r\n\r\n  // Load values\r\n  if (params.action == \"new\") {\r\n    item = database.getShoppingListNewItem();\r\n    item.categoryId = params.id == undefined ? \"\" : params.id;\r\n  } else {\r\n    // We enter this form with an existing item Id in that case\r\n    item = database.getShoppingListItem(params.id);\r\n    if (item == undefined) {\r\n      // Only happen if we reload the page directly\r\n      item = database.getShoppingListNewItem();\r\n      saveOnDestroy = false;\r\n      push(\"#/\");\r\n    }\r\n  }\r\n\r\n  onMount(async () => {\r\n    document.getElementById(\"produit\").focus();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    if (saveOnDestroy) saveItem(false);\r\n  });\r\n\r\n  function back() {\r\n    saveItem();\r\n  }\r\n\r\n  async function getBarcodeInfo(code) {\r\n    queryInProgress = true;\r\n    console.log(code);\r\n    var produit = await getOpenFacts(code);\r\n    if (produit != null) {\r\n      item.produit = produit.product_name;\r\n      item.ean = code;\r\n      item.image_small_url = produit.image_small_url;\r\n      item.image_url = produit.image_url;\r\n      item.detail = produit.brands;\r\n    } else {\r\n      dispatch(\"routeEvent\", {\r\n        action: \"displaySnackbar\",\r\n        message: $local.scanNotFound,\r\n        color: \"error\",\r\n      });\r\n    }\r\n    queryInProgress = false;\r\n  }\r\n\r\n  function barcodeScannerResult(message) {\r\n    barcodeScannerVisible = false;\r\n    console.log(\"Result from barcode scanner\");\r\n    console.log(message);\r\n    if (message.detail.type == \"code\") {\r\n      getBarcodeInfo(message.detail.code);\r\n    }\r\n  }\r\n\r\n  function showError(error) {\r\n    dispatch(\"routeEvent\", {\r\n      action: \"displaySnackbar\",\r\n      message: $local.scanError + error,\r\n      color: \"error\",\r\n    });\r\n  }\r\n\r\n  function barcodeScan() {\r\n    barcodeScannerVisible = !barcodeScannerVisible;\r\n  }\r\n\r\n  // *****************************************************************************************\r\n  // OpenFoodFacts & OpenBeautyFacts requests\r\n  // *****************************************************************************************\r\n\r\n  function _getBaseUrl(category) {\r\n    return category === \"Food\"\r\n      ? \"https://world.openfoodfacts.org\"\r\n      : \"https://world.openbeautyfacts.org\";\r\n  }\r\n\r\n  async function getProduct(ean, category) {\r\n    const url = _getBaseUrl(category) + \"/api/v0/product/\" + ean + \".json\";\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"text/plain\",\r\n          // ,UserAgent: navigator.userAgent\r\n        },\r\n      });\r\n      const product = await response.json();\r\n      if (product.status === 0) {\r\n        return null;\r\n      }\r\n      return product;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async function getOpenFacts(ean) {\r\n    var produit = await getProduct(ean, \"Food\");\r\n    if (produit != null) {\r\n      return produit.product;\r\n    } else {\r\n      produit = await getProduct(ean, \"Beauty\");\r\n      if (produit != null) {\r\n        return produit.product;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n  // *****************************************************************************************\r\n</script>\r\n\r\n<div in:fade>\r\n  <AppBar class=\"bg-blue-400\">\r\n    <div class=\"md:visible\">\r\n      <Button\r\n        icon=\"keyboard_backspace\"\r\n        flat\r\n        color=\"white\"\r\n        text\r\n        on:click={back}\r\n      />\r\n    </div>\r\n    <h6 class=\"md:pl-3 text-white text-lg\">{$local.product}</h6>\r\n    <Spacer />\r\n    {#if useBarcode}\r\n      {#if queryInProgress}\r\n        <ProgressCircular size=\"50\" color=\"alert\" />\r\n      {:else}\r\n        <Button\r\n          icon=\"calendar_view_day\"\r\n          iconClass=\"text-white transform rotate-90\"\r\n          color=\"white\"\r\n          flat\r\n          text\r\n          on:click={barcodeScan}\r\n        />\r\n      {/if}\r\n    {/if}\r\n  </AppBar>\r\n\r\n  {#if barcodeScannerVisible}\r\n    <Barcode on:message={barcodeScannerResult} />\r\n  {/if}\r\n\r\n  <TextField\r\n    id=\"produit\"\r\n    bind:value={item.produit}\r\n    label={$local.product}\r\n    outlined\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"100\"\r\n  />\r\n\r\n  <Select\r\n    bind:value={item.categoryId}\r\n    label={$local.category}\r\n    items={selectCategories}\r\n    dense\r\n    noUnderline\r\n    class=\"mb-6\"\r\n  />\r\n\r\n  <TextField\r\n    id=\"detail\"\r\n    bind:value={item.detail}\r\n    label={$local.detail}\r\n    outlined\r\n    textarea\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"500\"\r\n  />\r\n\r\n  {#if item.image_url != undefined && item.image_url != \"\"}\r\n    <div class=\"text-center\">\r\n      <Image src={item.image_url} alt={item.produit} />\r\n    </div>\r\n  {/if}\r\n</div>\r\n","<script>\r\n  import {\r\n    parameters,\r\n    local,\r\n    categoryList\r\n  } from \"../components/state.js\";\r\n\r\n  import Item from \"../components/Item.svelte\";\r\n\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  import { fade } from \"svelte/transition\";\r\n  import { Button } from \"smelte\";\r\n  import { AppBar } from \"smelte\";\r\n\r\n  import { push, location } from \"svelte-spa-router\";\r\n\r\n  // Save current location\r\n  $parameters.startLocation = $location;\r\n  parameters.saveParams();\r\n\r\n  function openDrawer() {\r\n    dispatch(\"routeEvent\", { action: \"openDrawer\" });\r\n  }\r\n</script>\r\n\r\n<div in:fade>\r\n  <AppBar class=\"bg-blue-400\">\r\n    <div class=\"md:hidden\">\r\n      <Button icon=\"menu\" flat color=\"white\" text on:click={openDrawer} />\r\n    </div>\r\n    <h6 class=\"md:pl-3 text-white text-lg\">{$local.categories}</h6>\r\n  </AppBar>\r\n\r\n  <ul>\r\n    {#each $categoryList as item (item._id)}\r\n      <Item type=\"category\" bind:item />\r\n    {/each}\r\n  </ul>\r\n\r\n  <div class=\"fixed px-5 py-5 bottom-0 right-0\">\r\n    <Button color=\"error\" icon=\"add\" on:click={() => push('#/category/new')} />\r\n  </div>\r\n</div>\r\n","<script>\r\n  import {\r\n    local,\r\n    database\r\n  } from \"../components/state.js\";\r\n  import { Button } from \"smelte\";\r\n  import { TextField } from \"smelte\";\r\n  import { AppBar } from \"smelte\";\r\n\r\n  import { fade } from \"svelte/transition\";\r\n  import { pop, push } from \"svelte-spa-router\";\r\n\r\n  import { onMount, onDestroy } from \"svelte\";\r\n\r\n  export let params = {};\r\n\r\n  var item = {};\r\n  var saveOnDestroy = true;\r\n\r\n  function saveCategory(doPop = true) {\r\n    if (item.category == \"\") item.category = $local.empty;\r\n    database.updateCategory(item);\r\n    saveOnDestroy = false;\r\n    if (doPop) pop();\r\n  }\r\n\r\n  // Load values\r\n  if (params.action == \"new\") {\r\n    item = database.getCategoryListNewItem();\r\n  } else {\r\n    item = database.getCategoryListItem(params.id);\r\n    if (item == undefined) {\r\n      // Only happen if we reload the page directly\r\n      item = database.getCategoryListNewItem();\r\n      saveOnDestroy = false;\r\n      push(\"#/categories\");\r\n    }\r\n  }\r\n\r\n  onMount(async () => {\r\n    document.getElementById(\"category\").focus();\r\n  });\r\n\r\n  onDestroy(async () => {\r\n    if (saveOnDestroy) saveCategory(false);\r\n  });\r\n\r\n  function back() {\r\n    saveCategory();\r\n  }\r\n</script>\r\n\r\n<div in:fade>\r\n  <AppBar class=\"bg-blue-400\">\r\n    <div class=\"md:visible\">\r\n      <Button\r\n        icon=\"keyboard_backspace\"\r\n        flat\r\n        color=\"white\"\r\n        text\r\n        on:click={back} />\r\n    </div>\r\n    <h6 class=\"md:pl-3 text-white text-lg\">{$local.category}</h6>\r\n  </AppBar>\r\n\r\n  <TextField\r\n    id=\"category\"\r\n    bind:value={item.category}\r\n    label={$local.category}\r\n    outlined\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"100\" />\r\n\r\n  <TextField\r\n    id=\"detail\"\r\n    bind:value={item.detail}\r\n    label={$local.detail}\r\n    outlined\r\n    textarea\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"500\" />\r\n\r\n</div>\r\n","<script>\r\n  import {\r\n    parameters,\r\n    local,\r\n    locLanguages,\r\n    database\r\n  } from \"../components/state.js\";\r\n\r\n  import { TextField } from \"smelte\";\r\n  import { Checkbox } from \"smelte\";\r\n  import { Select } from \"smelte\";\r\n  import { AppBar } from \"smelte\";\r\n  import { Button } from \"smelte\";\r\n  import { RadioButtonGroup } from \"smelte\";\r\n\r\n  import { onDestroy } from \"svelte\";\r\n  import { push, location } from \"svelte-spa-router\";\r\n\r\n  import { fade } from \"svelte/transition\";\r\n\r\n  import { createEventDispatcher } from \"svelte\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  var serverName;\r\n  $: {\r\n    // We put this line to force svelte to listen to the parameter change and then save the parameters\r\n    serverName = $parameters.server;\r\n    parameters.saveParams();\r\n  }\r\n\r\n  // Save current location\r\n  $parameters.startLocation = $location;\r\n\r\n  onDestroy(async () => {\r\n    database.openDb();\r\n  });\r\n\r\n  function openDrawer() {\r\n    dispatch(\"routeEvent\", { action: \"openDrawer\" });\r\n  }\r\n</script>\r\n\r\n<div in:fade>\r\n  <AppBar class=\"bg-blue-400\">\r\n    <div class=\"md:hidden\">\r\n      <Button icon=\"menu\" flat color=\"white\" text on:click={openDrawer} />\r\n    </div>\r\n    <h6 class=\"md:pl-3 text-white text-lg\">{$local.settings}</h6>\r\n  </AppBar>\r\n\r\n  <h6>\r\n    <b>\r\n      <u>{$local.displaySection}</u>\r\n    </b>\r\n  </h6>\r\n  <br />\r\n  <Checkbox\r\n    label={$local.showPurchasedAtTheEnd}\r\n    bind:checked={$parameters.showPurchasedAtTheEnd} />\r\n  <Checkbox\r\n    label={$local.allwaysShowDeleteButton}\r\n    bind:checked={$parameters.allwaysShowDeleteButton} />\r\n  <Checkbox\r\n    label={$local.showEmptyCategory}\r\n    bind:checked={$parameters.showEmptyCategory} />\r\n  <Checkbox\r\n    label={$local.longPressToEdit}\r\n    bind:checked={$parameters.longPressToEdit} />\r\n\r\n  <Select\r\n    label={$local.language}\r\n    items={$locLanguages}\r\n    bind:value={$parameters.language}\r\n    on:change={local.setLocal($parameters.language)} />\r\n\r\n  <span>{$local.fontSize}</span>\r\n  <RadioButtonGroup\r\n    classes=\"flex-col3\"\r\n    bind:selected={$parameters.fontSize}\r\n    name=\"fontSize\"\r\n    items={[{ value: 'text-sm', label: 'A', classes: 'text-sm' }, { value: 'text-base', label: 'A', classes: 'text-base' }, { value: 'text-lg', label: 'A', classes: 'text-lg' }]} />\r\n  <hr />\r\n  <br />\r\n  <h6>\r\n    <b>\r\n      <u>{$local.couchdbConf}</u>\r\n    </b>\r\n  </h6>\r\n  <br />\r\n  <TextField\r\n    id=\"servername\"\r\n    bind:value={$parameters.server}\r\n    label={$local.serverName}\r\n    prepend=\"computer\"\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"100\" />\r\n\r\n  <TextField\r\n    id=\"port\"\r\n    bind:value={$parameters.port}\r\n    label={$local.port}\r\n    prepend=\"settings_input_svideo\"\r\n    type=\"number\"\r\n    min=\"0\"\r\n    max=\"9999\" />\r\n\r\n  <TextField\r\n    id=\"database\"\r\n    bind:value={$parameters.database}\r\n    label={$local.databaseName}\r\n    prepend=\"folder_open\"\r\n    type=\"text\"\r\n    min=\"3\"\r\n    max=\"100\" />\r\n  <hr />\r\n  <br />\r\n  <h6>\r\n    <b>\r\n      <u>{$local.creditSection}</u>\r\n    </b>\r\n  </h6>\r\n  <br />\r\n  <p>Icon made by Smashicons from www.flaticon.com</p>\r\n  <p>Material icons by Google</p>\r\n\r\n</div>\r\n","<script>\n  import {\n    parameters,\n    local,\n    categoryList,\n    database\n  } from \"./components/state.js\";\n  import \"smelte/src/tailwind.css\";\n\n  import { onMount } from \"svelte\";\n\n  import { Snackbar } from \"smelte\";\n  import { NavigationDrawer } from \"smelte\";\n  import { List } from \"smelte\";\n  import { ListItem } from \"smelte\";\n  import { fade } from \"svelte/transition\";\n\n  import ItemListView from \"./views/ItemListView.svelte\";\n  import ItemDetailView from \"./views/ItemDetailView.svelte\";\n  import CategoryListView from \"./views/CategoryListView.svelte\";\n  import CategoryDetailView from \"./views/CategoryDetailView.svelte\";\n  import ParameterView from \"./views/ParameterView.svelte\";\n\n  import Router from \"svelte-spa-router\";\n  import { push, location } from \"svelte-spa-router\";\n\n  // routes\n  const routes = {\n    // Exact path\n    \"/\": ItemListView,\n    \"/items/:id?\": ItemListView,\n    \"/item/:action/:id?\": ItemDetailView,\n    \"/categories\": CategoryListView,\n    \"/category/:action/:id?\": CategoryDetailView,\n    \"/settings\": ParameterView\n  };\n\n  // Read parameters and set the language\n  parameters.readParams();\n  local.setLocal($parameters.language);\n  push($parameters.startLocation);\n\n  // Drawer functions & global variables\n  var showNav = false;\n  var showNavOpenByButton = false;\n  var menuItems = [];\n\n  $: {\n    menuItems = [\n      { id: 1, icon: \"\", to: \"#/\", text: $local.all, dividerBefore: false }\n    ];\n\n    menuItems.push(\n      ...$categoryList.map(item => ({\n        to: \"#/items/\" + item._id,\n        text: item.category\n      }))\n    );\n    if ($parameters.showEmptyCategory) {\n      menuItems.push({ to: \"#/items/null\", text: $local.emtpyCategory });\n    }\n\n    menuItems.push(\n      ...[\n        {\n          id: 2,\n          icon: \"storage\",\n          to: \"#/categories\",\n          text: $local.categories,\n          dividerBefore: true\n        },\n        {\n          id: 3,\n          icon: \"settings\",\n          to: \"#/settings\",\n          text: $local.parameters,\n          dividerBefore: false\n        }\n      ]\n    );\n  }\n\n  // Open the database\n  database.openDb();\n\n  function openDrawer() {\n    showNav = true;\n    showNavOpenByButton = true;\n  }\n\n  function closeDrawer() {\n    if (!showNavOpenByButton) return;\n    showNav = false;\n    showNavOpenByButton = false;\n  }\n\n  function selectMenu(item) {\n    if (showNavOpenByButton) showNav = false;\n    showNavOpenByButton = false;\n  }\n\n  // Snack bar\n  var showSnackbar = false;\n  var snackbarMessage = \"\";\n  var snackbarColor = \"\";\n\n  function routeEvent(event) {\n    if (event.detail.action == \"displaySnackbar\") {\n      snackbarMessage = event.detail.message;\n      snackbarColor = event.detail.color;\n      showSnackbar = true;\n    } else if (event.detail.action == \"openDrawer\") {\n      openDrawer();\n    }\n  }\n</script>\n\n<Snackbar bind:value={showSnackbar} color={snackbarColor}>\n  <div>{snackbarMessage}</div>\n</Snackbar>\n\n<main\n  class=\"container relative p-8 lg:max-w-5xl lg:ml-64 mx-auto mb-6 mt-10\n  md:ml-64 md:max-w-md md:px- {$parameters.fontSize}\">\n\n  <NavigationDrawer bind:show={showNav}>\n    <List items={menuItems}>\n      <span slot=\"item\" let:item class=\"cursor-pointer\">\n        {#if item.dividerBefore}\n          <hr />\n        {/if}\n        <a href={item.to} on:click={selectMenu(item)}>\n          <ListItem\n            icon={item.icon}\n            class=\"truncate\"\n            text={item.text}\n            dense\n            selected={$location == item.to || '#' + $location == item.to} />\n        </a>\n      </span>\n    </List>\n  </NavigationDrawer>\n\n  <Router {routes} on:routeEvent={routeEvent} />\n\n</main>\n","import \"smelte/src/tailwind.css\";\nimport App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["assign","init","global","require$$1","require$$2","require$$3","require$$4","require$$5","queue","Item","require$$0","uuid","undefined","pop","listenerCount","getArguments","inherits","EE","immediate","Md5","running","get","classesDefault","createRipple","linear","scrim","spacer","breakpoints","process","wrap","_wrap","this","BrowserBarcodeReader"],"mappings":"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AAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3C,QAAQ,UAAU,CAAC,I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KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;IAClB,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC;IAChD,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAA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E,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrQ,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACvrQ,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACvR,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACvQ,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/R,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5R,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7R,QAAQ,IAAI,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,UAAU,CAAC,EAAE,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,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EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IAClH,QAAQ,OAAO,EAAE,OAAO,EAAE,OAAO;IACjC,KAAK,CAAC,CAAC;IACP;IACA;IACA;IACA,IAAI,YAAY,CAAC,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC;IAClD,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACvH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACtH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACxH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;IACpH,QAAQ,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACxH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACnH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;IACnH,QAAQ,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IACvH,QAAQ,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxH,QAAQ,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACxH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACvH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI;IACxH,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI;IACtH,QAAQ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACxH,QAAQ,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IACxH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACrH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;IACtH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrH,QAAQ,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACtH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG;IACrH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IACpH,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACvH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxH,QAAQ,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACnH,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IAChG,KAAK,CAAC,CAAC;AACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,qBAAqB,MAAM,oBAAoB,CAAC;IAChD,QAAQ,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE;IAClC,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;IAC/B,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,yBAAyB,MAAM,UAAU,CAAC;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE;IACtD;IACA;IACA;IACA,YAAY,IAAI,SAAS,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;IACnD,YAAY,IAAI,kBAAkB,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC5E,YAAY,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;IAC5C,gBAAgB,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;IAC9C,gBAAgB,SAAS,CAAC,SAAS,EAAE,CAAC;IACtC,gBAAgB,kBAAkB,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC5E,aAAa;IACb,YAAY,OAAO,IAAI,oBAAoB,CAAC,SAAS,EAAE,kBAAkB,CAAC,CAAC;IAC3E,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,SAAS,EAAE;IAC3C,YAAY,MAAM,kBAAkB,GAAG,IAAI,KAAK,EAAE,CAAC;IACnD,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC;IACxB,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;IAC3B,YAAY,IAAI,iBAAiB,GAAG,KAAK,CAAC;IAC1C,YAAY,OAAO,GAAG,GAAG,SAAS,CAAC,SAAS,EAAE,EAAE;IAChD,gBAAgB,MAAM,QAAQ,GAAG,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IACjF,gBAAgB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAChE,oBAAoB,IAAI,CAAC,iBAAiB,EAAE;IAC5C;IACA,wBAAwB,MAAM;IAC9B,qBAAqB;IACrB;IACA;IACA,oBAAoB,iBAAiB,GAAG,KAAK,CAAC;IAC9C,oBAAoB,MAAM,GAAG,CAAC,CAAC;IAC/B,oBAAoB,KAAK,MAAM,iBAAiB,IAAI,kBAAkB,EAAE;IACxE,wBAAwB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAC1D,4BAA4B,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACzF,yBAAyB;IACzB,wBAAwB,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAC1D,4BAA4B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACzF,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC;IAC/C,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,iBAAiB,GAAG,IAAI,CAAC;IACzC,gBAAgB,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClD,gBAAgB,IAAI,CAAC,QAAQ,EAAE;IAC/B,oBAAoB,MAAM;IAC1B,iBAAiB;IACjB;IACA;IACA,gBAAgB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACzC,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5D,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACzD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5D,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACzD,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,kBAAkB,CAAC;IACtC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE;IAC3D,YAAY,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;IAC9C,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC5C;IACA,YAAY,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,YAAY,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,qBAAqB,CAAC,CAAC;IACtL,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACnC,gBAAgB,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3D,gBAAgB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC,oBAAoB,CAAC,CAAC;IACpL,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,OAAO,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE;IACnE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChE,gBAAgB,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7D,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE;IAC1F;IACA,YAAY,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;IAC9B,YAAY,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC5D,YAAY,OAAO,QAAQ,GAAG,MAAM,EAAE,QAAQ,IAAI,UAAU,CAAC,QAAQ,EAAE;IACvE,gBAAgB,IAAI,GAAG,GAAG,UAAU,CAAC,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACtH,gBAAgB,IAAI,GAAG,IAAI,IAAI,EAAE;IACjC,oBAAoB,OAAO,QAAQ,GAAG,CAAC,EAAE;IACzC,wBAAwB,MAAM,cAAc,GAAG,UAAU,CAAC,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7I,wBAAwB,IAAI,cAAc,IAAI,IAAI,EAAE;IACpD,4BAA4B,GAAG,GAAG,cAAc,CAAC;IACjD,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,QAAQ,EAAE,CAAC;IACvC,4BAA4B,MAAM;IAClC,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClE,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClE,oBAAoB,KAAK,GAAG,IAAI,CAAC;IACjC,oBAAoB,MAAM;IAC1B,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,OAAO,GAAG,QAAQ,GAAG,CAAC,CAAC;IACvC;IACA,YAAY,IAAI,KAAK,EAAE;IACvB,gBAAgB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxC,gBAAgB,IAAI,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACnH,gBAAgB,OAAO,OAAO,GAAG,MAAM,EAAE,OAAO,EAAE,EAAE;IACpD,oBAAoB,MAAM,GAAG,GAAG,UAAU,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACjI;IACA;IACA;IACA;IACA,oBAAoB,IAAI,GAAG,IAAI,IAAI;IACnC,wBAAwB,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,iBAAiB;IAC3F,wBAAwB,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,iBAAiB,EAAE;IAC7F,wBAAwB,cAAc,GAAG,GAAG,CAAC;IAC7C,wBAAwB,eAAe,GAAG,CAAC,CAAC;IAC5C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,eAAe,GAAG,UAAU,CAAC,qBAAqB,EAAE;IAChF,4BAA4B,MAAM;IAClC,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,eAAe,EAAE,CAAC;IAC9C,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,eAAe,GAAG,CAAC,CAAC;IAC/C,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACxE,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACxE,aAAa;IACb,YAAY,IAAI,OAAO,GAAG,QAAQ,GAAG,UAAU,CAAC,kBAAkB,EAAE;IACpE,gBAAgB,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC3F,YAAY,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC/D,YAAY,IAAI,YAAY,GAAG,MAAM,CAAC;IACtC,YAAY,IAAI,UAAU,GAAG,CAAC,CAAC;IAC/B;IACA,YAAY,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,IAAI,YAAY,GAAG,CAAC,IAAI,UAAU,EAAE,GAAG,UAAU,CAAC,eAAe,EAAE;IACnH,gBAAgB,YAAY,EAAE,CAAC;IAC/B,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,YAAY,CAAC;IACjC,YAAY,IAAI,eAAe,GAAG,CAAC,CAAC;IACpC,YAAY,IAAI,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;IAC/C,YAAY,KAAK,IAAI,OAAO,GAAG,UAAU,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;IAC3D,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC/C,gBAAgB,IAAI,KAAK,KAAK,OAAO,EAAE;IACvC,oBAAoB,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC;IAChD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,eAAe,KAAK,aAAa,GAAG,CAAC,EAAE;IAC/D,wBAAwB,IAAI,UAAU,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,uBAAuB,CAAC,GAAG,UAAU,CAAC,gBAAgB,EAAE;IAClJ,4BAA4B,OAAO,IAAI,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;IACrE,yBAAyB;IACzB,wBAAwB,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClE,wBAAwB,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;IACxF,wBAAwB,QAAQ,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1D,wBAAwB,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IACtD,wBAAwB,eAAe,EAAE,CAAC;IAC1C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,eAAe,EAAE,CAAC;IAC1C,qBAAqB;IACrB,oBAAoB,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAClD,oBAAoB,OAAO,GAAG,CAAC,OAAO,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,eAAe,KAAK,aAAa,GAAG,CAAC;IACrD,gBAAgB,UAAU,CAAC,oBAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC,uBAAuB,CAAC,GAAG,UAAU,CAAC,gBAAgB,EAAE;IACtI,gBAAgB,OAAO,IAAI,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,oBAAoB,CAAC,QAAQ,EAAE,OAAO,EAAE,qBAAqB,EAAE;IAC9E,YAAY,IAAI,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC9C,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;IAC1B,YAAY,IAAI,aAAa,GAAG,CAAC,CAAC;IAClC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;IAClD,gBAAgB,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,gBAAgB,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,aAAa;IACb,YAAY,IAAI,KAAK,GAAG,aAAa,EAAE;IACvC;IACA;IACA,gBAAgB,mCAAmC,QAAQ,CAAC;IAC5D,aAAa;IACb;IACA;IACA;IACA,YAAY,IAAI,YAAY,GAAG,KAAK,GAAG,aAAa,CAAC;IACrD,YAAY,qBAAqB,IAAI,YAAY,CAAC;IAClD,YAAY,IAAI,aAAa,GAAG,GAAG,CAAC;IACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;IAClD,gBAAgB,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;IAC9D,gBAAgB,IAAI,QAAQ,GAAG,OAAO,GAAG,aAAa,GAAG,OAAO,GAAG,aAAa,GAAG,aAAa,GAAG,OAAO,CAAC;IAC3G,gBAAgB,IAAI,QAAQ,GAAG,qBAAqB,EAAE;IACtD,oBAAoB,mCAAmC,QAAQ,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,aAAa,IAAI,QAAQ,CAAC;IAC1C,aAAa;IACb,YAAY,OAAO,aAAa,GAAG,KAAK,CAAC;IACzC,SAAS;IACT,KAAK;IACL,IAAI,UAAU,CAAC,qBAAqB,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrE,IAAI,UAAU,CAAC,oBAAoB,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpE,IAAI,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACvC,IAAI,UAAU,CAAC,uBAAuB,GAAG,GAAG,CAAC;IAC7C;IACA;IACA,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzE;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC;IACnC,IAAI,UAAU,CAAC,iBAAiB,GAAG,CAAC,CAAC;IACrC;IACA;IACA,IAAI,UAAU,CAAC,qBAAqB,GAAG,EAAE,CAAC;IAC1C;IACA;IACA,IAAI,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC5B,IAAI,UAAU,CAAC,kBAAkB,GAAG,EAAE,CAAC;AACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,WAAW,CAAC;IAChC,QAAQ,WAAW,CAAC,KAAK,EAAE,YAAY,EAAE;IACzC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;IAC3C,gBAAgB,MAAM,IAAI,wBAAwB,EAAE,CAAC;IACrD,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,YAAY,IAAI,kBAAkB,WAAW,YAAY,CAAC,MAAM,CAAC;IACjE,YAAY,IAAI,kBAAkB,GAAG,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACjE;IACA,gBAAgB,IAAI,YAAY,WAAW,CAAC,CAAC;IAC7C,gBAAgB,OAAO,YAAY,GAAG,kBAAkB,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;IAC9F,oBAAoB,YAAY,EAAE,CAAC;IACnC,iBAAiB;IACjB,gBAAgB,IAAI,YAAY,KAAK,kBAAkB,EAAE;IACzD,oBAAoB,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,YAAY,GAAG,IAAI,UAAU,CAAC,kBAAkB,GAAG,YAAY,CAAC,CAAC;IAC1F,oBAAoB,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACjH,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACjD,aAAa;IACb,SAAS;IACT,QAAQ,eAAe,GAAG;IAC1B,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC;IACrC,SAAS;IACT;IACA;IACA;IACA,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IAChD,SAAS;IACT;IACA;IACA;IACA,QAAQ,MAAM,GAAG;IACjB,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC9C,SAAS;IACT;IACA;IACA;IACA,QAAQ,cAAc,CAAC,MAAM,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;IAC5E,SAAS;IACT;IACA;IACA;IACA,QAAQ,UAAU,CAAC,CAAC,EAAE;IACtB,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB;IACA,gBAAgB,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC9C,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB;IACA,gBAAgB,IAAI,GAAG,WAAW,CAAC,CAAC;IACpC,gBAAgB,KAAK,IAAI,WAAW,YAAY,IAAI,CAAC,YAAY,EAAE;IACnE,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC3D,iBAAiB;IACjB,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;IACb,YAAY,IAAI,MAAM,WAAW,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACtD,YAAY,IAAI,IAAI,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACxD,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnD,gBAAgB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9F,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,GAAG,CAAC,KAAK,EAAE;IACnB,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;IACjD,gBAAgB,MAAM,IAAI,wBAAwB,CAAC,+CAA+C,CAAC,CAAC;IACpG,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;IAC/B,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IACb,YAAY,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;IAChC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC;IACxD,YAAY,IAAI,kBAAkB,GAAG,KAAK,CAAC,YAAY,CAAC;IACxD,YAAY,IAAI,mBAAmB,CAAC,MAAM,GAAG,kBAAkB,CAAC,MAAM,EAAE;IACxE,gBAAgB,IAAI,IAAI,GAAG,mBAAmB,CAAC;IAC/C,gBAAgB,mBAAmB,GAAG,kBAAkB,CAAC;IACzD,gBAAgB,kBAAkB,GAAG,IAAI,CAAC;IAC1C,aAAa;IACb,YAAY,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IACpE,YAAY,IAAI,UAAU,WAAW,kBAAkB,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC;IAC5F;IACA,YAAY,MAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IAC5E,YAAY,KAAK,IAAI,CAAC,WAAW,UAAU,EAAE,CAAC,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjF,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IACxG,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,QAAQ,CAAC,KAAK,EAAE;IACxB,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;IACjD,gBAAgB,MAAM,IAAI,wBAAwB,CAAC,+CAA+C,CAAC,CAAC;IACpG,aAAa;IACb,YAAY,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;IAChC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,QAAQ,CAAC,KAAK,EAAE;IACxB,YAAY,IAAI,KAAK,YAAY,WAAW,EAAE;IAC9C,gBAAgB,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,aAAa,CAAC,KAAK,EAAE;IAC7B,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;IACjD,gBAAgB,MAAM,IAAI,wBAAwB,CAAC,+CAA+C,CAAC,CAAC;IACpG,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;IACjD;IACA,gBAAgB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,aAAa;IACb,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;IAClD,YAAY,IAAI,OAAO,WAAW,aAAa,CAAC,MAAM,CAAC;IACvD,YAAY,IAAI,aAAa,GAAG,KAAK,CAAC,YAAY,CAAC;IACnD,YAAY,IAAI,OAAO,WAAW,aAAa,CAAC,MAAM,CAAC;IACvD,YAAY,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;IAChE,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,MAAM,WAAW,aAAa,CAAC,CAAC,CAAC,CAAC;IACtD,gBAAgB,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IAC1D,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnH,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,QAAQ,GAAG;IACnB,YAAY,IAAI,IAAI,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACxD,YAAY,IAAI,oBAAoB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAC5D,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnD,gBAAgB,oBAAoB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;IACrE,SAAS;IACT,QAAQ,cAAc,CAAC,MAAM,EAAE;IAC/B,YAAY,IAAI,MAAM,KAAK,CAAC,EAAE;IAC9B,gBAAgB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,aAAa;IACb,YAAY,IAAI,MAAM,KAAK,CAAC,EAAE;IAC9B,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,IAAI,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACxD,YAAY,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/C,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnD,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC/E,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,kBAAkB,CAAC,MAAM,EAAE,WAAW,EAAE;IAChD,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE;IAC5B,gBAAgB,MAAM,IAAI,wBAAwB,EAAE,CAAC;IACrD,aAAa;IACb,YAAY,IAAI,WAAW,KAAK,CAAC,EAAE;IACnC,gBAAgB,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,aAAa;IACb,YAAY,IAAI,IAAI,WAAW,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACxD,YAAY,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;IACxD,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnD,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;IACpF,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACxD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,IAAI,MAAM,GAAG,IAAI,aAAa,2BAA2B,CAAC;IACtE,YAAY,KAAK,IAAI,MAAM,WAAW,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE;IAC/E,gBAAgB,IAAI,WAAW,WAAW,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACtE,gBAAgB,IAAI,WAAW,KAAK,CAAC,EAAE;IACvC,oBAAoB,IAAI,WAAW,GAAG,CAAC,EAAE;IACzC,wBAAwB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7C,wBAAwB,WAAW,GAAG,CAAC,WAAW,CAAC;IACnD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;IACjD,4BAA4B,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjD,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,EAAE;IAC3D,wBAAwB,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACnD,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,KAAK,CAAC,EAAE;IACtC,wBAAwB,IAAI,MAAM,KAAK,CAAC,EAAE;IAC1C,4BAA4B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/C,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,4BAA4B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAClD,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrC,SAAS;IACT,KAAK;AACL;IACA,IAAI,MAAM,WAAW,CAAC;IACtB,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;IAClB,YAAY,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;IAC1C,SAAS;IACT,QAAQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;IACvB,YAAY,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;IACzD,SAAS;IACT,QAAQ,GAAG,CAAC,CAAC,EAAE;IACf,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,GAAG,CAAC,CAAC,EAAE;IACf,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,MAAM,IAAI,wBAAwB,EAAE,CAAC;IACrD,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC,EAAE;IACnB,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,MAAM,IAAI,mBAAmB,EAAE,CAAC;IAChD,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE,SAAS;IACT,QAAQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;IACvB,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACpC,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7F,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC;IAChC,SAAS;IACT,QAAQ,MAAM,CAAC,CAAC,EAAE;IAClB,YAAY,OAAO,CAAC,KAAK,IAAI,CAAC;IAC9B,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,qBAAqB,MAAM,SAAS,SAAS,WAAW,CAAC;IACzD;IACA,QAAQ,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE;IACxC,YAAY,KAAK,EAAE,CAAC;IACpB,YAAY,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACnC,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;IACpD,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;IACpD,YAAY,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9B,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,IAAI,OAAO,CAAC;IAC9C,aAAa;IACb,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1D,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACpD,aAAa;IACb;IACA,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,MAAM,GAAG;IACjB,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC;IAC5B,SAAS;IACT,QAAQ,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE;IAC3C,YAAY,IAAI,MAAM,GAAG,CAAC,EAAE;IAC5B,gBAAgB,MAAM,IAAI,wBAAwB,EAAE,CAAC;IACrD,aAAa;IACb,YAAY,IAAI,WAAW,KAAK,CAAC,EAAE;IACnC,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC;IACjC,aAAa;IACb,YAAY,IAAI,YAAY,GAAG,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1D,YAAY,YAAY,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC1C,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACvD,SAAS;IACT,KAAK;IACL,IAAI,SAAS,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;AAC7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,qBAAqB,MAAM,eAAe,CAAC;IAC3C,QAAQ,WAAW,GAAG;IACtB,YAAY,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC;IAC7C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,CAAC,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE;IACnD,YAAY,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC7D,YAAY,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,cAAc,CAAC,CAAC;IACnD,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;IAC9B,YAAY,KAAK,IAAI,CAAC,WAAW,cAAc,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,gBAAgB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,gBAAgB,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IACnD,gBAAgB,IAAI,UAAU,KAAK,CAAC,EAAE;IACtC,oBAAoB,KAAK,GAAG,IAAI,CAAC;IACjC,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,EAAE;IACxB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IAClD,YAAY,IAAI,QAAQ,IAAI,IAAI,EAAE;IAClC,gBAAgB,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;IAChD,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;IAC1E;IACA,oBAAoB,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G,oBAAoB,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7D,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC1D;IACA,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;IAC/H,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC;IACA,YAAY,IAAI,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAChE,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;IACzF,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpE,gBAAgB,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,gBAAgB,IAAI,QAAQ,GAAG,CAAC,EAAE;IAClC,oBAAoB,MAAM,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;IAClE,iBAAiB;IACjB,gBAAgB,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IACjG,aAAa;IACb,YAAY,OAAO,cAAc,CAAC,MAAM,CAAC;IACzC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,qBAAqB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvC;IACA,YAAY,IAAI,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;IAC/C,gBAAgB,IAAI,IAAI,GAAG,CAAC,CAAC;IAC7B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,gBAAgB,CAAC,GAAG,IAAI,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;IAC1B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC7C,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACxC;IACA,YAAY,OAAO,CAAC,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACvD,gBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC;IACtC,gBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC;IACtC,gBAAgB,KAAK,GAAG,CAAC,CAAC;IAC1B,gBAAgB,KAAK,GAAG,CAAC,CAAC;IAC1B;IACA,gBAAgB,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;IACpC;IACA,oBAAoB,MAAM,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;IAClE,iBAAiB;IACjB,gBAAgB,CAAC,GAAG,SAAS,CAAC;IAC9B,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC7C,gBAAgB,IAAI,sBAAsB,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACrF,gBAAgB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC5E,gBAAgB,OAAO,CAAC,CAAC,SAAS,EAAE,IAAI,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;IAC1E,oBAAoB,IAAI,UAAU,GAAG,CAAC,CAAC,SAAS,EAAE,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;IACvE,oBAAoB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC;IACjG,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3E,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;IAChF,iBAAiB;IACjB,gBAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC;IACrE,aAAa;IACb,YAAY,IAAI,gBAAgB,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACvD,YAAY,IAAI,gBAAgB,KAAK,CAAC,EAAE;IACxC,gBAAgB,MAAM,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;IAC9D,aAAa;IACb,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC/D,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5C,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC5C,YAAY,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAClC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,kBAAkB,CAAC,YAAY,EAAE;IACzC;IACA,YAAY,IAAI,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IACrD,YAAY,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;IACnD,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IACpF,gBAAgB,IAAI,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACtD,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtD,oBAAoB,CAAC,EAAE,CAAC;IACxB,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,SAAS,EAAE;IACjC,gBAAgB,MAAM,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;IAC9D,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,mBAAmB,CAAC,cAAc,EAAE,YAAY,EAAE,cAAc,EAAE;IAC1E,YAAY,IAAI,kBAAkB,GAAG,YAAY,CAAC,SAAS,EAAE,CAAC;IAC9D,YAAY,IAAI,4BAA4B,GAAG,IAAI,UAAU,CAAC,kBAAkB,CAAC,CAAC;IAClF,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,kBAAkB,EAAE,CAAC,EAAE,EAAE;IAClE,gBAAgB,4BAA4B,CAAC,kBAAkB,GAAG,CAAC,CAAC;IACpE,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,aAAa;IACb,YAAY,IAAI,gBAAgB,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,4BAA4B,CAAC,CAAC;IAC7F;IACA,YAAY,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC;IAC1C,YAAY,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3C,YAAY,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChD,gBAAgB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,gBAAgB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7F,gBAAgB,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IAC7F,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IACxE,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,WAAW,CAAC;IAChC,QAAQ,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE;IACvE,YAAY,IAAI,KAAK,YAAY,WAAW,EAAE;IAC9C,gBAAgB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;IACtF,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE;IACzE,YAAY,MAAM,eAAe,GAAG,OAAO,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC;IAC1E,YAAY,MAAM,gBAAgB,GAAG,QAAQ,IAAI,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC;IAC7E,YAAY,IAAI,eAAe,IAAI,gBAAgB,EAAE;IACrD,gBAAgB,MAAM,IAAI,iBAAiB,EAAE,CAAC;IAC9C,aAAa;IACb,YAAY,IAAI,eAAe,EAAE;IACjC,gBAAgB,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IAC9D,gBAAgB,UAAU,GAAG,IAAI,WAAW,CAAC,CAAC,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACpE,aAAa;IACb,iBAAiB,IAAI,gBAAgB,EAAE;IACvC,gBAAgB,QAAQ,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACjF,gBAAgB,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;IACvF,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,YAAY,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACnC,YAAY,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACzC,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACrC,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChF,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClF,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC9E,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACpF,SAAS;IACT,QAAQ,aAAa,CAAC,WAAW,EAAE;IACnC,YAAY,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;IAC3C,YAAY,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;IACpD,YAAY,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,aAAa,EAAE,CAAC;IAC1D,YAAY,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;IACtD,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;IAC5D,YAAY,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9C,YAAY,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9C,YAAY,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9C,YAAY,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC;IAC9C,SAAS;IACT;IACA;IACA;IACA,QAAQ,OAAO,KAAK,CAAC,OAAO,EAAE,QAAQ,EAAE;IACxC,YAAY,IAAI,OAAO,IAAI,IAAI,EAAE;IACjC,gBAAgB,OAAO,QAAQ,CAAC;IAChC,aAAa;IACb,YAAY,IAAI,QAAQ,IAAI,IAAI,EAAE;IAClC,gBAAgB,OAAO,OAAO,CAAC;IAC/B,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;IAChI,SAAS;IACT;IACA;IACA;IACA,QAAQ,cAAc,CAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE;IACjE,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;IAC1C,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;IAChD,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC5C,YAAY,IAAI,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;IAClD,YAAY,IAAI,gBAAgB,GAAG,CAAC,EAAE;IACtC,gBAAgB,IAAI,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChE,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,gBAAgB,CAAC,CAAC;IACxE,gBAAgB,IAAI,OAAO,GAAG,CAAC,EAAE;IACjC,oBAAoB,OAAO,GAAG,CAAC,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,MAAM,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAClE,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,UAAU,GAAG,MAAM,CAAC;IACxC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,WAAW,GAAG,MAAM,CAAC;IACzC,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,cAAc,GAAG,CAAC,EAAE;IACpC,gBAAgB,IAAI,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;IACzE,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,cAAc,CAAC,CAAC;IACzE,gBAAgB,IAAI,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE;IACvD,oBAAoB,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACzD,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IACxE,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,aAAa,GAAG,SAAS,CAAC;IAC9C,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,cAAc,GAAG,SAAS,CAAC;IAC/C,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IACvG,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,UAAU,GAAG;IACrB,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC;IAChC,SAAS;IACT,QAAQ,WAAW,GAAG;IACtB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS;IACT,QAAQ,aAAa,GAAG;IACxB,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC;IACnC,SAAS;IACT,QAAQ,cAAc,GAAG;IACzB,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC;IACpC,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,eAAe,CAAC;IACpC,QAAQ,WAAW,CAAC,WAAW,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE;IAC7F,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,YAAY,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;IAC7D,YAAY,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IACvD,YAAY,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IACvD,YAAY,IAAI,CAAC,QAAQ,GAAG,iBAAiB,GAAG,iBAAiB,CAAC;IAClE,SAAS;IACT,QAAQ,cAAc,GAAG;IACzB,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC;IACpC,SAAS;IACT,QAAQ,uBAAuB,GAAG;IAClC,YAAY,OAAO,IAAI,CAAC,oBAAoB,CAAC;IAC7C,SAAS;IACT,QAAQ,WAAW,GAAG;IACtB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS;IACT,QAAQ,oBAAoB,GAAG;IAC/B,YAAY,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC1C,SAAS;IACT,QAAQ,oBAAoB,GAAG;IAC/B,YAAY,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC1C,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,MAAM,SAAS,CAAC;IACpB,QAAQ,WAAW,GAAG;IACtB,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAC7B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;IAC9B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,YAAY,SAAS,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACvD,gBAAgB,IAAI,GAAG,KAAK,IAAI;IAChC,oBAAoB,OAAO,GAAG,CAAC;IAC/B,gBAAgB,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS;IAC1C,oBAAoB,OAAO,SAAS,CAAC;IACrC,gBAAgB,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9D,gBAAgB,IAAI,IAAI,GAAG,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACnE,gBAAgB,IAAI,GAAG,CAAC;IACxB,gBAAgB,QAAQ,EAAE;IAC1B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9D,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAClE,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACpE,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;IAC1E,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,GAAG;IAC5B,wBAAwB,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzG,wBAAwB,MAAM;IAC9B,iBAAiB;IACjB,gBAAgB,GAAG,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5F,gBAAgB,IAAI,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxC,gBAAgB,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAChE,gBAAgB,OAAO,GAAG,CAAC,MAAM,GAAG,IAAI;IACxC,oBAAoB,GAAG,GAAG,EAAE,KAAK,SAAS,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IACjE,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;IACb,YAAY,IAAI,KAAK,GAAG,uDAAuD,CAAC;IAChF,YAAY,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAChD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE;IAChC,YAAY,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACxD,SAAS;IACT;IACA;IACA;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;IAC/B,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,qBAAqB,CAAC;IAChC,QAAQ,WAAW,CAAC,WAAW,EAAE;IACjC,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC;IAC5D;IACA,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1F,SAAS;IACT,kBAAkB,iBAAiB,CAAC,QAAQ,EAAE;IAC9C,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,QAAQ,IAAI,IAAI,EAAE;IAClC,gBAAgB,OAAO,QAAQ,CAAC;IAChC,aAAa;IACb,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;IAChF,gBAAgB,IAAI,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC9E,gBAAgB,IAAI,YAAY,IAAI,CAAC,EAAE;IACvC,oBAAoB,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAC5D,oBAAoB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC1C,wBAAwB,OAAO,QAAQ,CAAC;IACxC,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC1E,gBAAgB,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;IAC1D,oBAAoB,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAC5D,oBAAoB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC1C,wBAAwB,OAAO,QAAQ,CAAC;IACxC,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,sBAAsB,uBAAuB,CAAC,QAAQ,EAAE;IACxD,YAAY,OAAO,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IACzD,SAAS;IACT,uBAAuB,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE;IACvD,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC;IAC9E,SAAS;IACT,kBAAkB,WAAW,CAAC,QAAQ,EAAE;IACxC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1E,SAAS;IACT,kBAAkB,cAAc,GAAG;IACnC,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC;IACpC,SAAS;IACT,kBAAkB,YAAY,GAAG;IACjC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC;IAClC,SAAS;IACT;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;IAC9C,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC;IACxB,YAAY,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;IACnD,gBAAgB,IAAI,QAAQ,IAAI,IAAI,EAAE;IACtC,oBAAoB,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9D,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,YAAY,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IACxG,aAAa;IACb,YAAY,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;IACxC,SAAS;IACT,KAAK;IACL,IAAI,qBAAqB,CAAC,mBAAmB,GAAG,CAAC,CAAC;AAClD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,YAAY,CAAC;IACjC,QAAQ,WAAW,GAAG;IACtB,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;IACpC,SAAS;IACT;IACA;IACA;IACA,QAAQ,QAAQ,CAAC,KAAK,EAAE;IACxB,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtC,YAAY,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpD,YAAY,IAAI,UAAU,IAAI,IAAI,EAAE;IACpC,gBAAgB,UAAU,GAAG,CAAC,CAAC;IAC/B,aAAa;IACb,YAAY,UAAU,EAAE,CAAC;IACzB,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IAC/C,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;IACrC,YAAY,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;IAC9D,gBAAgB,MAAM,KAAK,GAAG;IAC9B,oBAAoB,MAAM,EAAE,MAAM,GAAG;IACrC,oBAAoB,QAAQ,EAAE,MAAM,KAAK;IACzC,iBAAiB,CAAC;IAClB,gBAAgB,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,aAAa,EAAE;IACtD,oBAAoB,aAAa,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IACrD,oBAAoB,MAAM,GAAG,EAAE,CAAC;IAChC,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAChD,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,aAAa,EAAE;IAC7D,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAChD,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACnD,SAAS;IACT,QAAQ,aAAa,CAAC,KAAK,EAAE;IAC7B,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC1C,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,iCAAiC,SAAS,qBAAqB,CAAC;IACpF,QAAQ,WAAW,CAAC,WAAW,EAAE,MAAM,EAAE;IACzC,YAAY,KAAK,CAAC,WAAW,CAAC,CAAC;IAC/B,YAAY,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAClC,SAAS;IACT,QAAQ,aAAa,GAAG;IACxB,YAAY,KAAK,IAAI,QAAQ,iBAAiB,IAAI,CAAC,YAAY,EAAE,EAAE;IACnE,gBAAgB,IAAI,QAAQ,IAAI,IAAI,EAAE;IACtC,oBAAoB,QAAQ,CAAC,gCAAgC,EAAE,CAAC;IAChE,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,uCAAuC,CAAC,eAAe,EAAE;IACjE,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAChD,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;IACjC,YAAY,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IACtE,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IACpD,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,UAAU,EAAE,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;IAC1F,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,aAAa,EAAE,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;IACnG,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChF,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClF;IACA;IACA;IACA,YAAY,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,YAAY,GAAG,CAAC,CAAC;IACjC,YAAY,IAAI,gBAAgB,GAAG,CAAC,CAAC;IACrC,YAAY,KAAK,IAAI,YAAY,WAAW,QAAQ,EAAE,YAAY,GAAG,OAAO,EAAE,YAAY,EAAE,EAAE;IAC9F,gBAAgB,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;IACrD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;IACvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,gBAAgB,IAAI,aAAa,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,UAAU,CAAC;IACzE;IACA,gBAAgB,IAAI,aAAa,KAAK,CAAC,EAAE;IACzC,oBAAoB,gBAAgB,EAAE,CAAC;IACvC,iBAAiB;IACjB,qBAAqB,IAAI,aAAa,KAAK,CAAC,EAAE;IAC9C,oBAAoB,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAC5E,oBAAoB,gBAAgB,GAAG,CAAC,CAAC;IACzC,oBAAoB,UAAU,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IACzD,iBAAiB;IACjB,qBAAqB,IAAI,aAAa,GAAG,CAAC;IAC1C,oBAAoB,QAAQ,CAAC,YAAY,EAAE,IAAI,eAAe,CAAC,WAAW,EAAE;IAC5E,oBAAoB,aAAa,GAAG,YAAY,EAAE;IAClD,oBAAoB,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IACnD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,WAAW,CAAC;IACpC,oBAAoB,IAAI,YAAY,GAAG,CAAC,EAAE;IAC1C,wBAAwB,WAAW,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,aAAa,CAAC;IACzE,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,WAAW,GAAG,aAAa,CAAC;IACpD,qBAAqB;IACrB,oBAAoB,IAAI,0BAA0B,GAAG,WAAW,IAAI,YAAY,CAAC;IACjF,oBAAoB,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,WAAW,IAAI,CAAC,0BAA0B,EAAE,CAAC,EAAE,EAAE;IAClG;IACA;IACA,wBAAwB,0BAA0B,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;IACzF,qBAAqB;IACrB,oBAAoB,IAAI,0BAA0B,EAAE;IACpD,wBAAwB,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IACvD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,UAAU,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IAC7D,wBAAwB,gBAAgB,GAAG,CAAC,CAAC;IAC7C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb;IACA,SAAS;IACT,QAAQ,aAAa,GAAG;IACxB,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5D,YAAY,IAAI,eAAe,IAAI,IAAI,EAAE;IACzC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,CAAC,yCAAyC,CAAC,eAAe,CAAC,CAAC;IAC5E,YAAY,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC;IACvE,YAAY,KAAK,IAAI,QAAQ,iBAAiB,IAAI,CAAC,YAAY,EAAE,EAAE;IACnE,gBAAgB,IAAI,QAAQ,IAAI,IAAI,EAAE;IACtC,oBAAoB,IAAI,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IAC5D,oBAAoB,IAAI,SAAS,IAAI,MAAM,CAAC,MAAM,EAAE;IACpD;IACA,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,oBAAoB,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;IACxC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA,QAAQ,yCAAyC,CAAC,eAAe,EAAE;IACnE,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IACpD,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,UAAU,EAAE,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;IAC1F,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,aAAa,EAAE,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;IACnG,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChF,YAAY,IAAI,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClF;IACA,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAChD,YAAY,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC;IAChC,YAAY,KAAK,IAAI,YAAY,WAAW,QAAQ,EAAE,YAAY,GAAG,OAAO,EAAE,YAAY,EAAE,EAAE;IAC9F,gBAAgB,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;IACrD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;IACvD,gBAAgB,QAAQ,CAAC,gCAAgC,EAAE,CAAC;IAC5D,gBAAgB,IAAI,aAAa,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,UAAU,CAAC;IACzE;IACA,gBAAgB,IAAI,aAAa,KAAK,CAAC,EAAE,CAAC;IAC1C,qBAAqB,IAAI,aAAa,KAAK,CAAC,EAAE;IAC9C,oBAAoB,UAAU,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IACzD,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,YAAY,EAAE,IAAI,eAAe,CAAC,WAAW,EAAE,EAAE;IACnF,oBAAoB,SAAS,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IACnD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,UAAU,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IACzD,iBAAiB;IACjB,aAAa;IACb;IACA,SAAS;IACT,QAAQ,kBAAkB,GAAG;IAC7B,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IAChD,YAAY,IAAI,kBAAkB,GAAG,IAAI,YAAY,EAAE,CAAC;IACxD,YAAY,IAAI,wBAAwB,GAAG,IAAI,YAAY,EAAE,CAAC;IAC9D,YAAY,IAAI,wBAAwB,GAAG,IAAI,YAAY,EAAE,CAAC;IAC9D,YAAY,IAAI,cAAc,GAAG,IAAI,YAAY,EAAE,CAAC;IACpD,YAAY,KAAK,IAAI,QAAQ,iBAAiB,SAAS,EAAE;IACzD,gBAAgB,IAAI,QAAQ,IAAI,IAAI,EAAE;IACtC,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,QAAQ,CAAC,gCAAgC,EAAE,CAAC;IAC5D,gBAAgB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;IACjE,gBAAgB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IAChE,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IACnC,oBAAoB,iBAAiB,IAAI,CAAC,CAAC;IAC3C,iBAAiB;IACjB,gBAAgB,QAAQ,iBAAiB,GAAG,CAAC;IAC7C,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,wBAAwB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrF,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,cAAc,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;IACvE,wBAAwB,wBAAwB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;IACjF,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,kBAAkB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAC3E,wBAAwB,MAAM;IAC9B,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC;IAC3D,iBAAiB,wBAAwB,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;IAClE,iBAAiB,wBAAwB,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;IAClE,iBAAiB,cAAc,CAAC,QAAQ,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;IACxD,gBAAgB,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IACpD,gBAAgB,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,mBAAmB;IAClI,gBAAgB,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,mBAAmB,EAAE;IACpI,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,eAAe,GAAG,IAAI,eAAe,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,wBAAwB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACtM,YAAY,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IACtE,YAAY,OAAO,eAAe,CAAC;IACnC,SAAS;IACT,QAAQ,wBAAwB,CAAC,SAAS,EAAE,eAAe,EAAE;IAC7D;IACA;IACA,YAAY,KAAK,IAAI,WAAW,WAAW,CAAC,EAAE,WAAW,GAAG,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE;IAC7F,gBAAgB,IAAI,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;IACtD,gBAAgB,IAAI,SAAS,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;IACpD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;IACjE,gBAAgB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;IAChE,gBAAgB,IAAI,iBAAiB,GAAG,eAAe,CAAC,WAAW,EAAE,EAAE;IACvE,oBAAoB,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAClD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IACnC,oBAAoB,iBAAiB,IAAI,CAAC,CAAC;IAC3C,iBAAiB;IACjB,gBAAgB,QAAQ,iBAAiB,GAAG,CAAC;IAC7C,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,IAAI,iBAAiB,GAAG,CAAC,GAAG,CAAC,KAAK,eAAe,CAAC,oBAAoB,EAAE,EAAE;IAClG,4BAA4B,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC1D,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,IAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,KAAK,eAAe,CAAC,uBAAuB,EAAE;IAC3G,4BAA4B,iBAAiB,GAAG,CAAC,KAAK,eAAe,CAAC,oBAAoB,EAAE,EAAE;IAC9F,4BAA4B,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC1D,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,oBAAoB,KAAK,CAAC;IAC1B,wBAAwB,IAAI,iBAAiB,GAAG,CAAC,KAAK,eAAe,CAAC,cAAc,EAAE,EAAE;IACxF,4BAA4B,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC1D,yBAAyB;IACzB,wBAAwB,MAAM;IAC9B,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,MAAM,GAAG;IACjB,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC;IAChC,SAAS;IACT;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,OAAO,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IACvE,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,eAAe,CAAC;IACpC,QAAQ,WAAW,CAAC,eAAe,EAAE,WAAW,EAAE;IAClD,sBAAsB,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;IACtD,YAAY,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACnD,YAAY,IAAI,CAAC,kBAAkB,GAAG,eAAe,CAAC,cAAc,EAAE,CAAC;IACvE,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C;IACA,YAAY,IAAI,CAAC,sBAAsB,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,QAAQ,yBAAyB,GAAG;IACpC,YAAY,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,YAAY,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3G,YAAY,IAAI,uBAAuB,GAAG,YAAY,CAAC,wBAAwB,CAAC;IAChF,YAAY,IAAI,uBAAuB,CAAC;IACxC,YAAY,GAAG;IACf,gBAAgB,uBAAuB,GAAG,uBAAuB,CAAC;IAClE,gBAAgB,uBAAuB,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;IAC7E,aAAa,QAAQ,uBAAuB,GAAG,CAAC,IAAI,uBAAuB,GAAG,uBAAuB,EAAE;IACvG,YAAY,OAAO,IAAI,CAAC,sBAAsB,CAAC;IAC/C,SAAS;IACT,QAAQ,+BAA+B,CAAC,qBAAqB,EAAE;IAC/D,YAAY,IAAI,qBAAqB,IAAI,IAAI,EAAE;IAC/C,gBAAgB,qBAAqB;IACrC,qBAAqB,uCAAuC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACnF,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,2BAA2B,GAAG;IACtC,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/D,YAAY,IAAI,eAAe,KAAK,CAAC,EAAE;IACvC,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,KAAK,IAAI,aAAa,WAAW,CAAC,EAAE,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE,aAAa,EAAE,EAAE;IAC9G,gBAAgB,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC;IAC1F,gBAAgB,KAAK,IAAI,YAAY,WAAW,CAAC,EAAE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;IACpG,oBAAoB,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;IACzD,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,iBAAiB,EAAE,EAAE;IACtE,wBAAwB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;IACtF,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,eAAe,CAAC;IACnC,SAAS;IACT,QAAQ,qBAAqB,GAAG;IAChC,YAAY,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAC9C;IACA;IACA;IACA;IACA,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACjE,YAAY,OAAO,eAAe,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACpE,SAAS;IACT,QAAQ,0BAA0B,GAAG;IACrC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;IAC5H,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,IAAI,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IAC7E,YAAY,IAAI,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACvG,YAAY,KAAK,IAAI,YAAY,WAAW,CAAC,EAAE,YAAY,GAAG,YAAY,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;IACnG,gBAAgB,IAAI,YAAY,CAAC,YAAY,CAAC,IAAI,IAAI;IACtD,oBAAoB,YAAY,CAAC,YAAY,CAAC,IAAI,IAAI;IACtD,oBAAoB,YAAY,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,KAAK,YAAY,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,EAAE;IAC7G,oBAAoB,KAAK,IAAI,aAAa,WAAW,CAAC,EAAE,aAAa,IAAI,IAAI,CAAC,kBAAkB,EAAE,aAAa,EAAE,EAAE;IACnH,wBAAwB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC;IAC/G,wBAAwB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC9C,4BAA4B,SAAS;IACrC,yBAAyB;IACzB,wBAAwB,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC;IACzF,wBAAwB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE;IAC3D,4BAA4B,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;IAC3G,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,uBAAuB,GAAG;IAClC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;IAClF,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,eAAe,GAAG,CAAC,CAAC;IACpC,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACpG,YAAY,KAAK,IAAI,YAAY,WAAW,CAAC,EAAE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;IAChG,gBAAgB,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;IACrD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,qBAAqB,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAC;IACnF,gBAAgB,IAAI,gBAAgB,GAAG,CAAC,CAAC;IACzC,gBAAgB,KAAK,IAAI,aAAa,WAAW,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,IAAI,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,EAAE,aAAa,EAAE,EAAE;IACpK,oBAAoB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC;IAC3G,oBAAoB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC1C,wBAAwB,gBAAgB,GAAG,eAAe,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IACrI,wBAAwB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE;IAC3D,4BAA4B,eAAe,EAAE,CAAC;IAC9C,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,eAAe,CAAC;IACnC,SAAS;IACT,QAAQ,uBAAuB,GAAG;IAClC,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACxD,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,eAAe,GAAG,CAAC,CAAC;IACpC,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IAC1E,YAAY,KAAK,IAAI,YAAY,WAAW,CAAC,EAAE,YAAY,GAAG,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;IAChG,gBAAgB,IAAI,SAAS,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;IACrD,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,qBAAqB,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE,CAAC;IACnF,gBAAgB,IAAI,gBAAgB,GAAG,CAAC,CAAC;IACzC,gBAAgB,KAAK,IAAI,aAAa,WAAW,CAAC,EAAE,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,EAAE,aAAa,EAAE,EAAE;IACpK,oBAAoB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC;IAC3G,oBAAoB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC1C,wBAAwB,gBAAgB,GAAG,eAAe,CAAC,sBAAsB,CAAC,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IACrI,wBAAwB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE;IAC3D,4BAA4B,eAAe,EAAE,CAAC;IAC9C,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,eAAe,CAAC;IACnC,SAAS;IACT,QAAQ,OAAO,sBAAsB,CAAC,qBAAqB,EAAE,gBAAgB,EAAE,QAAQ,EAAE;IACzF,YAAY,IAAI,QAAQ,IAAI,IAAI,EAAE;IAClC,gBAAgB,OAAO,gBAAgB,CAAC;IACxC,aAAa;IACb,YAAY,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE;IAC/C,gBAAgB,IAAI,QAAQ,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,EAAE;IACtE,oBAAoB,QAAQ,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;IACjE,oBAAoB,gBAAgB,GAAG,CAAC,CAAC;IACzC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,EAAE,gBAAgB,CAAC;IACvC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,gBAAgB,CAAC;IACpC,SAAS;IACT,QAAQ,gBAAgB,CAAC,aAAa,EAAE,YAAY,EAAE,SAAS,EAAE;IACjE,YAAY,IAAI,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;IACnD,YAAY,IAAI,uBAAuB,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACxG,YAAY,IAAI,mBAAmB,GAAG,uBAAuB,CAAC;IAC9D,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;IACxE,gBAAgB,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC;IACpG,aAAa;IACb;IACA,YAAY,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;IAC/C,YAAY,cAAc,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,YAAY,CAAC,CAAC;IACtE,YAAY,cAAc,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAClE,YAAY,IAAI,YAAY,GAAG,CAAC,EAAE;IAClC,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAChE,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC9E,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,IAAI,YAAY,GAAG,CAAC,EAAE;IAClC,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAChE,gBAAgB,cAAc,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC/E,gBAAgB,cAAc,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC3E,aAAa;IACb,YAAY,IAAI,YAAY,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACrD,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAChE,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,uBAAuB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC9E,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,mBAAmB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,IAAI,YAAY,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;IACrD,gBAAgB,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAChE,gBAAgB,cAAc,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC/E,gBAAgB,cAAc,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IAC3E,aAAa;IACb,YAAY,KAAK,IAAI,aAAa,IAAI,cAAc,EAAE;IACtD,gBAAgB,IAAI,eAAe,CAAC,eAAe,CAAC,QAAQ,EAAE,aAAa,CAAC,EAAE;IAC9E,oBAAoB,OAAO;IAC3B,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA,QAAQ,OAAO,eAAe,CAAC,QAAQ,EAAE,aAAa,EAAE;IACxD,YAAY,IAAI,aAAa,IAAI,IAAI,EAAE;IACvC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IACb,YAAY,IAAI,aAAa,CAAC,iBAAiB,EAAE,IAAI,aAAa,CAAC,SAAS,EAAE,KAAK,QAAQ,CAAC,SAAS,EAAE,EAAE;IACzG,gBAAgB,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;IACpE,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,qBAAqB,GAAG;IAChC,YAAY,OAAO,IAAI,CAAC,kBAAkB,CAAC;IAC3C,SAAS;IACT,QAAQ,kBAAkB,GAAG;IAC7B,YAAY,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACtD,SAAS;IACT,QAAQ,iBAAiB,GAAG;IAC5B,YAAY,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE,CAAC;IAClE,SAAS;IACT,QAAQ,cAAc,CAAC,WAAW,EAAE;IACpC,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,SAAS;IACT,QAAQ,cAAc,GAAG;IACzB,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC;IACpC,SAAS;IACT,QAAQ,wBAAwB,CAAC,aAAa,EAAE,qBAAqB,EAAE;IACvE,YAAY,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,qBAAqB,CAAC;IAC/E,SAAS;IACT,QAAQ,wBAAwB,CAAC,aAAa,EAAE;IAChD,YAAY,OAAO,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;IAC9D,SAAS;IACT;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,IAAI,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;IACpE,YAAY,IAAI,kBAAkB,IAAI,IAAI,EAAE;IAC5C,gBAAgB,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;IAC9F,aAAa;IACb;IACA,YAAY,IAAI,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;IAC5C;IACA,YAAY,KAAK,IAAI,YAAY,WAAW,CAAC,EAAE,YAAY,GAAG,kBAAkB,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;IACxH,gBAAgB,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAC1D,gBAAgB,KAAK,IAAI,aAAa,WAAW,CAAC,EAAE,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE,aAAa,EAAE,EAAE;IAClH,oBAAoB,IAAI,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE;IAC5E,wBAAwB,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACrD,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,oBAAoB,IAAI,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC,CAAC;IAC3G,oBAAoB,IAAI,QAAQ,IAAI,IAAI,EAAE;IAC1C,wBAAwB,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACrD,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,oBAAoB,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,YAAY,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/F,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvC,aAAa;IACb,YAAY,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;IACxC;IACA,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,QAAQ,CAAC;IAC7B,QAAQ,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;IACjD,YAAY,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,mBAAmB,CAAC;IAC1D,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC7C,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzC,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC7C,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3C,SAAS;IACT,QAAQ,iBAAiB,GAAG;IAC5B,YAAY,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,gBAAgB,CAAC,SAAS,EAAE;IACpC,YAAY,OAAO,SAAS,KAAK,QAAQ,CAAC,mBAAmB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;IACrG,SAAS;IACT,QAAQ,gCAAgC,GAAG;IAC3C,YAAY,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACzG,SAAS;IACT,QAAQ,QAAQ,GAAG;IACnB,YAAY,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3C,SAAS;IACT,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;IAC/B,SAAS;IACT,QAAQ,OAAO,GAAG;IAClB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC;IAC7B,SAAS;IACT,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;IAC/B,SAAS;IACT,QAAQ,QAAQ,GAAG;IACnB,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC;IAC9B,SAAS;IACT,QAAQ,YAAY,GAAG;IACvB,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC;IAClC,SAAS;IACT,QAAQ,YAAY,CAAC,SAAS,EAAE;IAChC,YAAY,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACvC,SAAS;IACT;IACA,QAAQ,QAAQ,GAAG;IACnB,YAAY,OAAO,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACrD,SAAS;IACT,KAAK;IACL,IAAI,QAAQ,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;AACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,cAAc,MAAM,qBAAqB,CAAC;IAC1C;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,UAAU,GAAG;IAC5B;IACA,YAAY,aAAa,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/E,gBAAgB,IAAI,aAAa,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACjE,gBAAgB,IAAI,UAAU,GAAG,aAAa,GAAG,GAAG,CAAC;IACrD,gBAAgB,aAAa,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;IAC9E,oBAAoB,IAAI,IAAI,GAAG,GAAG,CAAC;IACnC,oBAAoB,OAAO,CAAC,aAAa,GAAG,GAAG,MAAM,UAAU,EAAE;IACjE,wBAAwB,IAAI,IAAI,GAAG,CAAC;IACpC,wBAAwB,aAAa,KAAK,CAAC,CAAC;IAC5C,qBAAqB;IACrB,oBAAoB,UAAU,GAAG,aAAa,GAAG,GAAG,CAAC;IACrD,oBAAoB,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;IAChE,wBAAwB,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IACvG,qBAAqB;IACrB,oBAAoB,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,YAAY,CAAC,mBAAmB,CAAC,CAAC;IACtJ,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAC1C,SAAS;IACT,QAAQ,OAAO,eAAe,CAAC,cAAc,EAAE;IAC/C,YAAY,IAAI,YAAY,GAAG,qBAAqB,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC;IACpI,YAAY,IAAI,YAAY,KAAK,CAAC,CAAC,EAAE;IACrC,gBAAgB,OAAO,YAAY,CAAC;IACpC,aAAa;IACb,YAAY,OAAO,qBAAqB,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;IAChF,SAAS;IACT,QAAQ,OAAO,eAAe,CAAC,cAAc,EAAE;IAC/C,YAAY,IAAI,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC5D,YAAY,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IACrE,YAAY,IAAI,aAAa,GAAG,CAAC,CAAC;IAClC,YAAY,IAAI,eAAe,GAAG,CAAC,CAAC;IACpC,YAAY,aAAa,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE;IAC/E,gBAAgB,IAAI,WAAW,GAAG,WAAW,IAAI,CAAC,GAAG,YAAY,CAAC,mBAAmB,CAAC;IACtF,oBAAoB,CAAC,CAAC,GAAG,WAAW,IAAI,YAAY,CAAC,mBAAmB,CAAC;IACzE,gBAAgB,IAAI,eAAe,GAAG,cAAc,CAAC,aAAa,CAAC,IAAI,WAAW,EAAE;IACpF,oBAAoB,eAAe,IAAI,cAAc,CAAC,aAAa,CAAC,CAAC;IACrE,oBAAoB,aAAa,EAAE,CAAC;IACpC,iBAAiB;IACjB,gBAAgB,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;IACxC,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,OAAO,uBAAuB,CAAC,cAAc,EAAE;IACvD,YAAY,IAAI,YAAY,GAAG,qBAAqB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;IACjF,YAAY,OAAO,YAAY,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC;IACrF,SAAS;IACT,QAAQ,OAAO,WAAW,CAAC,cAAc,EAAE;IAC3C,YAAY,IAAI,MAAM,YAAY,CAAC,CAAC;IACpC,YAAY,KAAK,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpE,gBAAgB,aAAa,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE;IAC1E,oBAAoB,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACnE,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACtC,SAAS;IACT;IACA,QAAQ,OAAO,sBAAsB,CAAC,cAAc,EAAE;IACtD,YAAY,IAAI,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC5D,YAAY,IAAI,cAAc,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IACxE,YAAY,IAAI,WAAW,GAAG,CAAC,EAAE;IACjC,gBAAgB,KAAK,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxE,oBAAoB,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC;IACrF,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,cAAc,GAAG,KAAK,CAAC,SAAS,CAAC;IACjD,YAAY,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;IAC/B,YAAY,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;IACzC,gBAAgB,qBAAqB,CAAC,UAAU,EAAE,CAAC;IACnD,aAAa;IACb,YAAY,aAAa,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxF,gBAAgB,IAAI,KAAK,GAAG,GAAG,CAAC;IAChC,gBAAgB,IAAI,aAAa,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC1E,gBAAgB,aAAa,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;IAC9E,oBAAoB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,oBAAoB,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACtD,oBAAoB,IAAI,KAAK,IAAI,cAAc,EAAE;IACjD,wBAAwB,MAAM;IAC9B,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,cAAc,EAAE;IAC5C,oBAAoB,cAAc,GAAG,KAAK,CAAC;IAC3C,oBAAoB,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC7D,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,SAAS,CAAC;IAC7B,SAAS;IACT,KAAK;IACL;IACA,IAAI,qBAAqB,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACpD,IAAI,qBAAqB,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAQ,IAAI,KAAK,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;AAC1I;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,qBAAqB,MAAM,oBAAoB,CAAC;IAChD,QAAQ,WAAW,GAAG;IACtB,YAAY,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC/B,YAAY,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC/B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,eAAe,GAAG;IAC1B,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC;IACrC,SAAS;IACT,QAAQ,eAAe,CAAC,YAAY,EAAE;IACtC,YAAY,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAC7C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC;IAC/B,SAAS;IACT,QAAQ,SAAS,CAAC,MAAM,EAAE;IAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,eAAe,GAAG;IAC1B,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC;IACrC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,eAAe,CAAC,YAAY,EAAE;IACtC,YAAY,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAC7C,SAAS;IACT;IACA;IACA;IACA,QAAQ,aAAa,GAAG;IACxB,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC;IACpC,SAAS;IACT,QAAQ,cAAc,CAAC,WAAW,EAAE;IACpC,YAAY,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IAC3C,SAAS;IACT;IACA;IACA;IACA,QAAQ,eAAe,GAAG;IAC1B,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC;IACrC,SAAS;IACT,QAAQ,eAAe,CAAC,YAAY,UAAU;IAC9C,YAAY,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAC7C,SAAS;IACT,QAAQ,SAAS,GAAG;IACpB,YAAY,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;IACvC,SAAS;IACT,QAAQ,SAAS,CAAC,MAAM,EAAE;IAC1B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,SAAS;IACT,QAAQ,YAAY,GAAG;IACvB,YAAY,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IAC1C,SAAS;IACT,QAAQ,YAAY,CAAC,SAAS,EAAE;IAChC,YAAY,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACvC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,WAAW,GAAG;IACtB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS;IACT,QAAQ,WAAW,CAAC,QAAQ,EAAE;IAC9B,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACrC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,WAAW,GAAG;IACtB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS;IACT,QAAQ,WAAW,CAAC,QAAQ,WAAW;IACvC,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACrC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,WAAW,GAAG;IACtB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS;IACT,QAAQ,WAAW,CAAC,QAAQ,UAAU;IACtC,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACrC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAG;IACvB,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC;IAClC,SAAS;IACT,QAAQ,YAAY,CAAC,SAAS,WAAW;IACzC,YAAY,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACvC,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,MAAM,IAAI,CAAC;IACf;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,SAAS,CAAC,GAAG,EAAE,KAAK,GAAG,SAAS,EAAE;IACjD,YAAY,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACxC,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,MAAM,oBAAoB,SAAS,SAAS,CAAC;IACjD,KAAK;IACL,IAAI,oBAAoB,CAAC,IAAI,GAAG,sBAAsB,CAAC;AACvD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAe,MAAM,YAAY,qCAAqC;IACtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,UAAU,CAAC,CAAC,EAAE;IACtB,YAAY,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;IAClD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,gBAAgB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;IACtC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE;IAC3B,gBAAgB,MAAM,IAAI,oBAAoB,EAAE,CAAC;IACjD,aAAa;IACb,iBAAiB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;IAC/D,iBAAiB,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE;IAC/D,gBAAgB,MAAM,IAAI,yBAAyB,EAAE,CAAC;IACtD,aAAa;IACb,iBAAiB,IAAI,GAAG,KAAK,CAAC,EAAE;IAChC,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC1C,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,GAAG;IAChB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,GAAG;IAChB,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;IACA,IAAI,MAAM,gBAAgB,SAAS,SAAS,CAAC;IAC7C,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAe,MAAM,qBAAqB,SAAS,YAAY,CAAC;IAChE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,WAAW,CAAC,IAAI,GAAG,EAAE,EAAE;IAC/B,YAAY,KAAK,EAAE,CAAC;IACpB;IACA;IACA;IACA,YAAY,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3B,YAAY,IAAI,IAAI,GAAG,CAAC,EAAE;IAC1B,gBAAgB,MAAM,IAAI,wBAAwB,CAAC,yBAAyB;IAC5E,sBAAsB,IAAI,CAAC,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;IAC5C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,cAAc,CAAC,WAAW,EAAE;IACpC;IACA,YAAY,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC;IACjD,gBAAgB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,EAAE;IAC1B;I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AAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EA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"}